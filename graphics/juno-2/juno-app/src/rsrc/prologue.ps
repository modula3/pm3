% Inserted file: juno-app/src/rsrc/prologue.ps
% Last modified on Mon Oct  9 14:16:28 PDT 1995 by heydon

% The following procedures are used to lazily redefine fonts to have
% an ISOLatin1 encoding. This file should be inserted in the Prologue
% section of the PostScript file that adheres to the DSC.

% Of these procedures, the only one that should be used in the body of
% a document is "FindFontISO", which looks up the ISOLatin1-encoded
% version of a font, and lazily creates the ISOLatin1-encoded version
% if it was not defined in the "FontDirectory".

% ISOLatin1
%
% This defines the ISOLatin1 encoding vector, which is defined under
% the name "ISOLatin1Encoding" in Level-2 PostScript, but is defined
% here for Level-1 compatibility. See Appendices E.5 and E.7 of the
% "PostScript Language Reference Manual", Second Edition.
%
/ISOLatin1 [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
  /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
  /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
  /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def

% name AppendISO name
%
% The result name is the same as the argument name, but with the
% string "-ISO" appended.
%
/AppendISO {
  1 dict begin
    dup /bigstr exch length 4 add string def
    dup bigstr cvs pop
    bigstr exch length (-ISO) putinterval
    bigstr cvn
  end
} def

% fontname MakeISOLatin1Font -
%
% Looks up the font "fontname", creates a new font identical to it but
% with the ISOLatin1 encoding, and binds the font to the name "fontname"
% concatenated with the string "-ISO".
%
/MakeISOLatin1Font {
dup findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1 def
  currentdict
end
exch AppendISO exch
definefont pop
} def

% fontname FindFontISO font
%
% Looks up the font with the name "fontname" concatenated with the
% string "-ISO". If that font is not found, it is created from the
% font named "fontname" using the "MakeISOLatin1Font" operator above.
% If "fontname" is "Symbol", then this is equivalent to "findfont",
% since the Symbol font on X uses the standard encoding.
%
/FindFontISO {
  dup /Symbol ne
  { dup FontDirectory exch AppendISO known not
    { dup MakeISOLatin1Font } if
    AppendISO
  } if
  findfont
} def

% end prologue.ps

(* Copyright (C) 1995, Digital Equipment Corporation         *)
(* All rights reserved.                                      *)
(* See the file COPYRIGHT for a full description.            *)
(*                                                           *)
(* Last modified on Tue May 16 08:02:30 PDT 1995 by kalsow   *)
(*                                                           *)
(* Contributed by Harry George (hgeorge@eskimo.com), 5/16/95 *)

UNSAFE MODULE XmN;
(*Generated from Xm.h by ctom3 on 7/26/93*)

FROM M3toC IMPORT FlatTtoS;
IMPORT XtN;

PROCEDURE Init () =
  BEGIN
    IF (accelerator # NIL) THEN RETURN END;

    accelerator := FlatTtoS("accelerator");
    accelerators := FlatTtoS("accelerators");
    acceleratorText := FlatTtoS("acceleratorText");
    adjustLast := FlatTtoS("adjustLast");
    adjustMargin := FlatTtoS("adjustMargin");
    alignment := FlatTtoS("alignment");
    ancestorSensitive := FlatTtoS("ancestorSensitive");
    armCallback := FlatTtoS("armCallback");
    background := FlatTtoS("background");
    backgroundPixmap := FlatTtoS("backgroundPixmap");
    bitmap := FlatTtoS("bitmap");
    borderColor := FlatTtoS("borderColor");
    border := FlatTtoS("borderColor");
    borderPixmap := FlatTtoS("borderPixmap");
    borderWidth := FlatTtoS("borderWidth");
    buttonAccelerators := FlatTtoS("buttonAccelerators");
    buttonAcceleratorText := FlatTtoS("buttonAcceleratorText");
    buttonCount := FlatTtoS("buttonCount");
    buttonMnemoniccharSets := FlatTtoS("buttonMnemoniccharSets");
    buttonMnemonics := FlatTtoS("buttonMnemonics");
    buttons := FlatTtoS("buttons");
    buttonSet := FlatTtoS("buttonSet");
    buttonType := FlatTtoS("buttonType");
    cascadePixmap := FlatTtoS("cascadePixmap");
    cascadingCallback := FlatTtoS("cascadingCallback");
    children := FlatTtoS("children");
    colormap := FlatTtoS("colormap");
    commandWindowLocation := FlatTtoS("commandWindowLocation");
    defaultFontList := FlatTtoS("defaultFontList");
    depth := FlatTtoS("depth");
    destroyCallback := FlatTtoS("destroyCallback");
    disarmCallback := FlatTtoS("disarmCallback");
    editType := FlatTtoS("editType");
    entryAlignment := FlatTtoS("entryAlignment");
    entryBorder := FlatTtoS("entryBorder");
    entryClass := FlatTtoS("entryClass");
    entryCallback := FlatTtoS("entryCallback");
    exposeCallback := FlatTtoS("exposeCallback");
    file := FlatTtoS("file");
    fillOnSelect := FlatTtoS("fillOnSelect");
    filterLabelString := FlatTtoS("filterLabelString");
    font := FlatTtoS("font");
    fontList := FlatTtoS("fontList");
    forceBars := FlatTtoS("forceBars");
    foreground := FlatTtoS("foreground");
    function := FlatTtoS("function");
    height := FlatTtoS("height");
    highlight := FlatTtoS("highlight");
    index := FlatTtoS("index");
    indicatorOn := FlatTtoS("indicatorOn");
    indicatorSize := FlatTtoS("indicatorSize");
    indicatorType := FlatTtoS("indicatorType");
    initialResourcesPersistent := FlatTtoS("initialResourcesPersistent");
    innerHeight := FlatTtoS("innerHeight");
    innerWidth := FlatTtoS("innerWidth");
    innerWindow := FlatTtoS("innerWindow");
    insertPosition := FlatTtoS("insertPosition");
    internalHeight := FlatTtoS("internalHeight");
    internalWidth := FlatTtoS("internalWidth");
    isAligned := FlatTtoS("isAligned");
    isHomogeneous := FlatTtoS("isHomogeneous");
    jumpProc := FlatTtoS("jumpProc");
    justify := FlatTtoS("justify");
    labelInsensitivePixmap := FlatTtoS("labelInsensitivePixmap");
    labelPixmap := FlatTtoS("labelPixmap");
    labelString := FlatTtoS("labelString");
    labelType := FlatTtoS("labelType");
    length := FlatTtoS("length");
    listUpdated := FlatTtoS("listUpdated");
    lowerRight := FlatTtoS("lowerRight");
    mapCallback := FlatTtoS("mapCallback");
    mappedWhenManaged := FlatTtoS("mappedWhenManaged");
    mappingDelay := FlatTtoS("mappingDelay");
    marginHeight := FlatTtoS("marginHeight");
    marginTop := FlatTtoS("marginTop");
    marginBottom := FlatTtoS("marginBottom");
    marginWidth := FlatTtoS("marginWidth");
    marginRight := FlatTtoS("marginRight");
    marginLeft := FlatTtoS("marginLeft");
    menuAccelerator := FlatTtoS("menuAccelerator");
    menuCursor := FlatTtoS("menuCursor");
    menuEntry := FlatTtoS("menuEntry");
    menuHelpWidget := FlatTtoS("menuHelpWidget");
    menuHistory := FlatTtoS("menuHistory");
    menuPost := FlatTtoS("menuPost");
    mnemonic := FlatTtoS("mnemonic");
    mnemoniccharSet := FlatTtoS("mnemoniccharSet");
    name := FlatTtoS("name");
    navigationType := FlatTtoS("navigationType");
    notify := FlatTtoS("notify");
    numChildren := FlatTtoS("numChildren");
    numColumns := FlatTtoS("numColumns");
    optionLabel := FlatTtoS("optionLabel");
    optionMnemonic := FlatTtoS("optionMnemonic");
    orientation := FlatTtoS("orientation");
    packing := FlatTtoS("packing");
    parameter := FlatTtoS("parameter");
    popdownCallback := FlatTtoS("popdownCallback");
    popupCallback := FlatTtoS("popupCallback");
    popupEnabled := FlatTtoS("popupEnabled");
    postFromButton := FlatTtoS("postFromButton");
    postFromCount := FlatTtoS("postFromCount");
    postFromList := FlatTtoS("postFromList");
    radioAlwaysOne := FlatTtoS("radioAlwaysOne");
    radioBehavior := FlatTtoS("radioBehavior");
    recomputeSize := FlatTtoS("recomputeSize");
    resize := FlatTtoS("resize");
    resizeCallback := FlatTtoS("resizeCallback");
    reverseVideo := FlatTtoS("reverseVideo");
    rowColumnType := FlatTtoS("rowColumnType");
    scaleMultiple := FlatTtoS("scaleMultiple");
    screen := FlatTtoS("screen");
    scrollProc := FlatTtoS("scrollProc");
    scrollDCursor := FlatTtoS("scrollDCursor");
    scrollHCursor := FlatTtoS("scrollHCursor");
    scrollLCursor := FlatTtoS("scrollLCursor");
    scrollRCursor := FlatTtoS("scrollRCursor");
    scrollUCursor := FlatTtoS("scrollUCursor");
    scrollVCursor := FlatTtoS("scrollVCursor");
    selectColor := FlatTtoS("selectColor");
    selection := FlatTtoS("selection");
    selectionArray := FlatTtoS("selectionArray");
    selectInsensitivePixmap := FlatTtoS("selectInsensitivePixmap");
    selectPixmap := FlatTtoS("selectPixmap");
    sensitive := FlatTtoS("sensitive");
    set := FlatTtoS("set");
    shadow := FlatTtoS("shadow");
    shown := FlatTtoS("shown");
    simpleCallback := FlatTtoS("simpleCallback");
    space := FlatTtoS("space");
    spacing := FlatTtoS("spacing");
    string := FlatTtoS("string");
    stringDirection := FlatTtoS("stringDirection");
    subMenuId := FlatTtoS("subMenuId");
    textOptions := FlatTtoS("textOptions");
    textSink := FlatTtoS("textSink");
    textSource := FlatTtoS("textSource");
    thickness := FlatTtoS("thickness");
    thumb := FlatTtoS("thumb");
    thumbProc := FlatTtoS("thumbProc");
    top := FlatTtoS("top");
    translations := FlatTtoS("translations");
    traversalType := FlatTtoS("traversalType");
    troughColor := FlatTtoS("troughColor");
    unmapCallback := FlatTtoS("unmapCallback");
    unselectPixmap := FlatTtoS("unselectPixmap");
    update := FlatTtoS("update");
    useBottom := FlatTtoS("useBottom");
    useRight := FlatTtoS("useRight");
    value := FlatTtoS("value");
    visibleWhenOff := FlatTtoS("visibleWhenOff");
    whichButton := FlatTtoS("whichButton");
    width := FlatTtoS("width");
    window := FlatTtoS("window");
    x := FlatTtoS("x");
    y := FlatTtoS("y");
    iconName := FlatTtoS("iconName");
    iconPixmap := FlatTtoS("iconPixmap");
    iconWindow := FlatTtoS("iconWindow");
    iconMask := FlatTtoS("iconMask");
    windowGroup := FlatTtoS("windowGroup");
    saveUnder := FlatTtoS("saveUnder");
    transient := FlatTtoS("transient");
    overrideRedirect := FlatTtoS("overrideRedirect");
    allowShellResize := FlatTtoS("allowShellResize");
    createPopupChildProc := FlatTtoS("createPopupChildProc");
    title := FlatTtoS("title");
    argc := FlatTtoS("argc");
    argv := FlatTtoS("argv");
    iconX := FlatTtoS("iconX");
    iconY := FlatTtoS("iconY");
    input := FlatTtoS("input");
    iconic := FlatTtoS("iconic");
    initialState := FlatTtoS("initialState");
    geometry := FlatTtoS("geometry");
    minWidth := FlatTtoS("minWidth");
    minHeight := FlatTtoS("minHeight");
    maxWidth := FlatTtoS("maxWidth");
    maxHeight := FlatTtoS("maxHeight");
    widthInc := FlatTtoS("widthInc");
    heightInc := FlatTtoS("heightInc");
    minAspectY := FlatTtoS("minAspectY");
    maxAspectY := FlatTtoS("maxAspectY");
    minAspectX := FlatTtoS("minAspectX");
    maxAspectX := FlatTtoS("maxAspectX");
    wmTimeout := FlatTtoS("wmTimeout");
    waitForWm := FlatTtoS("waitforwm");
    foreground := FlatTtoS("foreground");
    traversalOn := FlatTtoS("traversalOn");
    highlightOnEnter := FlatTtoS("highlightOnEnter");
    sizePolicy := FlatTtoS("sizePolicy");
    highlightThickness := FlatTtoS("highlightThickness");
    highlightColor := FlatTtoS("highlightColor");
    highlightPixmap := FlatTtoS("highlightPixmap");
    shadowThickness := FlatTtoS("shadowThickness");
    topShadowColor := FlatTtoS("topShadowColor");
    topShadowPixmap := FlatTtoS("topShadowPixmap");
    bottomShadowColor := FlatTtoS("bottomShadowColor");
    bottomShadowPixmap := FlatTtoS("bottomShadowPixmap");
    unitType := FlatTtoS("unitType");
    helpCallback := FlatTtoS("helpCallback");
    userData := FlatTtoS("userData");
    childPosition := FlatTtoS("childPosition");
    horizontalSpacing := FlatTtoS("horizontalSpacing");
    verticalSpacing := FlatTtoS("verticalSpacing");
    fractionBase := FlatTtoS("fractionBase");
    rubberPositioning := FlatTtoS("rubberPositioning");
    resizePolicy := FlatTtoS("resizePolicy");
    topAttachment := FlatTtoS("topAttachment");
    bottomAttachment := FlatTtoS("bottomAttachment");
    leftAttachment := FlatTtoS("leftAttachment");
    rightAttachment := FlatTtoS("rightAttachment");
    topWidget := FlatTtoS("topWidget");
    bottomWidget := FlatTtoS("bottomWidget");
    leftWidget := FlatTtoS("leftWidget");
    rightWidget := FlatTtoS("rightWidget");
    topPosition := FlatTtoS("topPosition");
    bottomPosition := FlatTtoS("bottomPosition");
    leftPosition := FlatTtoS("leftPosition");
    rightPosition := FlatTtoS("rightPosition");
    topOffset := FlatTtoS("topOffset");
    bottomOffset := FlatTtoS("bottomOffset");
    leftOffset := FlatTtoS("leftOffset");
    rightOffset := FlatTtoS("rightOffset");
    resizable := FlatTtoS("resizable");
    fillOnArm := FlatTtoS("fillOnArm");
    armColor := FlatTtoS("armColor");
    armPixmap := FlatTtoS("armPixmap");
    showAsDefault := FlatTtoS("showAsDefault");
    defaultButtonShadowThickness := FlatTtoS("defaultButtonShadowThickness");
    multiClick := FlatTtoS("multiClick");
    pushButtonEnabled := FlatTtoS("pushButtonEnabled");
    shadowType := FlatTtoS("shadowType");
    arrowDirection := FlatTtoS("arrowDirection");
    activateCallback := FlatTtoS("activateCallback");
    helpCallback := FlatTtoS("helpCallback");
    margin := FlatTtoS("margin");
    separatorType := FlatTtoS("separatorType");
    minimum := FlatTtoS("minimum");
    maximum := FlatTtoS("maximum");
    sliderSize := FlatTtoS("sliderSize");
    showArrows := FlatTtoS("showArrows");
    processingDirection := FlatTtoS("processingDirection");
    increment := FlatTtoS("increment");
    pageIncrement := FlatTtoS("pageIncrement");
    initialDelay := FlatTtoS("initialDelay");
    repeatDelay := FlatTtoS("repeatDelay");
    valueChangedCallback := FlatTtoS("valueChangedCallback");
    incrementCallback := FlatTtoS("incrementCallback");
    decrementCallback := FlatTtoS("decrementCallback");
    pageIncrementCallback := FlatTtoS("pageIncrementCallback");
    pageDecrementCallback := FlatTtoS("pageDecrementCallback");
    toTopCallback := FlatTtoS("toTopCallback");
    toBottomCallback := FlatTtoS("toBottomCallback");
    dragCallback := FlatTtoS("dragCallback");
    listSpacing := FlatTtoS("listSpacing");
    listMarginWidth := FlatTtoS("listMarginWidth");
    listMarginHeight := FlatTtoS("listMarginHeight");
    items := FlatTtoS("items");
    itemCount := FlatTtoS("itemCount");
    selectedItems := FlatTtoS("selectedItems");
    selectedItemCount := FlatTtoS("selectedItemCount");
    visibleItemCount := FlatTtoS("visibleItemCount");
    selectionPolicy := FlatTtoS("selectionPolicy");
    listSizePolicy := FlatTtoS("listSizePolicy");
    doubleClickinterval := FlatTtoS("doubleClickinterval");
    singleSelectionCallback := FlatTtoS("singleSelectionCallback");
    multipleSelectionCallback := FlatTtoS("multipleSelectionCallback");
    extendedSelectionCallback := FlatTtoS("extendedSelectionCallback");
    browseSelectionCallback := FlatTtoS("browseSelectionCallback");
    defaultActionCallback := FlatTtoS("defaultActionCallback");
    automaticSelection := FlatTtoS("automaticSelection");
    topItemPosition := FlatTtoS("topItemPosition");
    horizontalScrollBar := FlatTtoS("horizontalScrollBar");
    verticalScrollBar := FlatTtoS("verticalScrollBar");
    workWindow := FlatTtoS("workWindow");
    clipWindow := FlatTtoS("clipWindow");
    scrollingPolicy := FlatTtoS("scrollingPolicy");
    visualPolicy := FlatTtoS("visualPolicy");
    scrollBarDisplayPolicy := FlatTtoS("scrollBarDisplayPolicy");
    scrollBarPlacement := FlatTtoS("scrollBarPlacement");
    updateSliderSize := FlatTtoS("updateSliderSize");
    scrolledWindowMarginHeight := FlatTtoS("scrolledWindowMarginHeight");
    scrolledWindowMarginWidth := FlatTtoS("scrolledWindowMarginWidth");
    commandWindow := FlatTtoS("commandWindow");
    menuBar := FlatTtoS("menuBar");
    messageWindow := FlatTtoS("messageWindow");
    mainWindowMarginHeight := FlatTtoS("mainWindowMarginHeight");
    mainWindowMarginWidth := FlatTtoS("mainWindowMarginWidth");
    showSeparator := FlatTtoS("showSeparator");
    source := FlatTtoS("source");
    outputCreate := FlatTtoS("outputCreate");
    inputCreate := FlatTtoS("inputCreate");
    autoShowCursorPosition := FlatTtoS("autoShowCursorPosition");
    cursorPosition := FlatTtoS("cursorPosition");
    editable := FlatTtoS("editable");
    maxLength := FlatTtoS("maxLength");
    focusCallback := FlatTtoS("focusCallback");
    losingFocusCallback := FlatTtoS("losingFocusCallback");
    modifyVerifyCallback := FlatTtoS("modifyVerifyCallback");
    motionVerifyCallback := FlatTtoS("motionVerifyCallback");
    gainPrimaryCallback := FlatTtoS("gainPrimaryCallback");
    losePrimaryCallback := FlatTtoS("losePrimaryCallback");
    verifyBell := FlatTtoS("verifyBell");
    wordWrap := FlatTtoS("wordWrap");
    blinkRate := FlatTtoS("blinkRate");
    resizeWidth := FlatTtoS("resizeWidth");
    resizeHeight := FlatTtoS("resizeHeight");
    scrollHorizontal := FlatTtoS("scrollHorizontal");
    scrollVertical := FlatTtoS("scrollVertical");
    scrollLeftSide := FlatTtoS("scrollLeftSide");
    scrollTopSide := FlatTtoS("scrollTopSide");
    cursorPositionVisible := FlatTtoS("cursorPositionVisible");
    toPositionCallback := FlatTtoS("toPositionCallback");
    columns := FlatTtoS("columns");
    rows := FlatTtoS("rows");
    selectThreshold := FlatTtoS("selectThreshold");
    selectionArrayCount := FlatTtoS("selectionArrayCount");
    pendingDelete := FlatTtoS("pendingDelete");
    editMode := FlatTtoS("editMode");
    topcharacter := FlatTtoS("topcharacter");
    refigureMode := FlatTtoS("refigureMode");
    separatorOn := FlatTtoS("separatorOn");
    sashIndent := FlatTtoS("sashIndent");
    sashWidth := FlatTtoS("sashWidth");
    sashHeight := FlatTtoS("sashHeight");
    sashShadowThickness := FlatTtoS("sashShadowThickness");
    allowResize := FlatTtoS("allowResize");
    skipAdjust := FlatTtoS("skipAdjust");
    paneMinimum := FlatTtoS("paneMinimum");
    paneMaximum := FlatTtoS("paneMaximum");
    inputCallback := FlatTtoS("inputCallback");
    okCallback := FlatTtoS("okCallback");
    cancelCallback := FlatTtoS("cancelCallback");
    applyCallback := FlatTtoS("applyCallback");
    noMatchCallback := FlatTtoS("noMatchCallback");
    commandEnteredCallback := FlatTtoS("commandEnteredCallback");
    commandChangedCallback := FlatTtoS("commandChangedCallback");
    okLabelString := FlatTtoS("okLabelString");
    cancelLabelString := FlatTtoS("cancelLabelString");
    helpLabelString := FlatTtoS("helpLabelString");
    applyLabelString := FlatTtoS("applyLabelString");
    selectionLabelString := FlatTtoS("selectionLabelString");
    listLabelString := FlatTtoS("listLabelString");
    promptString := FlatTtoS("promptString");
    defaultButton := FlatTtoS("defaultButton");
    cancelButton := FlatTtoS("cancelButton");
    buttonFontList := FlatTtoS("buttonFontList");
    labelFontList := FlatTtoS("labelFontList");
    textFontList := FlatTtoS("textFontList");
    textTranslations := FlatTtoS("textTranslations");
    allowOverlap := FlatTtoS("allowOverlap");
    defaultPosition := FlatTtoS("defaultPosition");
    autoUnmanage := FlatTtoS("autoUnmanage");
    allowShellResize := FlatTtoS("allowShellResize");
    dialogTitle := FlatTtoS("dialogTitle");
    noResize := FlatTtoS("noResize");
    dialogStyle := FlatTtoS("dialogStyle");
    mustMatch := FlatTtoS("mustMatch");
    noMatchString := FlatTtoS("noMatchString");
    directory := FlatTtoS("directory");
    pattern := FlatTtoS("pattern");
    dirSpec := FlatTtoS("dirSpec");
    dirMask := FlatTtoS("dirMask");
    fileTypeMask := FlatTtoS("fileTypeMask");
    directoryValid := FlatTtoS("directoryValid");
    dirListItems := FlatTtoS("dirListItems");
    dirListItemCount := FlatTtoS("dirListItemCount");
    dirListLabelString := FlatTtoS("dirListLabelString");
    fileListItems := FlatTtoS("fileListItems");
    fileListItemCount := FlatTtoS("fileListItemCount");
    fileListLabelString := FlatTtoS("fileListLabelString");
    qualifySearchDataProc := FlatTtoS("qualifySearchDataProc");
    dirSearchProc := FlatTtoS("dirSearchProc");
    fileSearchProc := FlatTtoS("fileSearchProc");
    listItems := FlatTtoS("listItems");
    listItemCount := FlatTtoS("listItemCount");
    listVisibleItemCount := FlatTtoS("listVisibleItemCount");
    historyItems := FlatTtoS("historyItems");
    historyItemCount := FlatTtoS("historyItemCount");
    historyVisibleItemCount := FlatTtoS("historyVisibleItemCount");
    historyMaxItems := FlatTtoS("historyMaxItems");
    textAccelerators := FlatTtoS("textAccelerators");
    textValue := FlatTtoS("textValue"          (* used in text widget *));
    textString := FlatTtoS("textString");
    textColumns := FlatTtoS("textColumns");
    command := FlatTtoS("command");
    defaultButtonType := FlatTtoS("defaultButtonType");
    minimizeButtons := FlatTtoS("minimizeButtons");
    messageString := FlatTtoS("messageString");
    messageAlignment := FlatTtoS("messageAlignment");
    symbolPixmap := FlatTtoS("symbolPixmap");
    dialogType := FlatTtoS("dialogType");
    scaleWidth := FlatTtoS("scaleWidth");
    scaleHeight := FlatTtoS("scaleHeight");
    decimalPoints := FlatTtoS("decimalPoints");
    showValue := FlatTtoS("showValue");
    titleString := FlatTtoS("titleString");

    (*load from XtN*)
    visual := XtN.visual;
    iconNameEncoding := XtN.iconNameEncoding;
    transientFor := XtN.transientFor;
    baseHeight := XtN.baseHeight;
    baseWidth := XtN.baseWidth;
    titleEncoding := XtN.titleEncoding;
    winGravity := XtN.winGravity;
  END Init;

BEGIN
  Init ();
END XmN.

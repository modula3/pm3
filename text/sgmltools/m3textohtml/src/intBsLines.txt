/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define STORE_ELEMENT_INFO(_reqPtr_,_ocType_,_ocLength_) \
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * { \
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     ((pexElementInfo * )(_reqPtr_))->elementType = (_ocType_); \
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     ((pexElementInfo * )(_reqPtr_))->length = (_ocLength_); \
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define PEXSetOCBufferType(_display_, _ocbuf_, _type_, _target_) \
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define PEXSetOCBufferTarget(_ocbuf_, _target_) \
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define PEXGetOCBufferType(_ocbuf_,_displayReturn_,_typeReturn_,_targetReturn_)\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define PEXGetOCBufferFreeSpace(_ocbuf_) \
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define INIT_OC(_ocbuf_,_ocType_,_ocDataLength_,_pReq_) \
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     PEXInitOC(_ocbuf_,OC/**/_ocType_,LENOF( pex/**/_ocType_),_ocDataLength_,\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define PEXStoreOCList(_ocbuf_,_numElements_,_ocList_) 			\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define RoomInThisRequest(_oc_,_nWords_)			\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define RoomInXBuffer(_oc_,_nWords_) 				\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *  ( ((_nWords_) <= ((_oc_)->bufMax - (_oc_)->curPtr)) ||		\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define NewLargeRequestPacket(_oc_,_nWords_)			\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *  ( ((_oc_)->lrSequenceNum) &&  					\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *    (((_oc_)->lrBufferLeft -= (_nWords_)) >= 0) && 		\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define PEXGetOCWords(_oc_,_nWords_) 				\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *  ( (( RoomInThisRequest(_oc_,_nWords_) && RoomInXBuffer(_oc_,_nWords_) ) || \
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     NewLargeRequestPacket(_oc_,_nWords_)) ?			\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * 	 (((_oc_)->curPtr += (_nWords_)) - (_nWords_)) 		\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *   : 								\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define PEXAddOC(_ocbuf_,_ocType_,_size_,_OCData_)		\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * {								\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     int _ocLength = ((_size_) + Pad(_size_) + sizeof(pexElementInfo))>>2;\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     if ( ( *(_ocbuf_)->StartOC)((_ocbuf_),_ocLength) == Success )\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     {								\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *         STORE_ELEMENT_INFO((_ocbuf_)->curPtr, _ocType_, _ocLength);\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *         (_ocbuf_)->curPtr += LENOF(pexElementInfo);		\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *         if (_size_ > 0) COPY_AREA(_OCData_, (_ocbuf_)->curPtr, _size_);\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *         (_ocbuf_)->curPtr += NUMWORDS(_size_);			\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *         ( *(_ocbuf_)->FinishOC)((_ocbuf_));			\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *    }								\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     else							\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *         ( *(_ocbuf_)->OCError)((_ocbuf_), _ocLength);		\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define PEXAddListOC(_ocbuf_,_ocType_,_countNeeded_,_count_,_elSize_,_elList_)\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * {							\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     int         _ocListSize = (_count_) * (_elSize_);	\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     char        *_pReq;					\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     PEXInitOC(_ocbuf_,_ocType_,				\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *                 (_countNeeded_) ? LENOF( pexOCcListHeader) :\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *                                 LENOF( pexOCListHeader),\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *                 NUMWORDS( _ocListSize), &_pReq);	\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     if (_pReq == NULL) return;				\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     if (_countNeeded_) ((pexOCcListHeader * )_pReq)->length = (_count_);\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     PEXCopyBytesToOC(_ocbuf_, _ocListSize, _elList_);	\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: *     PEXFinishOC(_ocbuf_);				\
/home/ftp/pub/m3/pkg/SRC-m3/PEX/src/PEX.i3: * #define MPEX_SetPCAttrMaskBit(mask, attrNum) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define XDestroyImage(ximage) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define XGetPixel(ximage, x, y) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define XPutPixel(ximage, x, y, pixel) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define XSubImage(ximage, x, y, width, height)  \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define XAddPixel(ximage, value) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define IsKeypadKey(keysym) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define IsCursorKey(keysym) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define IsPFKey(keysym) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define IsFunctionKey(keysym) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define IsMiscFunctionKey(keysym) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/X.i3:#define IsModifierKey(keysym) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:#define XtIsOverrideShell(widget) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:    (_XtIsSubclassOf(widget, (WidgetClass)overrideShellWidgetClass, \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:#define XtIsVendorShell(widget)	\
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:    (_XtIsSubclassOf(widget, (WidgetClass)vendorShellWidgetClass, \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:#define XtIsTransientShell(widget) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:    (_XtIsSubclassOf(widget, (WidgetClass)transientShellWidgetClass, \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:#define XtIsApplicationShell(widget) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:    (_XtIsSubclassOf(widget, (WidgetClass)applicationShellWidgetClass, \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:#define XtSetArg(arg, n, d) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:#define XtUnmapWidget(widget)	\
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:#define XtOffset(p_type,field) \
/home/ftp/pub/m3/pkg/SRC-m3/X11R4/src/Common/Xt.i3:#define XtNewString(str) \
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/AmbientLightGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/AmbientLightGO.i3:   \end{verbatim} 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/AnimHandle.i3:   An asynchronous animation is performed by attaching an {\em unsynchronized
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/AnimHandle.i3:   {\em synchronized time-variant property value} "pv" to a geometric object
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/BoxGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/BoxGO.i3:   \type{SurfaceGO}{T}'s, there are two additional properties that 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/BoxGO.i3:   \type{PointProp}{Val}s. If they are not specified, (0,0,0) and (1,1,1) 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/BoxGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/BoxGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CameraGO.i3:(* "CameraGO.T" is a subtype of \type{GO}{T}. No additional fiels or methods 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CameraGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s, there are four
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CameraGO.i3:   type \type{PointProp}{Val}.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CameraGO.i3:   a \type{RealProp}{Val}. Its default value is 1, which means that the 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   \type{SurfaceGO}{T}'s, there are three additional properties that 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   of the cone. It associates with a \type{PointProp}{Val}. If no "Base" 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   of the cone. It associates with a \type{PointProp}{Val}. If no "Tip" 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   cone. It associates with a \type{RealProp}{Val}. If no "Radius" property
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   \begin{tabular}{c}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   \psfig{figure=images/ConeGO.ps,silent=}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   \end{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/ConeGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   \type{SurfaceGO}{T}'s, there are three additional properties that 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   of the cylinder. It associates with a \type{PointProp}{Val}. If no "Point1" 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   of the cylinder. It associates with a \type{PointProp}{Val}. If no "Point2" 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   cylinder. It associates with a \type{RealProp}{Val}. If no "Radius" property
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   \begin{tabular}{c}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   \psfig{figure=images/CylinderGO.ps,width=3in,silent=}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   \end{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/CylinderGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:   \type{SurfaceGO}{T}'s, there are three additional properties that 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:   of the disk. It associates with a \type{PointProp}{Val}. If no "Center" 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:   of the disk. It associates with a \type{PointProp}{Val}. If no "Normal" 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:   disk. It associates with a \type{RealProp}{Val}. If no "Radius" property
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:   \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:   \begin{tabular}{c}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:   \psfig{figure=images/DiskGO.ps,silent=}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:   \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:   \end{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:    \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/DiskGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   that are composed of polygons (right now, \type{PolygonGO}{T} and 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   \type{QuadMeshGO}{T}).
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   compatible, i.e. a properity name of type \type{PointProp}{Name} will be 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   associated with a value of type \type{PointProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   Geometric objects can have names, i.e.\ strings that identify them. Names 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   Geometric objects are reactive. A {\em callback object} is an object 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   types of callback objects: \type{MouseCB}{T} (objects that handle mouse 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   button presses and releases), \type{PositionCB}{T} (objects that handle 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   mouse movements), and \type{KeyCB}{T} (objects that handle key presses and 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   Associated with each geometric object are four {\em callback object stacks},
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GO.i3:   {\em The event handling model is largely untested. It is probably
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GraphicsBase.i3:(* A "GraphicsBase.T" is an abstraction of a window system (e.g.\ X, Trestle, 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GraphicsBase.i3:   or NT) and a 3D graphics library (e.g.\ PEX or OpenGL). 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GraphicsBasePrivate.i3:   \begin{enumerate}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GraphicsBasePrivate.i3:   \item By operations that change the scene DAG (i.e.\ the group operations
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GraphicsBasePrivate.i3:   \item By changes in the value of an attached property. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GraphicsBasePrivate.i3:   \end{enumerate}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   a graph structure. A {\em scene} is described by a {\em root node} 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   (a \type{RootGO}{T}, which is a subtype of "GroupGO.T"), and contains 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   the root. We call the nodes on this path the {\em ancestors} of "o". 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   (see the \interface{GO} interface for details). 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   \[ (M_i \circ M_{i+1})(n) = 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:     \left\{
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:      \begin{array}{ll}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:       M_i(n) & \mbox{if $M_{i+1}(n)$ is undefined} \\
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:       M_{i+1}(n) & \mbox{if $M_i(n)$ is undefined} \\
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:       M_i(n) \oplus M_{i+1}(n) & \mbox{otherwise}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:      \end{array}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:     \right.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   \]
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   $\oplus$ is the {\em property value composition operator}. Its semantics
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   properties except transformation properties, $v \oplus v' = v'$.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   A transformation property value $v$ is internally described by a $4\times4$
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   $v \oplus v' = v''$ where $A_{v''} = A_v A_{v'}$.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   \begin{tabular}{c}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   \psfig{figure=images/PropInheritance.ps,width=4in,silent=} 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/GroupGO.i3:   \end{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/KeyCB.i3:   transitions as to {\em key events}. A key event is represented
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/KeyCB.i3:   A {\em key event callback object} is an object which has one
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/KeyCB.i3:   {\em NOTE: There is a fair chance that I will add other fields to "Rec",
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/LightGO.i3:   Light sources affect all geometric objects of type \type{SurfaceGO}{T} 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/LightGO.i3:(* "LightGO.T" is a subtype of \type{GO}{T}. No additional fiels or methods 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/LightGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s, there are two
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/LightGO.i3:   \type{ColourProp}{Val}.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/LightGO.i3:   \type{BooleanProp}{Val}. *)
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/LineGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s, there are 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/LineGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/LineGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/MarkerGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s, there are 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/Matrix4.i3:\begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/Matrix4.i3:\end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/Matrix4.i3:   which can be solved statically (i.e.\ no gaussian elimination is needed 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/MouseCB.i3:   button transitions as to {\em mouse events}. A mouse event is represented
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/MouseCB.i3:   A {\em mouse event callback object} is an object which has one
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/MouseCB.i3:   {\em NOTE: There is a fair chance that I will add other fields to "Rec",
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/OrthoCameraGO.i3:   \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/OrthoCameraGO.i3:   \begin{tabular}{c}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/OrthoCameraGO.i3:   \psfig{figure=images/OrthoCamera.ps,width=4in,silent=} 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/OrthoCameraGO.i3:   \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/OrthoCameraGO.i3:   \end{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/OrthoCameraGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/OrthoCameraGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/OrthoCameraGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/OrthoCameraGO.i3:   \type{CameraGO}{T}'s, there is one additional property that is 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/OrthoCameraGO.i3:   type \type{RealProp}{Val}. The width of the parallelopiped is the height 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:(* A "PerspCameraGO.T" is a perspective camera, i.e.\ a camera which shows 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \item The position of the camera (which determines the tip of the pyramid)
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \item A point on the central viewing axis (which determines the vertical
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \item The up-vector (which rotates the pyramid around its vertical axis)
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \item The field of vision (the angle between the ``up'' and the ``down''
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \item The aspect ratio (the ratio between height and width of any
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \begin{tabular}{c}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \psfig{figure=images/PerspCamera.ps,width=4in,silent=} 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \end{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \type{CameraGO}{T}'s, there is one additional property that is observed 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   i.e.\ the angle (in degree radians) between the ``up'' and the ``down''
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PerspCameraGO.i3:   \type{RealProp}{Val}. The angle between ``left'' and ``right'' wall is 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/Point3.i3:   property is that $a \times b$ is orthogonal to the plane described by the
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   referred to as {\em attenuation}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   to compute the attenuation: Let\\
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   $L_p$ : Position of the light source \\
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   $O_p$ : position of (some part of) an object \\
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   $C_0$ : Constant attenuation coefficieny \\
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   $C_1$ : Linear attenuation coefficieny \\
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   \[ \frac{1}{C_0 + C_1 | O_p - L_p | } \]
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   \[ L_a = \frac{1}{| O_p - L_p |^2 } \]
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   \type{LightGO}{T}'s, there are three additional properties that are 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   value of type \type{PointProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   \type{RealProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PointLightGO.i3:   \type{RealProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PolygonGO.i3:   points "pts". "s" is a ``shape hint'', i.e.\ a hint whether the polygon is 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PolygonGO.i3:   convex, non-convex, or complex. Refer to the \interface{GO} interface 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PolygonGO.i3:(* {\sl 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PositionCB.i3:   movements as to {\em position events}. A position event is represented
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PositionCB.i3:   A {\em position event callback object} is an object which has one
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/PositionCB.i3:   {\em NOTE: There is a fair chance that I will add other fields to "Rec",
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/QuadMeshGO.i3:   `shape hint'', i.e.\ a hint whether each polygon of the quad-mesh 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/QuadMeshGO.i3:   Refer to the \interface{GO} interface for details on shape hints. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/QuadMeshGO.i3:   \type{SurfaceGO}{Colour} property.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/QuadMeshGO.i3:   \type{SurfaceGO}{Colour} property, and instead attaches an individual 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/QuadMeshGO.i3:   "col[i][j]". If "pts" was an $m+1 \times n+1$ array,
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/QuadMeshGO.i3:   "cols" must be an $m \times n$ array; otherwise, the exception "BadSize" 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/QuadMeshGO.i3:   specify an invalid quadrangle. {\em I should instead raise an exception!}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/QuadMeshGO.i3:   {\em NOTES: (a) Points and colors should be exposed as properties. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/QuadMeshGO.i3:   Refer to the \interface{PolygonGO} interface for an idea about how to do that.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \type{GroupGO}{T}. *)
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   The scene (i.e.\ "r" and its descendants) will be viewed through the 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   "base" provides a connection to the underlying window system (e.g.\ X)
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   and graphics system (e.g.\ PEX). It also initializes the animation clock
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   to a new \type{Clock}{T} (i.e.\ a real-time clock).
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:(* {\em Note: Making a "RootGO.T" a child of another "GroupGO.T" is wrong, 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \item The new root ("root") uses a perspective camera, 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \item "root" contains two light sources, an ambient light source and a 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \item If no "base" is supplied, it creates a new X-PEX base entitled
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \item The property "(GO.Transform,TransformProp.NewConst ())" is attached 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \item Mouse and position callback objects are pushed onto "root"'s mouse
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \end{itemize} *)
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \type{GroupGO}{T}'s, there are some additional properties that are 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   of the scene. It associates with a \type{ColorProp}{Val}. By default, the 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   {\em Note: Alternatively, I could say that by default, the color shift 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \type{BooleanProp}{Val}. By default, depth cueing is switched off.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   undergo. It associates with a \type{ColourProp}{Val}. By default (assuming 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   are away from the viewer (i.e.\ their color is shifted towards black).
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   the color shift shall occur. They associate with \type{RealProp}{Val}'s. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   {\em Note: This concept might be to complicated for a casual user.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGO.i3:   \type{RealProp}{Val}'s.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGOPrivate.i3:   \begin{enumerate}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGOPrivate.i3:   \item By operations that change the scene DAG (i.e.\ the group operations
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGOPrivate.i3:   \item By changes in the value of an attached property. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/RootGOPrivate.i3:   \end{enumerate}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SphereGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SphereGO.i3:   \type{SurfaceGO}{T}'s, there are two additional properties that 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SphereGO.i3:   It associates with a \type{PointProp}{Val}. If no "Center" property
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SphereGO.i3:   It associates with a \type{RealProp}{Val}. If no "Radius" property
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SphereGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SphereGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   referred to as {\em attenuation}. Refer to the description of the 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   \interface{PointLightGO} interface for details.
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   The location or {\em origin} of the light source (i.e.\ the tip of the
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   and $\alpha$, the angle between the center vector of the cone and 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   The concentration $\gamma$ describes how the light intensity is distributed
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   1. Let $\beta$ be the angle between a particular ray of light within the 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   ${\rm cos}^\gamma(\beta)$. So, if $\gamma$ is 0, the intensity is uniform 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   \type{LightGO}{T}'s, there are six additional properties that are 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   value of type \type{PointProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   value of type \type{PointProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   property value of type \type{RealProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   value of type \type{RealProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   \type{RealProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SpotLightGO.i3:   \type{RealProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SurfaceGO.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SurfaceGO.i3:   \item Surfaces interact with light sources, non-surfaces don't
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SurfaceGO.i3:   \item Surfaces can be transparent, non-surfaces are always opaque
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SurfaceGO.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SurfaceGO.i3:(* A "SurfaceGO.T" is a subtype of \type{GO}{T}. No additional fields or 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SurfaceGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s, there are 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/SurfaceGO.i3:   {\em NOTE: In order for this property to make sense, I should introduce
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   \begin{tabular}{c}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   \psfig{figure=images/TorusGO.ps,width=3in,silent=}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   \end{center} *)
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   \type{SurfaceGO}{T}'s, there are four additional properties that 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   of the torus. It associates with a \type{PointProp}{Val}. If no "Center" 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   the torus. It associates with a \type{PointProp}{Val}. If no "Normal"
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   major circle of the torus. It associates with a \type{RealProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   minor circle of the torus. It associates with a \type{RealProp}{Val}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/TorusGO.i3:   \end{verbatim} *)
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/VectorLightGO.i3:   \begin{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/VectorLightGO.i3:   \end{verbatim}
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/VectorLightGO.i3:(* In addition to the properties observed by all \type{GO}{T}'s and 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/VectorLightGO.i3:   \type{LightGO}{T}'s, there is one additional property that is observed 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/VectorLightGO.i3:   it associates with a property value of type \type{PointProp}{Val}. *)
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/Win_OpenGL_Base.i3:(* "Win_OpenGL_Base.T" is a subtype of \type{GraphicsBase}{T}. 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/X_OpenGL_Base.i3:(* "X_OpenGL_Base.T" is a subtype of \type{GraphicsBase}{T}. An object of 
/home/ftp/pub/m3/pkg/SRC-m3/anim3D/src/X_PEX_Base.i3:(* "X_PEX_Base.T" is a subtype of \type{GraphicsBase}{T}. An object of 
/home/ftp/pub/m3/pkg/SRC-m3/bicycle/src/ZShape.i3:(* \subsubsection{Getting domains} *)
/home/ftp/pub/m3/pkg/SRC-m3/bicycle/src/ZShape.i3:(* \subsubsection{Restricting the domain to a region} *)
/home/ftp/pub/m3/pkg/SRC-m3/buildlectern/src/FromPS.i3:   more pages remain.  "rd" should {\em not} be closed.
/home/ftp/pub/m3/pkg/SRC-m3/buildlectern/src/FromPS.i3:   only be called {\em after} after a call of "t.nextImage(rd)" has
/home/ftp/pub/m3/pkg/SRC-m3/buildlectern/src/FromPS.i3:   returned "TRUE" {\em and} the corresponding image has been read
/home/ftp/pub/m3/pkg/SRC-m3/codeview/src/CodeView.i3:   form "@procedure-name\n".  A matching trailer marks the end of the
/home/ftp/pub/m3/pkg/SRC-m3/codeview/src/oldCodeView.i3:   form "@procedure-name\n".  A matching trailer marks the end of the
/home/ftp/pub/m3/pkg/SRC-m3/formsedit/src/FormsEditVBT.i3:(* {\bf WARNING:} This interface is very tentative. It is likely
/home/ftp/pub/m3/pkg/SRC-m3/formsedit/src/FormsEditVBT.i3:   description, you get a second "FormsVBT", the {\it editor},
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   {\it Trestle Reference Manual\/} for a complete description
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   of locking levels~\cite{TrestleTutorial}.) Most applications 
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \section{Creation, allocation, and initialization} *)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* An object "fv" of type "FormsVBT.T" (or simply, a {\it form}) is
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   and returns "fv".  It creates a "VBT", {\it v}, from "description",
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   "MultiFilter.Child(fv)" will always return {\it v}.  Internally, "fv" is
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   a filter; if "raw" is "TRUE", then the filter's child is {\it v}.
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   inserted between {\it v} and "fv", so that the filter's child has the
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:|       (Filter `{\it v}`))))
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   The filter above {\it v} supports the common case of making an entire
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   S-expression.  On the way down, each "VBT" is {\it allocated}, typically
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   traversed.  On the way back up, each "VBT" is {\it initialized},
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   bottom-up.  (For more details on allocation, see Section~\ref{realize}.)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:\section{Events and Symbols} \label{sec:programming-events}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:\subsection{Attaching event-handlers}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   events. (See the Appendix~\ref{ap:longcatalog} for a
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:|    cl.apply(fv, name, `{\it time}`)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:| p(fv, name, eventData, `{\it time}`)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   it that will invoke the {\bf Cut} operation on the text-editing
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   that invokes the {\bf Copy} operation on the text-editing
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \subsection{Access to the current event} *)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \subsection{Symbol management} *)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \section{Reading and Changing State}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   \label{sec:programming-state}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   \subsection{Access to the {\tt Main} and {\tt Value} properties}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \subsection{Access to arbitrary properties}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   \vspace {5mm}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:  {\bf WARNING: The current implementation provides access
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   \vspace {5mm}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \subsection{Access to the underlying {\tt VBT}s} *)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \subsection{Radios and Choices} *)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \subsection{Generic interactors} *)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \subsection{Special controls for Filters}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   {\em reactivity}.\index{reactivity} This has one of four states:
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   Standard X screentypes support the cursors named in {\it X Window
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   System} by Scheifler et.  al. \cite{XSpec} Appendix B. Therefore, for
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \subsection{Access to Subwindows} *)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   ancestor {\it zchild}.  "PopUp" is equivalent to activating
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:| (PopButton (For `{\it zchild}`) ...)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   If the target {\it zchild} is already open or has been opened
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \subsection{Special controls for text-interactors} *) 
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \section{Saving and restoring state} \label{sec:programming-snapshot} *)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   A {\em snapshot\/} is an S-expression that captures the state of components
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \section{Dynamic Alteration of Forms}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   \label{sec:programming-dynamicforms}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   as the names of all of the desendants of those components, are {\it not}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:(* \section{Subclasses of components} \label{realize}
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:| fv.realize(`{\it type}`, `{\it name}`)
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   where {\it type} is the name of the first element of the subexpression,
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   and {\it name} is the "Name" property specified in the
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   Note that the "realize" method does not {\it initialize} the
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   "VBT" that it allocates.  Actually, it may initialize any {\it
/home/ftp/pub/m3/pkg/SRC-m3/formsvbt/src/FormsVBT.i3:   Textports are {\em contained} in three forms: "TextEdit",
/home/ftp/pub/m3/pkg/SRC-m3/http/src/HTTP.i3:  Ctl = SET OF CHAR{'\000'.. '\037', '\177'};
/home/ftp/pub/m3/pkg/SRC-m3/http/src/HTTP.i3:               CHAR{'(', ')', '<', '>', '@', ',', ';', ':', '\\', '"', '/',
/home/ftp/pub/m3/pkg/SRC-m3/http/src/HTTP.i3:                    '[', ']', '?', '=', '{', '}', ' ', '\t'};
/home/ftp/pub/m3/pkg/SRC-m3/http/src/HTTP.i3:  Token = SET OF CHAR {'\000' .. '\377'} - Ctl - TSpecial;
/home/ftp/pub/m3/pkg/SRC-m3/http/src/HTTPApp.i3:  ServerPushBoundaryString = "ServerPushBoundary\n";
/home/ftp/pub/m3/pkg/SRC-m3/http/src/HTTPApp.i3:  ServerPushBoundaryStringStart = "--ServerPushBoundary\n";
/home/ftp/pub/m3/pkg/SRC-m3/http/src/HTTPApp.i3:  ServerPushBoundaryStringEnd = "--ServerPushBoundary--\n";
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   with a "FileBrowserVBT".  A {\em helper}
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   \index{FBHelper}\label{FBHelper} is a type-in field that displays
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   pathnames.  A {\em directory-menu}\index{FBDirMenu}
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   \label{FBDirMenu} is a menu containing the names of each level in
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   \item The user may {\it select} items, either by single-clicking on
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   \item The user may {\it activate} an item, either by
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   Activation of a {\it file} is reported to the client by invoking
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   Activation of a {\it directory} is reported by invoking the
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:(* \subsubsection{The Helper} 
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:   The FileBrowser's helper (see page \pageref{FBHelper}) is a
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:(* \subsubsection{The Directory-Menu} *)
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:(* \subsubsection{FileBrowser options} *)
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:(* \subsubsection{Setting the displayed directory} *)
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/FileBrowserVBT.i3:(* \subsubsection{Retrieving selections from the browser} *)
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   with a "FileBrowserVBT".  A {\em helper}
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   \index{FBHelper}\label{FBHelper} is a type-in field that displays
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   pathnames.  A {\em directory-menu}\index{FBDirMenu}
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   \label{FBDirMenu} is a menu containing the names of each level in
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   \item The user may {\it select} items, either by single-clicking on
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   \item The user may {\it activate} an item, either by
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   Activation of a {\it file} is reported to the client by invoking
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   Activation of a {\it directory} is reported by invoking the
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:(* \subsubsection{The Helper} 
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:   The FileBrowser's helper (see page \pageref{FBHelper}) is a
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:(* \subsubsection{The Directory-Menu} *)
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:(* \subsubsection{FileBrowser options} *)
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:(* \subsubsection{Setting the displayed directory} *)
/home/ftp/pub/m3/pkg/SRC-m3/lectern/src/MyFileBrowserVBT.i3:(* \subsubsection{Retrieving selections from the browser} *)
/home/ftp/pub/m3/pkg/SRC-m3/lecterntohtml/src/FSPosix.i3:(* Equal to {\tt Atom.FromText(\char'42SymbolicLink\char'42)}. *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/atom/Atom.i3:   \index{atomic symbol}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/atom/Atom.i3:   \index{symbolic expression!atom}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   \index{writing formatted data}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   \index{formatted data!writing}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:(* Format "b" as {\tt \char'42TRUE\char'42} or  {\tt \char'42FALSE\char'42}. *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:\paragraph*{Overview.}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   \index{scientific notation}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   \index{fixed-point notation}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:\paragraph*{Accuracy.}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   control~\cite{Steele,Gay}: Just enough digits are retained to
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:\paragraph*{Details.}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   blanks, for example: {\tt \char'042\char'040 0.00\char'040
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   \char'040 \char'040 \char'040 \char'042}.  "Style.Fix" renders zero
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   with all digits zero; for example, "\char'042 0.00\char'042".
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   "Style.Auto" renders zero as "\char'042 0\char'042".  On IEEE
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   NaN's with a minus sign or blank, the string "\char'042
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   Infinity\char'042" or "\char'042 NaN\char'042", and enough trailing
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   "Style.Auto" omit the blanks.  In "Style.Sci", if "\char'042
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   Infinity\char'042" doesn't fit, "\char'042 Inf\char'042" is used
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   implementations, the string "\char'042 Infinity\char'042" is
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   replaced by "\char'042 1.0/0.0\char'042", "\char'042
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   1.0d0/0.0d0\char'042", or "\char'042 1.0x0/0.0x0\char'042" as
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   appropriate, and "\char'042 NaN\char'042" is similarly replaced by
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:| F("%s %s\n", "Hello", "World") `returns` "Hello World\n".
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Fmt.i3:   returns {\tt \char'42Too many arguments for F to handle\char'42}.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/Lex.i3:     ' ', '\t', '\n', '\r', '\013' (* vertical tab *), '\f'};
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/OldFmt.i3:     F("%s %s\n", "Hello", "World") returns "Hello World\n".
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/fmtlex/OldLex.i3:    Blanks = SET OF CHAR {'\t', '\n', '\r', '\f', ' '};
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/formatter/Formatter.i3:    If c='\n', sends a NewLine(t) operator to the formatter; otherwise
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/formatter/Formatter.i3:    '\n' are compacted into a single text string.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Path.i3:   A {\it segment} is a directed arc in the Cartesian plane determined
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Path.i3:   interval of real numbers "[0, 1]". The segment is said to {\it start}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Path.i3:   at "(h(0), v(0))" and {\it end} at "(h(1), v(1))".  If "h" and "v"
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Path.i3:   are linear functions of "t", then the segment is {\it linear}: it
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Path.i3:   "t", then the segment is {\it degenerate}: it consists of a single
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Path.i3:   The segments of a path are grouped into contiguous {\it subpaths},
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Path.i3:   which can be {\it open} or {\it closed}.  Within a subpath, each 
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Path.i3:   The {\it current point} of a path is the endpoint of the last segment
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Path.i3:   one.  (This is called the {\it Bezier} arc determined by "p", "q",
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Trapezoid.i3:\medskip\bulletitem "tr.vlo" and "tr.vhi" are the "v" coordinates of its north and south edges, respectively;
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Trapezoid.i3:\medskip\bulletitem "tr.m1" and "tr.m2" are the slopes of its west and east edges, respectively, as "(delta v) / (delta h)". A denominator
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Trapezoid.i3:\medskip\bulletitem "tr.p1" and "tr.p2" are points on the infinite lines
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/geometry/Trapezoid.i3:\medskip
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/list/List.ig:   field of existing list elements are called {\it destructive}.  By
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/list/List.ig:   \index{naming conventions!destructive list operations}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/list/ListSort.ig:   \index{sorting!lists}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/FS.i3:   \index{directory}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/FS.i3:   \index{absolute pathname!from relative pathname}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/FS.i3:   \begin{description}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/FS.i3:   \item["OnlyOwnerCanRead"] read access is allowed only by this user
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/FS.i3:   \item["ReadOnly"] write access is allowed to no one (except via the
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/FS.i3:   \item["Default"] the default applies with no restrictions.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/FS.i3:   \end{description}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/FS.i3:   \index{creating a file}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/FS.i3:   \index{file!creation}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/FS.i3:(* Equal to {\tt Atom.FromText(\char'42Directory\char'42).} *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/File.i3:(* A "File.T", or {\em file handle}, is a source and/or sink of bytes.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/File.i3:   \index{file!handle}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/File.i3:   \index{unbuffered file I/O}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/File.i3:   \index{file!unbuffered I/O}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/File.i3:   \index{I/O!unbuffered}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/File.i3:   \index{non-blocking read}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/OSError.i3:   \index{errors, operating system}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/OSError.i3:   \index{operating system errors}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:   \index{absolute pathname}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:   \index{relative pathname}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:   \index{extension of pathname}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:   \index{base of pathname}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:\paragraph*{POSIX.} Pathnames have the syntax:
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:|  . `{\tt \char'137}` -
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:\paragraph*{Win32.} Pathnames have the syntax, where backslash is not
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:| Absolute = Volume "`{\tt \char'134}`" Relative.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:| Relative = [ArcName {"\" ArcName}].
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:| Volume   = Drive ":" | "`{\tt \char'134\char'134}`" Server "`{\tt \char'134}`" Share.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:| $ % ' - _ @ { } `\char'176` `\char'140` ! # ( )
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:   "Base"s, including AUX, CLOCK\$, COM1, CON, LPT1, NUL, and PRN are
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pathname.i3:\paragraph*{Macintosh.} Pathnames have the syntax:
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Pipe.i3:(* Equal to {\tt Atom.FromText(\char'42Pipe\char'42).} *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{parameters of a process}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{process!parameters}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{environment variables}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{process!environment variables}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{working directory}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{process!working directory}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{standard I/O!file handles}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{process!standard I/O handles}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{I/O!standard handles}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \paragraph*{POSIX.} "Create" forks a child process, which executes
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \paragraph*{Win32.} "Create" calls "Win32.CreateProcess".  If "cmd"
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:(* \paragraph*{POSIX.} The value returned by "Wait" is equal to the
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \paragraph*{Win32.} The value returned by "Wait" is "c MOD
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:(* \index{terminating execution} *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:(* \index{process!identifier} *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:(* \index{standard I/O!file handles}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{process!standard I/O handles}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{I/O!standard handles}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:(* \index{working directory}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:   \index{process!working directory}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Process.i3:(* \paragraph*{Example.} A typical use of "Create" is to run a filter
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/RegularFile.i3:(* Equal to {\tt Atom.FromText(\char'42RegularFile\char'42).} *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/os/Common/Terminal.i3:(* Equal to {\tt Atom.FromText(\char'42Terminal\char'42).} *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/params/Env.i3:   \index{environment variables}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/params/Env.i3:   \index{process!environment variables}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/params/Params.i3:   \index{parameters of a process}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/params/Params.i3:   \index{process!parameters}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:(* A {\it pickle} is a representation of a Modula-3 value as 
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:|   IO.Put(Fmt.Int(v.val) & "\n")
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:   can override the methods of objects called {\it pickle writers}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:   and {\it pickle readers}, or you can register {\it specials}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:   \paragraph{Pickle writers and readers.}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\item If "r=NIL", write a representation of "NIL" on "w.wr".
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\item Otherwise if "r" has been previously written to the 
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\item Otherwise, find the "Special" (as defined below) for 
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\item If "r.rd" contains a representation of "NIL", consume those 
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\item Otherwise, if "r.rd" contains the index of a previously 
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\item Otherwise compute "sc = readType()", and proceed as follows.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\paragraph{Specials.}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\item  the methods must leave the "Rd.T" or "Wr.T" positioned
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\item  the "read" method must consume the number of bytes written
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\item  the "read" method must produce a value equivalent to the
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:\end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pickle/Pickle.i3:(* \paragraph{Examples.}  For example, suppose you
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pqueue/PQueue.ig:(* A "PQueue.Elt" is an {\it element\/} of a priority queue. Every element
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pqueue/PQueueRep.ig:(* A "PQueue.Default" is represented by a data structure called a {\it heap}.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/pqueue/PQueueRep.ig:   A priority queue "pq: PQueue.Default" is {\it valid} (written "Valid(pq)")
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/random/Common/Random.i3:   \index{pseudo-random number}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/random/Common/Random.i3:\paragraph*{Example.} A good pseudo-random permutation of an array "a"
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/random/Common/Random.i3:\paragraph*{SRC Modula-3 implementation details.} The object returned
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/random/Common/Random.i3:   on Knuth's Algorithm 3.2.2A (see \cite{Knuth:Vol2}).
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/random/Common/RandomPerm.i3:(* "HighQuality" permutations use Algorithm 3.4.2P of Knuth's {\it
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/FileRd.i3:   \index{buffered file I/O}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/FileRd.i3:   \index{file!buffered I/O}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/FileWr.i3:   \index{buffered file I/O}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/FileWr.i3:   \index{file!buffered I/O}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/IO.i3:   include it in the returned value.  A line break is either {\tt
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/IO.i3:   \char'42\char'134n\char'42} or {\tt
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/IO.i3:   \char'42\char'134r\char'134n\char'42}. *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:\begin{tabular}{ll}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:        & \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:        "len(rd)"          &   is the length of the next message \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:        "src(rd)"          &   is the contents of the next message \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:        "cur(rd)"          &   is zero \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:        "avail(rd)"        &   is unspecified \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:        "closed(rd)"       &   is unchanged \\ 
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:        "seekable(rd)"     &   is unchanged \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:        "intermittent(rd)" &   is unchanged \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:        & \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgRd.i3:\end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:\begin{tabular}{ll}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:        & \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:          "len(wr)"      &      is zero \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:          "c(wr)"        &      is empty \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:          "cur(wr)"      &      is zero \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:          "target(wr)"   &      is empty \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:          "closed(wr)"   &      is unchanged \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:          "seekable(wr)" &      is unchanged \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:          "buffered(wr)" &      is unchanged \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:        & \\
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/MsgWr.i3:\end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   \index{character input stream}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   \index{input stream}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   \index{stream!input}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   \index{reader}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   \begin{enumerate}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   \item prompt the user;
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   \item call "EOF", which probably waits on user input;
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   \item presuming that "EOF" returned "FALSE", read the user's input.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   \end{enumerate} *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:|   (i = 0 OR str[i-1] # '\n') AND
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   A line break is either {\tt \char'42\char'134n\char'42} or {\tt
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:   \char'42\char'134r\char'134n\char'42} More precisely, this is
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:| res := ""; ch := '\000'; (* any char but newline *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:| WHILE ch # '\n' AND NOT EOF(rd) DO
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:|   IF ch = '\n' THEN
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Rd.i3:|         Text.GetChar(res, Text.Length(res)-1) = '\r' THEN
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Stdio.i3:   \index{standard I/O!streams}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Wr.i3:   \index{character output stream}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Wr.i3:   \index{output stream}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Wr.i3:   \index{stream!output}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Wr.i3:   \index{writer}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Wr.i3:(* On POSIX, "EOL" is {\tt \char'42\char'134n\char'42}; on Win32,
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/rw/Common/Wr.i3:   "EOL" is {\tt \char'42\char'134r\char'134n\char'42}. *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sequence/Sequence.ig:   \index{stack: {\tt Sequence} generic interface}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sequence/Sequence.ig:   \index{queue: {\tt Sequence} generic interface}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sequence/Sequence.ig:   \index{deque: {\tt Sequence} generic interface}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sequence/Sequence.ig:(* A "Sequence(Elem).T" (or just a {\it sequence}) represents an
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sequence/Sequence.ig:\smallskip
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sort/ArraySort.ig:(* \index{sorting!arrays} *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sort/ArraySort.ig:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sort/ArraySort.ig:   \item It is not stable.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sort/ArraySort.ig:   \item On average, it requires "O(N ln N)" comparison and assignment
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sort/ArraySort.ig:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sort/ArraySort.ig:   For an expanded description of QuickSort, see \cite{Sedgewick:Alg}.
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sortedtable/SortedTable.ig:   \index{map!updatable}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sortedtable/SortedTable.ig:   heap-ordered binary trees or ``treaps'' (see \cite{Aragon}).  In
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/statistics/Stat.i3:  |      Wr.PrintF(stderr, "\n");
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sx/Sx.i3:   \index{symbolic expression}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sx/Sx.i3:|  ! # $ % & * + - . / : < = > ? @ [ ] ^ _ { } `{\tt \char'176}`
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sx/Sx.i3:   {\def\ttSlashBackslash{{\tt \char'134\char'174}} \ttSlashBackslash}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sx/Sx.i3:| |1\||
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sx/Sx.i3:(* {\tt True = Atom.FromText(\char'42TRUE\char'42)},
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/sx/Sx.i3:    {\tt False = Atom.FromText(\char'42FALSE\char'42)}. *)
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/table/Table.ig:   \index{map!updatable}
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/table/Table.ig:   the {\em canonical representative} of all the keys that are
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  NUL = '\000';    SOH = '\001';    STX = '\002';    ETX = '\003';
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  EOT = '\004';    ENQ = '\005';    ACK = '\006';    BEL = '\007';
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  BS  = '\010';    HT  = '\011';    NL  = '\012';    VT  = '\013';
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  NP  = '\014';    CR  = '\015';    SO  = '\016';    SI  = '\017';
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  DLE = '\020';    DC1 = '\021';    DC2 = '\022';    DC3 = '\023';
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  DC4 = '\024';    NAK = '\025';    SYN = '\026';    ETB = '\027';
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  CAN = '\030';    EM  = '\031';    SUB = '\032';    ESC = '\033';
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  FS  = '\034';    GS  = '\035';    RS  = '\036';    US  = '\037';
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  SP  = '\040';    DEL = '\177';
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  Range = ['\000'..'\377'];
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  Asciis        = Set{'\000'.. '\177'};
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  Controls      = Set{'\000'.. '\037', '\177'};
/home/ftp/pub/m3/pkg/SRC-m3/libm3/src/types/ASCII.i3:  Spaces        = Set{' ', '\t', '\n', '\r', '\f'};
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/C/Common/M3toC.i3:   and sharing storage with "t".  "FreeCopiedS" should {\em not} 
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:   \index{checksum}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:   \cite{Rabin}, as refined by Andrei Broder \cite{Broder}. *)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:(* \paragraph{The probabilistic guarantee.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:Define a {\it nest} to be a text string or an ordered 
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:Two nests "x" and "y" {\it collide} if "x # y" but 
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:A nest "x" is a {\it subnest} of "y" if it occurs anywhere
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:Define the {\it length} of a nest to be the sum of the
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:inside it, and the {\it size} of a nest to be the number 
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:\paragraph{Example applications.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:\paragraph{Fingerprinting general data structures.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:\paragraph{Pitfalls.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/fingerprint/Fingerprint.i3:of a node by concatenating the node's label with the {\it fingerprints}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/Common/Float.ig:(* Return $\hbox"x"\cdot 2^{\hbox"n"}$. *)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/Common/Float.ig:   integer $n$ such that the ratio $\hbox"ABS(x) / Base"^{n}$ is in
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/Common/Float.ig:   always returns the $n$ such that $\hbox"ABS(x) / Base"^{n}$ is in
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/Common/Float.ig:\index{NaN (not a number)}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/Common/Float.ig:(* \index{floating-point!conversion from decimal}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/Common/Float.ig:   \index{decimal conversion!to floating-point}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/Common/Float.ig:(* \index{floating-point!conversion to decimal}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/Common/Float.ig:   \index{decimal conversion!from floating-point}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/Common/Float.ig:   by Guy L.~Steele Jr.\ and Jon L White~\cite{Steele}.  David M.~Gay
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/Common/Float.ig:   rule~\cite{Gay}.  For example, in IEEE double precision, the
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/DS3100/FloatMode.i3:\begin{quote}   
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/DS3100/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/DS3100/FloatMode.i3:\begin{quote}  
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/DS3100/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/IEEE-default/FloatMode.i3:\begin{quote}   
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/IEEE-default/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/IEEE-default/FloatMode.i3:\begin{quote}  
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/IEEE-default/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/IRIX5/FloatMode.i3:\begin{quote}   
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/IRIX5/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/IRIX5/FloatMode.i3:\begin{quote}  
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/IRIX5/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SOLsun/FloatMode.i3:\begin{quote}   
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SOLsun/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SOLsun/FloatMode.i3:\begin{quote}  
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SOLsun/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SPARC/FloatMode.i3:\begin{quote}   
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SPARC/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SPARC/FloatMode.i3:\begin{quote}  
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SPARC/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SUN386/FloatMode.i3:\begin{quote}   
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SUN386/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SUN386/FloatMode.i3:\begin{quote}  
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/SUN386/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/VAX/FloatMode.i3:\begin{quote}   
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/VAX/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/VAX/FloatMode.i3:\begin{quote}  
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/float/VAX/FloatMode.i3:\end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RT0.i3:  String      = UNTRACED REF CHAR;       (* a '\000' terminated string *)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTAllocator.i3:   \index{allocator}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTAllocator.i3:   \index{storage allocator}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTAllocator.i3:   \index{heap}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:   \index{collector}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:   \index{garbage collector!control over}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:   \begin{enumerate}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:   \item
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:      \begin{enumerate}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:      \item
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:      \item
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:      \end{enumerate}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:   \item
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:   \end{enumerate}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:\paragraph*{Disabling the collector.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:\paragraph*{Disabling motion.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:\paragraph*{Collecting.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:\paragraph*{Implementation notes.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:   \index{garbage collector!properties of}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:   \index{{\tt \char'100{}M3nogc} command-line flag}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollector.i3:   \index{RTCollectorSRC interface@{\tt RTCollectorSRC} interface}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollectorSRC.i3:(* \paragraph*{When to collect.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollectorSRC.i3:(* \paragraph*{Disabling VM protection.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollectorSRC.i3:(* \paragraph*{Tuning the SRC collector.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTCollectorSRC.i3:(* \paragraph{Background Collection.}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTHeap.i3:   \index{heap}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTHeap.i3:   \index{storage allocator}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTHeap.i3:   \index{allocator}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTType.i3:  \index{runtime type}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTType.i3:  \index{type!runtime}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTTypeFP.i3:  \index{fingerprint!of type}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/runtime/common/RTTypeFP.i3:  \index{type!fingerprint of}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:  Escape = '\\';
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:  NonPrinting = CharSet{'\000'..'\037', '\177'};
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:  Quotes = CharSet{'\'', '\"'};
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:    \\        \
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:    \'        '
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:    \"        "
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:    \n        LF
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:    \r        CR
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:    \t        HT
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:    \f        FF
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:    \0xx      0xx        where 0xx is an octal 000..077.
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:    \1xx      1xx        where 1xx is an octal 100..177.
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:    \x        x          where x is any other character.
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextConv.i3:   char of textIn is \ ), or, when quoted is TRUE, if Length(textIn)<2 or 
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextF.i3:  (* The array contains the characters of the text followed by a '\000' *)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/text/TextF.i3:     at position n is '\000' *)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/thread/Common/Thread.i3:(* \paragraph*{Specifying thread stack size.} Normally "Fork" uses a
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   \index{calendar date}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   \index{local time}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   \index{time!local}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   \index{time zone}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   \index{time!zone}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   \index{universal coordinated time}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   \index{time!UTC (universal coordinated time)}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   \index{Greenwich mean time}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   \index{time!Greenwich mean time}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   \index{time!Date interface@{\tt Date} interface}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Date.i3:   "zone" equal to {\tt \char'42[Unknown zone]\char'42}, and "UTC" is
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/FmtTime.i3:|  IO.Put("The time is " & FmtTime.Long(Time.Now()) & "\n")
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Tick.i3:   \index{time!elapsed}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Tick.i3:   \index{elapsed time}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Tick.i3:   \index{time!Tick interface@{\tt Tick} interface}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Tick.i3:   taken less than $\hbox"2"^{\hbox"Word.Size"}$ ticks after "t0",
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Time.i3:   \index{time!of day}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Time.i3:   \index{time!Time interface@{\tt Time} interface}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/time/Common/Time.i3:   \index{epoch}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/aix-3-2/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/aix-3-2/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/aix-3-2/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/aix-ps2-1-2/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/aix-ps2-1-2/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/aix-ps2-1-2/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/freebsd-1/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/freebsd-1/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/freebsd-1/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/freebsd-2/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/freebsd-2/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/freebsd-2/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/hpux-7-0/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/hpux-7-0/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/hpux-7-0/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ibm-4-3/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ibm-4-3/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ibm-4-3/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/linux/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/linux/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/linux/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/osf-1.ALPHA_OSF/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/osf-1.ALPHA_OSF/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/osf-1.ALPHA_OSF/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/osf-1.DS3100/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/osf-1.DS3100/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/osf-1.DS3100/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/solaris-2-x/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/solaris-2-x/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/solaris-2-x/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/sunos-4-x/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/sunos-4-x/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/sunos-4-x/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/sysv-4.0/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/sysv-4.0/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/sysv-4.0/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.AP3000/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.AP3000/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.AP3000/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.ARM/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.ARM/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.ARM/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.DS3100/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.DS3100/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.DS3100/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.NEXT/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.NEXT/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.NEXT/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.SEQUENT/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.SEQUENT/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.SEQUENT/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.SUN3/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.SUN3/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.SUN3/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.SUN386/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.SUN386/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.SUN386/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.UMAX/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.UMAX/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.UMAX/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.VAX/Unix.i3:    PRTERA =	Shift (1, 17); 	(* \ ... / erase		*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.VAX/Unix.i3:    CRTERA =	Shift (1, 18); 	(* " \b " to wipe out char	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/unix/ultrix-3-1.VAX/Unix.i3:    CRTKIL =	Shift (1, 26); 	(* Kill line with " \b "	*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:   \index{weak reference}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:   \index{deallocating resources}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:   \index{garbage collection!weak references}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:   A {\it node} is a datum allocated on the traced heap. Thus a node
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:   We say that a weak reference "w" {\it dies} at the moment that the
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:   Associated with each weak reference "w" is a {\it cleanup procedure}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:   A node is {\it reachable} if it can be reached by a path of traced
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:   cleanup {\it other than itself}.
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:\subsection*{Examples}
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:{\bf 1}.\ \  Suppose you want writers of the class "WrX.T" to be automatically
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:\smallskip
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/weakref/WeakRef.i3:{\bf 2.}\ \  The network object runtime must map wire
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinGDI.i3:  HS_FDIAGONAL  = 2 (* \\\\\ *);
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinIoctl.i3:| #define CTL_CODE( DeviceType, Function, Method, Access ) (                 \
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinIoctl.i3:|     ((DeviceType) << 16) | ((Access) << 14) | ((Function) << 2) | (Method) \
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinNT.i3:#define IMAGE_FIRST_SECTION( ntheader ) ((PIMAGE_SECTION_HEADER)        \
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinNT.i3:    ((DWORD)ntheader +                                                  \
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinNT.i3:     FIELD_OFFSET( IMAGE_NT_HEADERS, OptionalHeader ) +                 \
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinNT.i3:     ((PIMAGE_NT_HEADERS)(ntheader))->FileHeader.SizeOfOptionalHeader   \
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinNT.i3:  IMAGE_ARCHIVE_START        : Ctypes.char_star; (* := TtoS("!<arch>\n")*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinNT.i3:  IMAGE_ARCHIVE_END          : Ctypes.char_star; (* := TtoS("`\n")*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinNT.i3:  IMAGE_ARCHIVE_PAD          : Ctypes.char_star; (* := TtoS("\n")*)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinUser.i3:   {(pt).x = (SHORT)LOWORD(pts); \ (pt).y = (SHORT)HIWORD(pts);} #define
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinUser.i3:  (* 16_0010 - reserved (see user\server\usersrv.h) *)
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinVer.i3:(*****************************************************************************\
/home/ftp/pub/m3/pkg/SRC-m3/m3core/src/win32/WinVer.i3:\*****************************************************************************)
/home/ftp/pub/m3/pkg/SRC-m3/m3markup/src/XFormat.i3:      If c='\n', sends a NewLine(t) operator to the formatter; otherwise
/home/ftp/pub/m3/pkg/SRC-m3/m3markup/src/XFormat.i3:      '\n' are compacted into a single text string.
/home/ftp/pub/m3/pkg/SRC-m3/m3middle/src/M3File.i3:   "\r" characters and mapping "\n" into "eol".  *)
/home/ftp/pub/m3/pkg/SRC-m3/m3middle/src/Target.i3:     text line on the target system:  '\n' on Unix, '\r\n' on DOS *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tests/src/c1/c130/BuffOWr.i3:     when it receives a '\n' *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST.i3:\subsection{Attribute Types}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST.i3:(e.g. denoting the {\it class} of statements), with each choice
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST.i3:\subsection{Multiple Inheritance}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST.i3:(*\subsubsection{M3AST.NODE}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:(* \subsection{Identifiers} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:(* \subsubsection{Definitions} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:(* \subsubsection{Uses}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:(* To support the {\em multiple inheritance} of the "ID", or "USED_ID"
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:(* \subsection{Compilation Units}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:(* Generic definitions and {\it normal} units both have {\it bodies}, i.e.
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:(* \subsection{Declarations and Revelations}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:(* \subsubsection{Type Productions} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:(* \subsection{Expression productions}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:"SRC_NODE". At this point we {\it reveal} that "LITERAL" is actually a
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_AS.i3:(* \subsubsection{Statements} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_LX.i3:entity in the source form of the program.  The {\it source position}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_PL.i3:(* The {\em depends-on} set is computed for each module. *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:interpreted as {\it unset}, i.e. not computed.  However, there are a
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:(*\subsection{Naming Conventions}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:(* These functions return distinguished values that indicate {\it unset}. *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:(* \subsection{Unit Attributes} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:\begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:\item The set of units defined as the transitive closure of all imported 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:\item The set of all "OBJECT" types and traced "REF" types in the unit.
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:\item For each "REVEAL" of a particular opaque type in the unit, information 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:\end{itemize} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:(*\subsection{Identifier Attributes}*)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:(*\subsection{Type Attributes} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:(* The notion of {\it no-type} is convenient, e.g. for a procedure
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:(* \subsection{Expressin Attributes}*)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:(*\subsection{Identifier Scopes} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:(*\subsection{Multiple Inheritance Support} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:(* \subsection{Temporary Attributes}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:is complete, but have {\it temporary} status. The original notion of
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_SM.i3:persistent ASTs, for example, in AST {\it pickles}. Certainly the
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/ast/M3AST_TM.i3:(* "M3AST_TM" defines some {\em temporary} AST attributes to support
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/astdisplay/StdFormat.i3:(* {\em Format} the tree "n" in a standard way, by modifying the "lx_node_s"
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/files/Common/M3DirFindFile.i3:from directories marked as {\it read-only} to the new finder. If an
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/files/Common/M3PathElem.i3:(* An "M3PathElem.T" is a unique representative for a set of {\it
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/files/Common/M3PathElemList.i3:{\it search path} as a list of directories. *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/files/Common/M3PathElemOSPriv.i3:  PathnameSeparator: CHAR;   (* E.g. '/' for POSIX, '\' for WIN32 *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/files/Common/M3PathElemOSPriv.i3:  SCurrentS: TEXT;           (* E.g. "/./" for POSIX, "\.\" for WIN32 *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/files/Common/M3PathElemOSPriv.i3:  SParentS: TEXT;            (* E.g. "/../" for POSIX, "\..\" for WIN32 *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/files/Common/M3PathFile.i3:(* Reads the named {\it m3path} file in the named directory. An m3path
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:method, one specifies the syntax by a grammar consisting of {\it
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:Such grammars define the {\it external} form of programs, which is
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:compilers. As a result they tend to obscure the {\it essential}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:{\it concrete} syntax. If we abstract from the representational
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:details of the concrete syntax, what we are left with is an {\it
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:abstract} syntax for the language, defined by an {\it abstract
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:The abstract grammar defines a finite set of {\it constructs}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:using a finite set of {\it productions}, defined according to
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:associated representation as a {\it parse tree}, so the equivalent
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:as an {\it abstract syntax tree}. The leaves of the tree denote
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:It is important to note that when we talk of a {\it tree}, we are
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:referring to the {\it abstraction} of a tree. It is not implied
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:\subsection{Specifying an AST in Modula-3}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:aggregate production. LM3 also provides the notion of a {\it sequence}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:\subsection{Augmenting an AST}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:the the attributes that denote the {\it pure} abstract syntax tree,
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:\subsection{AST Layers}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:a disadvantage. One solution is to define a {\it property set}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:sets. We refer to each set as an AST {\em layer} or, occasionally,
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:a {\em view}. 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:\subsection{AST Layers in Modula-3}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:makes extensive use of {\it interfaces} and {\it partial revelations}. 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:Now consider a {\em static semantic} layer for the above grammer, in which
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:\subsubsection{Defining the concrete representation}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST.i3:(* \subsection{Basic Definitions} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/ASTCopy.i3:{\em entry} callback to a node, the value of the "ncopy" will be "NIL".
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/ASTCopy.i3:On an {\em exit} callback, "ncopy" will refer to the newly created copy.
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/ASTCopy.i3:called in {\em entry} mode. *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/ASTWalk.i3:often referred to a {\em tree walk} or an {\em AST walk}.
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/ASTWalk.i3:this is defined to be the {\em natural} order, that is, corresponding
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/ASTWalk.i3:which is to vis to apply the callback method on {\em entry} to the
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST_CopyRep.i3:attributes are {\em shallow-copied} or {\em deep-copied} is left to
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/gast/AST_Iter.i3:(* \subsubsection{Example} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args.i3:supplies without the keyword.  Keywords are assigned {\it short forms}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args.i3:registered tools. A keyword may be denoted as {\it shared} by setting
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args.i3:(* \subsection{Help information} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args.i3:(* \subsection{Getting and Setting Argument Values} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args.i3:(* \subsection{Example} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:(* \subsection{LM3 formal specification} *)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:"noDuplicates".  In addition the {\it master} tool is denoted by
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    ((toolName # NIL \and Length(toolName) > 0) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    (toolDescription # NIL \and Length(toolDescription) > 0) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    (version # NIL \and Length(version) > 0))
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  ENSURES (RESULT \in toolSet) \and FRESH(RESULT) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    (master \implies (masterTool = RESULT)) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    RESULT.keySet = {}  \and RESULT.flagMap = {} \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    RESULT.stringMap = {} \and RESULT.stringListMap = {} \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    RESULT.nameToKeyMap = {} \and RESULT.name = toolName
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    | EXISTS t: T; (t \in toolSet) \and (t.name = toolName) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  ENSURES (masterTool' = t) \and (RESULT = masterTool)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    (t # NIL) \and IsWF_Keyword(argName) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    ((usage # NIL) \and (Length(usage) >= 0))
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    EXISTS k: Key; (k \in t.keySet) \and (k.name = argName) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:                   (k.shared = shared) \and (k.usage = usage) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  | noDuplicates \and 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:      (FORALL tx: T; (tx \in toolSet) \and 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:          (EXISTS k: Key (k \in tx.keySet) \and (k.name = argName) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:          \not(k.shared \and shared))) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  REQUIRES ((t # NIL) \and IsWF_Keyword(argName)) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:              ((usage # NIL) \and (Length(usage) >= 0)) 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:    EXISTS k: Key; (k \in t.keySet) \and (k.name = argName) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  | noDuplicates \and 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:      (FORALL tx: T (tx \in toolSet) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:          (EXISTS k: Key (k \in tx.keySet) \and (k.name = argName) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:          \not(k.shared \and shared))) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  REQUIRES ((t # NIL) \and IsWF_Keyword(argName)) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:           ((usage # NIL) \and (Length(usage) >= 0)) 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  ENSURES (EXISTS k: Key; (k \in t.keySet) \and (k.name = argName) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  | noDuplicates \and 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:        (FORALL tx: T; (tx \in toolSet) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:        (EXISTS k: Key (k \in tx.keySet) \and (k.name = argName) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:        \not(k.shared \and shared))) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  REQUIRES t \in toolSet
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  | EXISTS k: Key; (k \in t.keySet) \and (k.opt = Opt.Required) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:                    \not(defined(t.flagMap, k.name)) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  REQUIRES (t \in toolSet)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  | \not defined(t.nameToKeyMap, argName) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  REQUIRES (t \in toolSet)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  | \not defined(t.nameToKeyMap, argName) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  REQUIRES (t \in toolSet)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  | \not defined(t.nameToKeyMap, argName) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  REQUIRES (t \in toolSet) 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  ENSURES t.flagMap' = bind(t.flagMap, argName, f) \and
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:      (IF noDuplicates \and (t.nameToKeyMap[argName]).shared THEN
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:            (tx \in toolSet) \and defined(tx.flagMap, argName) \implies
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  | \not defined(t.nameToKeyMap, argName) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  REQUIRES (t \in toolSet)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  | \not defined(t.nameToKeyMap, argName) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  REQUIRES (t \in toolSet)
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/misc/M3Args_LM3.i3:  | \not defined(t.nameToKeyMap, argName) =>
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/pl/M3LMain.i3:(* Returns a list of {\it main} modules in "c", that is, those that export
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CHash.i3:\begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CHash.i3:\item The table size. It is a bucket and chain style hash table; "size" 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CHash.i3:\item An optional "IdCreator" object. If this is supplied its "new"
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CHash.i3:\end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CHash.i3:\subsection{Incremental Hashing}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CLex.i3:\begin(itemize}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CLex.i3:\item Valid numeric literals. The text starts with a digit and ends with a hex 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CLex.i3:\item Valid text literals. The text starts and ends with double quote 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CLex.i3:\item Valid character literals. The text starts and ends with single quote 
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CLex.i3:\end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CParse.i3:\begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CParse.i3:\item
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CParse.i3:\item
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CParse.i3:\item
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CParse.i3:\item
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CParse.i3:\item
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CParse.i3:\item
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CParse.i3:\end(itemize}
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CParse.i3:      SET OF CHAR{'!', '$', '%', '?', '@', '\\', '_', '`', '~'};
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/syn/M3CToken.i3:In order to support {\extension} of the basic token set, for example,
/home/ftp/pub/m3/pkg/SRC-m3/m3tk/src/toolframe/M3PathTool.i3:If neither of these arguments is given, a file named {\it m3path},
/home/ftp/pub/m3/pkg/SRC-m3/mentor/src/kpaths/ShortestPath.i3:(* The call "NEW(T).init(k)" returns a new empty graph with {\it rank
/home/ftp/pub/m3/pkg/SRC-m3/mentor/src/kpaths/ShortestPathNoZeus.i3:(* The call "NEW(T).init(k)" returns a new empty graph with {\it rank limit} "k".
/home/ftp/pub/m3/pkg/SRC-m3/mg/src/R2Path.i3:   A {\it segment} is a directed arc in the Cartesian plane determined by
/home/ftp/pub/m3/pkg/SRC-m3/mg/src/R2Path.i3:   of real numbers "[0, 1]".  The segment is said to {\it start} at "(h(0),
/home/ftp/pub/m3/pkg/SRC-m3/mg/src/R2Path.i3:   v(0))" and {\it end} at "(h(1), v(1))".  If "h" and "v" are linear
/home/ftp/pub/m3/pkg/SRC-m3/mg/src/R2Path.i3:   functions of "t", then the segment is {\it linear}: it consists of a
/home/ftp/pub/m3/pkg/SRC-m3/mg/src/R2Path.i3:   segment is {\it degenerate}: it consists of a single point.
/home/ftp/pub/m3/pkg/SRC-m3/mg/src/R2Path.i3:   The segments of a path are grouped into contiguous {\it subpaths}, which
/home/ftp/pub/m3/pkg/SRC-m3/mg/src/R2Path.i3:   can be {\it open} or {\it closed}.  Within a subpath, each segment
/home/ftp/pub/m3/pkg/SRC-m3/mg/src/R2Path.i3:   The {\it current point} of a path is the endpoint of the last segment of
/home/ftp/pub/m3/pkg/SRC-m3/mg/src/R2Path.i3:         zero and one.  (This is called the {\it Bezier} arc determined by
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:(* A {\it network object} is an object whose methods can be invoked by
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   The program invoking the method is called the {\it client} and the
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   program containing the network object is called the {\it owner}.  The
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   \index{network object}\index{network object!client}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   \index{network object!owner} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   A {\it program instance} is an activation of a program.
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   suite of address spaces.\index{program instance}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   An {\it agent}\index{agent} is a program that provides a table that
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   \ttindex{NetObj.T}\ttindex{NetObj.Address} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   human-sensible name is "host". \ttindex{NetObj.Locate} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   example, in an Internet environment, "Locate(\dq decsrc.pa.dec.com\dq )" 
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   remove an entry from the table.  \ttindex{NetObj.Export} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   contains no entry for "name". \ttindex{NetObj.Import} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:(* \ttindex{NetObj.Error}%
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   {\it orphaned} remote invocation continued to execute at the owner,
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObj.i3:   while the client raised "NetObj.Error".\index{orphan computation}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObjNotifier.i3:   \ttindex{NetObjNotifier.AddNotifier} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObjRT.i3:   the maintenance of the network object runtime {\it object table}.
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetObjRT.i3:   which {\it pins} it in the object table, this is, "o" is considered 
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetStream.i3:   bandwidth supported by the underlying transport.  \index{buffered
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetStream.i3:   streams}\ttindex{Rd.T}\ttindex{Wr.T}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetStream.i3:   \ttindex{NetStream.ReleaseRd} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/NetStream.i3:   \ttindex{NetStream.ReleaseWr} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/SpecialObj.i3:(* The "SpecialObj" interface defines the network object runtime {\it 
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubConn.i3:   writer "c.wr".\ttindex{StubLib.Conn}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubConn.i3:   interfaces\cite{Modula3} to reveal the internal structure of
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubConn.i3:   the network object protocol.\index{buffered streams}  *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   built automatically.\ttindex{NetObj.T}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   \index{stubs}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   Such a {\it surrogate} object is constructed by the network 
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   is encountered.\index{stubs!client} 
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   \index{stubs!server}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   concurrently. \ttindex{StubLib.Conn} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   environment.\ttindex{StubLib.DataRep}\ttindex{StubLib.NativeRep}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   with the object owner.\ttindex{StubLib.StubProtocol}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   \ttindex{StubLib.NullStubProtocol}\ttindex{StubLib.SystemStubProtocol} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:    "TYPECODE" operator. \index{typecodes}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   \ttindex{StubLib.Register}  *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:\paragraph{Client stub procedures.}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:\index{stubs!client}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   will be encoded.\ttindex{StubLib.StartCall} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:    message.\ttindex{StubLib.AwaitResult} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   \ttindex{StubLib.EndCall} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:\paragraph{Server dispatcher procedures.}  
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:\index{stubs!server}\index{dispatching}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   should be used to encode any results.\ttindex{StubLib.Dispatcher}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   \ttindex{StubLib.StartResult} *)  
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:\paragraph{Marshaling of reference types.}  
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:\index{marshaling!of reference types}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   \ttindex{StubLib.OutRef} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   \ttindex{StubLib.InRef} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:\paragraph{Marshaling of generic data.}  
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:\index{marshaling!of generic data}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:(* \smallskip
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/StubLib.i3:   \smallskip
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:\begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \item A "Transport.T" is an object that manages connections of some 
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   particular class ({\it e.g.}, TCP).
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \item A "Transport.Location" is an object that creates connections of some
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \item A "Transport.Endpoint" is a transport-specific name for an
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   address space ({\it e.g.}, an IP address plus a port number plus
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \item The "fromEndpoint" method of a transport converts an endpoint into a 
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:\end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:\noindent
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:\begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \item The "toEndpoint" method returns an endpoint for 
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \item Transports are required to provide the threads
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \ttmindex{Transport.T}{serviceCall {\rm method}}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:\end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:\noindent
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:\begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \item The "new" method of a location returns a connection to the address 
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \ttmindex{Transport.Location}{new {\rm method}}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \item The call "loc.free(c, reUse)" frees the connection "c", which must
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \ttmindex{Transport.Location}{free {\rm method}}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \item A transport is responsible for monitoring the liveness of program
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \ttmindex{Transport.Location}{dead {\rm method}}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \index{liveness}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:\end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:\noindent
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \ttindex{NetObj.Address}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \ttindex{StubLib.Conn} A transport must ensure that the "loc"
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Transport.i3:   \index{back connections} *)
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/Voucher.i3:   source or the writer's target by invoking the appropriate {\it claim}
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/netobjrt/WireRep.i3:   value "SpecialT" corresponds a {\it special object} which is a 
/home/ftp/pub/m3/pkg/SRC-m3/netobj/src/NetObjMon.i3:          are dead, it won't be possible to unmarshal {\em any} of
/home/ftp/pub/m3/pkg/SRC-m3/obliqprint/src/ObliqPrinter.i3:  (* Print a text to swr (NIL = standard output), e.g. "\n". *)
/home/ftp/pub/m3/pkg/SRC-m3/ocr/src/Common/OCR.i3:|  {w \n}
/home/ftp/pub/m3/pkg/SRC-m3/parseparams/src/ParseParams.i3:   \index{parameters of a process} \index{process!parameters}
/home/ftp/pub/m3/pkg/SRC-m3/parseparams/src/ParseParams.i3:   |       "prt \\\n" &
/home/ftp/pub/m3/pkg/SRC-m3/parseparams/src/ParseParams.i3:   |       "  -fontSize <n> \\\n" &
/home/ftp/pub/m3/pkg/SRC-m3/parseparams/src/ParseParams.i3:   |       "  [ -landscape | -portrait ] \\\n" &
/home/ftp/pub/m3/pkg/SRC-m3/parseparams/src/ParseParams.i3:   |       "  [ -pages <n> <n> [ -reverse ] ]... \\\n" &
/home/ftp/pub/m3/pkg/SRC-m3/parseparams/src/ParseParams.i3:   |       "  file...\n";
/home/ftp/pub/m3/pkg/SRC-m3/postcard/src/MailUtilities.i3:  DefaultWS = SET OF CHAR{' ', '\t', '\n', '\r', '\f', ASCII.VT, ASCII.NUL};
/home/ftp/pub/m3/pkg/SRC-m3/postcard/src/MailUtilities.i3:     is empty, it is omitted entirely.  The body is prefixed by "\n------". *)
/home/ftp/pub/m3/pkg/SRC-m3/pp/src/NewFormatter.i3:    If c='\n', sends a NewLine(t) operator to the formatter; otherwise
/home/ftp/pub/m3/pkg/SRC-m3/pp/src/NewFormatter.i3:    '\n' are compacted into a single text string.
/home/ftp/pub/m3/pkg/SRC-m3/realgeometry/src/RealPath.i3:   A {\it segment} is a directed arc in the Cartesian plane determined by
/home/ftp/pub/m3/pkg/SRC-m3/realgeometry/src/RealPath.i3:   of real numbers "[0, 1]".  The segment is said to {\it start} at "(h(0),
/home/ftp/pub/m3/pkg/SRC-m3/realgeometry/src/RealPath.i3:   v(0))" and {\it end} at "(h(1), v(1))".  If "h" and "v" are linear
/home/ftp/pub/m3/pkg/SRC-m3/realgeometry/src/RealPath.i3:   functions of "t", then the segment is {\it linear}: it consists of a
/home/ftp/pub/m3/pkg/SRC-m3/realgeometry/src/RealPath.i3:   segment is {\it degenerate}: it consists of a single point.
/home/ftp/pub/m3/pkg/SRC-m3/realgeometry/src/RealPath.i3:   The segments of a path are grouped into contiguous {\it subpaths}, which
/home/ftp/pub/m3/pkg/SRC-m3/realgeometry/src/RealPath.i3:   can be {\it open} or {\it closed}.  Within a subpath, each segment
/home/ftp/pub/m3/pkg/SRC-m3/realgeometry/src/RealPath.i3:   The {\it current point} of a path is the endpoint of the last segment of
/home/ftp/pub/m3/pkg/SRC-m3/realgeometry/src/RealPath.i3:         zero and one.  (This is called the {\it Bezier} arc determined by
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/board/src/Board.i3:   {\em scope} of the client:   
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/board/src/Board.i3:   If "additive" is true, the modifications are {\em additive} in that the new
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/board/src/BoardServer.i3:   not already {\em loaded} in the memory of the server, it gets loaded from
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/board/src/Callback.i3:   If "additive" is true, the modification is {\em additive} in that the new
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/board/src/Item.i3:(* An "Item.T",  or an {\em item}, is the smallest entity that
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/boardclient/src/View.i3:(* A "View.T", or a {\em view}, is a  window owned by a board client
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/boardclient/src/View.i3:   The rectangular portion displayed by the view is called its {\em
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/boardclient/src/View.i3:   its {\em scope}, and the list of cached items is called its {\em
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/boardclient/src/View.i3:   If "additive" is true, the modification is {\em additive} in that the new
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/boardclient/src/Win.i3:   {\em activities} in the display.
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/boardclient/src/Win.i3:   There are two kinds of activities: {\em actions} and {\em
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/boardclient/src/Win.i3:   \subsection{Actions}
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/boardclient/src/Win.i3:   At any time, the {\em status} of the window describes the current
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/boardclient/src/Win.i3:(* \subsection{Events} *)
/home/ftp/pub/m3/pkg/SRC-m3/sharedboard/boardserver/src/NotifyQueue.i3:   queue. However, the implementation may {\em merge} records for
/home/ftp/pub/m3/pkg/SRC-m3/stable/example/src/Fib.i3:   \subsection{Object Interface}
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/LogManager.i3:   A snapshot consists of two sequences of bytes, a {\it checkpoint} 
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/LogManager.i3:   and a {\it redo log}.  The repository must be stable; that is, 
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/Stable.ig:(*  A {\it stable object} is an object whose state is stored on the disk
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/Stable.ig:    {\it Proceedings of the 11th ACM Symposium on Operating System 
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/Stable.ig:(* \subsection{Exceptions}
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/Stable.ig:\subsection{Customizations}
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/Stable.ig:    \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/Stable.ig:    \item  If you don't want every update to be flushed
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/Stable.ig:    \item  If you don't want to use "Pickle" for checkpointing, override
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/Stable.ig:    \item  If you don't want to store the stable state in the ordinary file system, 
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/Stable.ig:    \item  If you don't want to use network-object style marshaling for recording
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/Stable.ig:    \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/StableLog.i3:   \paragraph{Exceptions}
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/StableLog.i3:    "OutCall()" has to be called {\em before} logging the procedure 
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/StableLog.i3:(* \subsubsection*{Procedures for generic parameters logging} *)
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/StableLog.i3:(* \paragraph{Logreading procedures} \  *)
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/StableRep.ig:   of stable objects "Stable.T" that is independent of {\tt Data.T} (see
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/StableRep.ig:(* \subsubsection*{Implementations of "Stable.ig"-methods} *)
/home/ftp/pub/m3/pkg/SRC-m3/stable/src/StableRep.ig:(* \subsubsection*{Procedures to be called from the generated code} *)
/home/ftp/pub/m3/pkg/SRC-m3/stable/test/src/TestObj.i3:    same values as an object just after static initialisations (i.e.\
/home/ftp/pub/m3/pkg/SRC-m3/stablegen/src/StablegenArgs.i3:   (i.e.\ invalid or ``-help'') *)
/home/ftp/pub/m3/pkg/SRC-m3/synex/src/SynScan.i3:|     Special	# $ % & * + - / : = < > @ \ ^ |
/home/ftp/pub/m3/pkg/SRC-m3/synex/src/SynScan.i3:|                 or one of `'` `"` `\`, or is one of the pairs of
/home/ftp/pub/m3/pkg/SRC-m3/synex/src/SynScan.i3:|		  characters `\'` `\"` `\\`.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Cursor.i3:   Standard X screentypes support the cursors named in {\it X Window
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Cursor.i3:   System} by Scheifler et.  al. \cite{XSpec} Appendix B. Therefore, for
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/PaintOp.i3:A painting operation that ignores the source pixel is called a {\it tint}.  
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/PaintOp.i3:tint is said to be {\it opaque}. 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Palette.i3:   form is called {\it resolving} the resource.  Here are the closure 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Palette.i3:   a {\it palette}, which is a table of screen-dependent resources
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Palette.i3:   screentype for a top-level window: \index{palette}*)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScreenType.i3:   must use the new screentype's {\it oracles} to look up resources
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnColorMap.i3:   particular screentype, called the {\it owner} of the handle. Some
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnColorMap.i3:   Every colormap has a {\it depth}; the pixel values defined by the
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnColorMap.i3:   screentype defines a set of {\it preferred} colors that cover the
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnColorMap.i3:   as {\it stable}.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnColorMap.i3:(* \subsubsection{Obtaining handles from the oracle} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnColorMap.i3:(* \subsubsection{The handle object} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnColorMap.i3:   \medskip An "RGB" represents the color with the given blend of red,
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnCursor.i3:   particular screentype, called the {\it owner} of the handle.  Some
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnCursor.i3:\subsubsection{Obtaining handles from the oracle} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnCursor.i3:(* \subsubsection{The handle object} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:   particular screentype, called the {\it owner} of the handle.  All 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:(* \subsubsection{Obtaining handles from the oracle} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:(* \subsubsection{Font attributes} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:   be found in Part IV of {\it X Window System} by Scheifler and Gettys
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:   \cite{XSpec}.  Here they are described in brief.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:The argument "version" specifies the version of the {\it X Logical
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem "Proportional": Character widths vary.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem "Monospaced": Character widths are constant.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem "CharCell": Font is self-clearing, as defined in
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip\nobulletitem "Any": Any of the above.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:\medskip The argument "averageWidth" specifies the un-weighted
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:ISO Latin-1 fonts.  See Appendix G of \cite{XSpec}. *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:(* \subsubsection{Registering fonts} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:(* \subsubsection{The handle object}  *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:(* \subsubsection{The raw representation} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnFont.i3:   defined in Part IV of {\it X Window System} ({\it op. cit.}); we
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnPaintOp.i3:   A {\it tint} is a paintop that is independent of "s".  If "op" is
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnPaintOp.i3:(* \subsubsection{Obtaining handles from the oracle}  *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnPaintOp.i3:(* \subsubsection{The handle object} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnPixmap.i3:   is valid for use on a particular screentype, called the {\it owner}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnPixmap.i3:\subsubsection{Obtaining handles from the oracle} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnPixmap.i3:(* \subsubsection{The handle object} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnPixmap.i3:(* \subsubsection{The raw representation}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/ScrnPixmap.i3:   larger rectangular pixmap, which we shall call the {\it surround}.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:(* \subsection{Window placement} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3: (* \subsection{Enumerating and positioning screens} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:\medskip\bulletitem "res.id" is the "ID" of the screen currently
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:\medskip\bulletitem "res.q" is the point in screen coordinates that
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:\medskip\bulletitem "res.trsl" is the window system on which "v" is
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:\medskip\bulletitem
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:\medskip The point "p" need not be in the domain of "v".  If "v" is
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:(* \subsection{Reading pixels from a screen} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:(* \subsection{Checking on recent input activity} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:(* \subsection{Connecting to a window system} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:   of {\it X Window System}, by Scheifler et.  al., Digital Press, 1990
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/Trestle.i3:   \cite{XSpec}.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The public methods} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Screens and domains} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* Every "VBT" has a {\it screen} that associates a pixel value with
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   the pixel values in a "VBT"'s screen is called {\it painting}.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   {\it domain} of the "VBT": *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Locking level} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{LL (Locking Level)@{\protect\tt LL} (Locking Level)}*)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\bulletitem The global "mu" precedes every "VBT".
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\bulletitem Every "VBT" precedes its parent.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\noindent The ``locking level'' of a thread, or "LL" for
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{ScreenTypes} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   is determined in some manner that depends on the {\it screentype}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Splits and leaves} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Timestamps, modifiers, mouse buttons, and cursor positions} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   occurred, which is called the {\it timestamp} of the event.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   ticks. \index{time interval between events}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   A few keys on the keyboard are defined to be {\it modifiers}, like "Shift",
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The mouse method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The mouse focus rule} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   is more complicated.  \index{mouse~focus}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The position method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Tracking the cursor by setting cages} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   set a new cage.  \index{cursor~tracking}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{cages~(for~cursor~tracking)} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:\medskip\bulletitem "cp.pt" is in "cg.rect",
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:\medskip\bulletitem "cp.gone" is in "cg.inOut", and 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:\medskip\bulletitem either "cg.screen = AllScreens" or "cg.screen = cp.screen".
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:\medskip\noindent Trestle imposes the restriction on cages that if "cg.screen
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The key method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   type "KeyRec".  \index{key method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   et al., \cite{XSpec} Appendix E).
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The redisplay method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{redisplay~method} \index{marking~for~redisplay}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The reshape method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{reshape method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The rescreen method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   takes an argument of type "RescreenRec". \index{rescreen method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The repaint method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   "Region.T".  \index{repaint method}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{bad region} \index{exposed region}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{About painting in general} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:    \medskip\bulletitem a {\it destination}, which is a set of pixels
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:    \medskip\bulletitem a {\it source}, which is conceptually an
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:    \medskip\bulletitem an {\it operation}, which is a function that takes
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\noindent The effect of the painting procedure is to apply
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Scrolling (copying one part of the screen to another)} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{bad region} \index{exposed region}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:    \medskip\bulletitem The worker thread removes from its work queue
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:    \medskip\bulletitem The "repaint" method is activated with exposed
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:    \medskip\bulletitem The worker thread copies the garbage from "B"
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip Eventually the worker thread will get around to repainting
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Painting textures} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* A {\it texture} is an infinite periodic pixmap.  A texture "txt"
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Filling and stroking paths} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \cite{PostScript}: *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   path is regarded as translated north by $\epsilon$ and west by
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   $\epsilon^2$, where $\epsilon$ is infinitesimal.  *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   implementation-dependent {\it miter limit}. The miter limit will be
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Painting pixmaps} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Painting text} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\bulletitem the background operation is transparent; that is,
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\bulletitem the font is self-clearing (see below) and 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\noindent If neither condition is true, the effect of "PaintText" is
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:       \medskip\bulletitem  "printWidth(ch, f)" is the printing width of "ch"; 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:       \medskip\bulletitem "bits(ch, f)" is the bitmap for "ch" in "f", which
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:       \medskip\bulletitem "height(ch, f)" is the height of "ch" above
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:       \medskip\bulletitem "ascent(f)" and "descent(f)" are the logical extent
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:\medskip\noindent A font is {\it self-clearing} if 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:\medskip\bulletitem
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:\medskip\bulletitem
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:\medskip\noindent The call to "PaintText" is equivalent to the following loop:
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Synchronization of painting requests} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   two commands in a {\it group}, using the following two procedures:
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{paint batch} \index{batch (of painting commands)} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Screen capture} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{reading the screen} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Controlling the cursor shape} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{cursor shape, how to change}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Selections} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{input or keyboard focus} \index{keyboard focus}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{target selection}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \index{source selection}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:    \medskip\bulletitem The target selection.  If text, this should
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:    \medskip\bulletitem The source selection.  If text, this should
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip An operation like ``copy'' should replace the
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\bulletitem "EventNotCurrent":  Raised by attempts to access a
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\bulletitem "TimeOut":  If you attempt to read or write a selection,
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\bulletitem "Uninstalled":  Raised by event-time operations on
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\bulletitem "Unreadable", "Unwritable":  Raised by attempts to read
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\bulletitem "UnownedSelection":  Raised by attempts to read, write,
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   \medskip\bulletitem "WrongType":  Raised by attempts to read or write a
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Acquiring and releasing selection ownership} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The miscellaneous method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   argument of type "MiscRec".  \index{misc method} 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Sending miscellaneous codes} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Circumventing event-time} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Communicating selection values} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{The read and write methods} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   <= mu" (see below). \index{read method}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   The locking level is the same as for the read method.  \index{write
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Controlling the shape of a VBT} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Putting properties on a VBT} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   of non-nil traced references.  \index{property set, of window} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:(* \subsection{Discarding a VBT} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBT.i3:   garbage-collected:  \index{discard method} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBTClass.i3:   To speed up this common case, every "VBT" has a {\it short-circuit} bit.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBTClass.i3:(* \subsubsection{Specifications of the split methods} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBTClass.i3:(* \subsubsection{Specifications of the up methods} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBTClass.i3:(* \subsubsection{Getting and setting the state of a VBT} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBTClass.i3:(* \subsubsection{Procedures for activating the down methods of a VBT} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBTClass.i3:(* \subsubsection{Procedures for activating the up methods of a VBT} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBTPatch.i3:(* \subsection{Texturing irregular patches} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBTRep.i3:   The "rpseqno" field is the {\it repainting sequence number}.  It is
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/vbt/VBTRep.i3:   collectively called the screentype's {\it palette}.  They are used
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/AnchorBtnVBT.i3:   \medskip\bulletitem "b.menu", the menu to be activated, 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/AnchorBtnVBT.i3:   \medskip\bulletitem "b.hfudge" and "b.vfudge", dimensions in millimeters
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/AnchorBtnVBT.i3:   \medskip\bulletitem "b.n", a count of the number of "ZSplit" ancestors
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/AnchorBtnVBT.i3:   \medskip\noindent A down click on an anchor button "b" {\it activates} 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/AnchorBtnVBT.i3:   \medskip\bulletitem  calling the method "b.pre()", and then   
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/AnchorBtnVBT.i3:   \medskip\bulletitem inserting the window "b.menu" so that its
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/AnchorBtnVBT.i3:   \medskip\noindent The anchor button will be deactivated when it gets
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ComposeKey.i3:   "e" and "`", but "o" and "c" do {\em not} combine to form the
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/DblBufferVBT.i3:   \it{saved buffer} and provides operations for copying the off-screen buffer
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/DblBufferVBT.i3:   \it{batches}, in Trestle terminology) from "v" up to the relevant
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:   row or column of child windows, depending on the {\it axis} of
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:   An "HVSplit" can be {\it adjustable} or {\it unadjustable}, a 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:   The {\it size} of a child is the extent of its domain in the 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:   axis of split, the {\it cross-size} is its extent in the other axis.  
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:   size of the parent, then the split is said to be {\it overfull}.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:   adjustable split, each child's {\it stretchability} is its maximum
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:   desirable size minus its current size, and its {\it shrinkability}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:   size of the parent, the split is said to be {\it underfull}.  There
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:   A split is {\it infeasible} if it is overfull or underfull, and {\it
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:(* \subsubsection{Inserting children} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:(* \subsubsection{Adjusting the division of space} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/HVSplit.i3:(* The {\it division point after a child} is the sum of the sizes of
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/MenuBtnVBT.i3:   and the button is {\it readied}.  If it receives a mouse transition
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/PackSplit.i3:   multiple rows or columns, depending on the {\it axis} of the split.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/PackSplit.i3:   The {\it size} of a window is the extent of its domain in the axis of
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/PackSplit.i3:   the "PackSplit"; its {\it cross-size} is its extent in the other axis.
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/TSplit.i3:   one child at a time.  The child being displayed is called the {\it
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ZSplit.i3:   The bottom child is called the {\it background}.  An initial
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ZSplit.i3:   {\it offset}, which is the vector between the northwest corners 
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ZSplit.i3:   each one. \index{init method, rules for calling}
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ZSplit.i3:(* \subsubsection{Inserting children} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ZSplit.i3:(* \subsubsection{Moving, lifting, and lowering children} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ZSplit.i3:(* \subsubsection{Mapping and unmapping children} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ZSplit.i3:(* You can {\it unmap} a child of a "ZSplit", which reshapes the child
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ZSplit.i3:   later {\it map} the child, the recorded shape and offset are
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ZSplit.i3:(* \subsubsection{Getting domains} *)
/home/ftp/pub/m3/pkg/SRC-m3/ui/src/split/ZSplit.i3:(* \subsubsection{Moving children when the parent is reshaped} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/Color.i3:   0.0--1.0 is the {\em unit RGB cube}.  The colors along the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/Color.i3:   pigment and lightens it to a {\it tint\/} of that hue by
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/Color.i3:   adding white, or darkens it to a {\it shade\/} of that hue by
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/Color.i3:   adding black, or in general obtains a {\it tone\/} of that hue
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    \begin{tt}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    \begin{tabular}{llll}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    AliceBlue         & ForestGreen    & MintCream         & SandyBrown \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    AntiqueWhite \dag & Gainsboro      & MistyRose \dag    & SeaGreen \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Aquamarine \dag   & GhostWhite     & Moccasin          & Seashell \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Azure \dag        & Gold \dag      & NavajoWhite \dag  & Sienna \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Beige             & Goldenrod \dag & Navy              & SkyBlue \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Bisque            & GoldenrodYellow& NavyBlue          & SlateBlue \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Black             & Gray \ddag     & OldLace           & SlateGray \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    BlanchedAlmond    & Green \dag     & OliveDrab \dag    & SlateGrey \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Blue \dag         & GreenYellow    & OliveGreen \dag   & Snow \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    BlueViolet        & Grey \ddag     & Orange \dag       & SpringGreen\dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Brown \dag        & Honeydew \dag  & OrangeRed \dag    & SteelBlue \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Burlywood \dag    & HotPink \dag   & Orchid \dag       & Tan \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    CadetBlue \dag    & IndianRed \dag & PapayaWhip        & Thistle \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Chartreuse \dag   & Ivory \dag     & PeachPuff \dag    & Tomato \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Chocolate \dag    & Khaki \dag     & Peru              & Turquoise \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Coral \dag        & Lavender       & Pink \dag         & Violet \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    CornflowerBlue    & LavenderBlush \dag & Plum \dag     & VioletRed \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Cornsilk \dag     & LawnGreen          & Powderblue    & Wheat \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Cyan \dag         & LemonChiffon \dag  & Purple \dag   & White \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    DeepPink \dag     & LimeGreen          & Red \dag      & WhiteSmoke \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    DeepSkyBlue \dag  & Linen              & RosyBrown\dag & Yellow \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    DodgerBlue \dag   & Magenta \dag       & Royalblue\dag & YellowGreen \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    Firebrick \dag    & Maroon \dag        & SaddleBrown \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    FloralWhite       & MidnightBlue       & Salmon \dag \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    \end{tt}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    \end{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    The dagger (\dag) indicates that the implementation recognizes
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:   The double dagger (\ddag) indicates that the 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:   suffixes "0" through "100". That is, "Gray0", "Gray1", \dots,
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:   "Gray100", as well as "Grey0", "Grey1", \dots, "Grey100".
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:\begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:\begin{tabular}{l|l}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \it Term & \it Meaning\\ \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \strut\begin{tabular}[c]{l} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  "Light" \\ 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \end{tabular} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    &  1/3 of the way from $C$ to white \\ \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \strut\begin{tabular}[c]{l} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  "Dark" \\ 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \end{tabular} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    &  1/3 of the way from $C$ to black \\ \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \strut\begin{tabular}[c]{l} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  "Drab" \\ 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  "Weak" \\ 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \end{tabular} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    & $\vcenter{\hbox{ 1/3 of the way from $C$ to the gray\strut}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:               \hbox{with the same brightness as $C$\strut}}$ \\ \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \strut\begin{tabular}[c]{l} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  "Vivid" \\ 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  "Strong" \\ 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \end{tabular} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    & $\vcenter{\hbox{1/3 of the way from $C$ to the purest color\strut}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:               \hbox{with the same hue as $C$\strut}}$ \\ \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \strut\begin{tabular}[c]{l} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \end{tabular}  
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:     &  1/3 of the way from $C$ to red \\ \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \strut\begin{tabular}[c]{l} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \end{tabular}  
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    &  1/3 of the way from $C$ to green \\ \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \strut\begin{tabular}[c]{l} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \end{tabular}  
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    &  1/3 of the way from $C$ to blue \\ \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \strut\begin{tabular}[c]{l} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:  \end{tabular}  
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:    &  1/3 of the way from $C$ to yellow \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:\end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:\end{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:   \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:   \begin{tabular}{l|l|l}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:      \it Term             & \it Degree        & \it\% (approx.) \\ \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:      "VeryVerySlightly"   & 1/16 of the way   &  6\% \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:      "VerySlightly"       & 1/8 of the way    & 13\% \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:      "Slightly"           & 1/4 of the way    & 25\% \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:      "Somewhat"           & 3/8 of the way    & 38\% \\ 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:      "Rather"             & 1/2 of the way    & 50\% \\ 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:      "Quite"              & 5/8 of the way    & 63\% \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:      "Very"               & 3/4 of the way    & 75\% \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:      "VeryVery"           & 7/8 of the way    & 88\% \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:      "VeryVeryVery"       & 15/16 of the way  & 94\% \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:   \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:   \end{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/color/ColorName.i3:   \noindent The modifier "Medium" is also recognized as a
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/AnchorHelpSplit.i3:   The first child is the {\em anchor} that is displayed (such
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/AnchorHelpSplit.i3:   as a text string or an icon).  The second child is the {\em
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/AnchorHelpVBT.i3:   \medskip\bulletitem "v.help", the help window to be activated, 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/AnchorHelpVBT.i3:   \medskip\bulletitem "v.hfudge" and "v.vfudge", dimensions in millimeters
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/AnchorHelpVBT.i3:   \medskip\bulletitem "v.n", a count of the number of "ZSplit" ancestors
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/AnchorSplit.i3:   The first child is the {\em anchor} that is displayed (such
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/AnchorSplit.i3:   as a text string or an icon).  The second child is the {\em
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ChoiceVBT.i3:   "ChoiceVBT"s to implement {\em radio buttons}. Abstractly, a
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ChoiceVBT.i3:| group(v)       `a set of "ChoiceVBT"s (the {\em radio group})`
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FeedbackVBT.i3:   addition, a feedback maintains a {\it state} flag to
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   with a "FileBrowserVBT".  A {\em helper}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   \index{FBHelper}\label{FBHelper} is a type-in field that displays
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   pathnames.  A {\em directory-menu}\index{FBDirMenu}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   \label{FBDirMenu} is a menu containing the names of each level in
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   \item The user may {\it select} items, either by single-clicking on
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   \item The user may {\it activate} an item, either by
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   Activation of a {\it file} is reported to the client by invoking
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   Activation of a {\it directory} is reported by invoking the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:(* \subsubsection{The Helper} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:   The FileBrowser's helper (see page \pageref{FBHelper}) is a
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:(* \subsubsection{The Directory-Menu} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:(* \subsubsection{FileBrowser options} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:(* \subsubsection{Setting the displayed directory} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FileBrowserVBT.i3:(* \subsubsection{Retrieving selections from the browser} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FlexVBT.i3:(* The "FlexVBT.T" is a filter whose shape is based on a {\em natural}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FlexVBT.i3:   size with some {\em stretch} and {\em shrink}.  If a natural amount
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/FlexVBT.i3:   Figure~\ref{flexvbt} for examples.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:(* An "Image.T" is a screen-independent specification of an {\it
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \item If "pm" is a "RawBitmap" pixmap, then it is guaranteed that
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \item
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \item
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   is more than 50\% of the maximum brightness, the screen's
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:(* \subsubsection{Retrieving and storing ``raw'' pixmaps}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   There are three types of ``pnm'' files: \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \item ``pbm'' -- portable bitmap file
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \item ``pgm'' -- portable graymap file
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \item ``ppm'' -- portable pixmap file
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \end{itemize} Each of these format has two variants: ``raw''
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:(* \subsubsection{Creating ``raw'' pixmaps from a VBT}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:(* \subsubsection{Building an image from ``raw'' pixmaps}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   vertically, then "pm" would appear $1\frac{1}{2}$ inches wide and
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   $1\frac{1}{3}$ inches high.  Each pixel in "pm" would appear as a
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:(* Specifically, "i" is chosen such to minimize the {\em scale factor}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \item A small "tolerance" ensures a small error, which can
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   pixmaps that are 150 and 250 dpi.  When "tolerance" \verb|<| 1/6,
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \item A small "maxScale" makes it less likely that a very
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   pixmaps that are 50 and 200 dpi.  If "tolerance" \verb|>| 1/3, then
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   However, when "tolerance" \verb|<| 1/3, the 50 dpi pixmap is chosen
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   unless "maxScale" \verb|<=| 4.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Image.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   table) of items.  Each item is in a {\em cell}.  All cells are
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   maintains the {\em selection}, a distinguished subset of the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   \item "TextPainter", which treats cells' values as "TEXT" and
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   \item "UniSelector", which maintains at most one selected
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   \item "MultiSelector", which uses mouse clicks for selection,
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   \subsubsection{Locking levels}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   information; \linebreak "TextPainter.setFont(v,font)" has "LL.sup < v".
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   \subsubsection{The type {ListVBT.T}}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   "ListVBT.T", and a value "n" is said to be {\it in range} if
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   \medskip {\display {\tt 0 $\leq$ n < v.count() }}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   \medskip "v.painter" is the list's painter; the client may read but not
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:(* \subsubsection{The Painter} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:(* \subsubsection{TextPainter} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:(* \subsubsection{The Selector} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:(* \subsubsection{UniSelector and MultiSelector} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ListVBT.i3:   firstDown, it remembers this cell as the {\em anchor}; if this is
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/MarginFeedbackVBT.i3:   "MarginFeedbackVBT"s. See Figure~\ref{fig:marginfeedbacks}. *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/MultiClass.i3:(* \subsubsection{The MultiSplit methods} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/MultiClass.i3:(* \subsubsection{The MultiFilter methods} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/MultiClass.i3:(* \subsubsection{Procedures for creating multis} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/MultiSplit.i3:(* \sloppy Some multi-splits can accommodate only a bounded number of
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ReactivityVBT.i3:   passive, dormant, and invisible.  The {\em active\/} state does
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ReactivityVBT.i3:   nothing; mouse and keyboard events are relayed to child. The {\em
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ReactivityVBT.i3:   passive\/} state doesn't allow mouse or keyboard events to go to
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ReactivityVBT.i3:   The {\em dormant\/} state doesn't send mouse or keyboard events to
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ReactivityVBT.i3:   the child; it also grays out the child.  The {\em vanish\/} state
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:(* A "ScrollerVBT" is a scrollbar with an orientation along an {\em
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   phrases like {\it top and bottom edges} by {\it left and right
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   Like a "NumericVBT", a "ScrollerVBT" provides a {\em
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   bounded-value\/} abstraction.  That is, a "ScrollerVBT" has a {\it
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   value\/} associated with it, and that value is guaranteed to stay
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   Visually, a scrollbar contains a {\em stripe} that spans some
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   change when continuous scrolling is given by "step", the {\em
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   \begin{quote}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   \end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   \begin{itemize} \item To {\em scroll}\index{scrolling} means
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   \item You need to release the button relatively quickly, or else
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   you'll start {\em continuous scrolling}.  You stop continuous
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   scrolling by releasing the button, by chord-cancelling\index{chord}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   \item When you move the mouse, you are then using {\em proportional
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   \item The left and right buttons are inverses: the left button
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   \item You {\em thumb}\index{thumb} with a middle-click.  The top of
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   \item Middle-drag causes {\em continuous thumbing}.  As you drag to
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBT.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ScrollerVBTClass.i3:   for historical reasons\dots).  For continuous scrolling, "cd"
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:   Figure~\ref{fig:shadows}).
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:             \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:             \begin{tabular}{l|l|l}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:             {\em Style}   & {\em North/West} & {\em South/East}\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:             \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:                 Flat      &   Background  &  Background\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:                 Raised    &   Light       &  Dark\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:                 Lowered   &   Dark        &  Light\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:                 Ridged    &   Light/Dark  &  Dark/Light\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:             \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:             \end{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:   color whose saturation level is about 50\%, and the light and
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:   but with saturation levels of 25\% and 75\% respectively.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:   50\% of the size they'd be on non-monochrome displays. Also, those
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:   (e.g., the {\tt ShadowedFeedbackVBT} 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:   interface in Section~\ref{ShadowedFeedbackVBTSection}). 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/Shadow.i3:   will draw borders and lines with 50\% of the absoluate value of
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:             \begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:             \begin{tabular}{l|l|l}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:                               & {\em top (vertical)}    & {\em bottom (vertical)}\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:                               & {\em left (horizontal)} & {\em right (horizontal)} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:             {\em Style}       &                         & \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:             \hline
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:                 Flat      &   Background  &  Background\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:                 Raised    &   Light       &  Dark\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:                 Lowered   &   Dark        &  Light\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:                 Ridged    &   Light       &  Dark\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:             \end{tabular}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ShadowedBarVBT.i3:             \end{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/SourceVBT.i3:   The object being dragged is the {\em source} and an object into
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/SourceVBT.i3:   which the source may be dropped is the {\em target}.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/SourceVBT.i3:   marked as a {\em target}.  If so, then the "SourceVBT"'s "hit"
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/SourceVBT.i3:(* \subsubsection{Sources} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/SourceVBT.i3:(* \subsubsection{Targets} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/SplitterVBT.i3:   {\em axis} of the split, with adjusting bars between all
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:   larger than the viewport's {\em interior} (that is, the screen
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:(* \noindent The styles are as follows:
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:   \item "HorAndVer" puts a horizontal and vertical scrollbar on every
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:   \item "HorOnly" places a scrollbar at the bottom.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:   \item "VerOnly" places a scrollbar at the left side.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:   \item "NoScroll" specifies that views will not have scrollbars.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:   \item "AlaViewport" specifies that there is a scrollbar in the same axis
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:   \item "Auto" specifies that scrollbars appear only when the preferred
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:(* \subsubsection{Panning the contents} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ViewportVBT.i3:(* \subsubsection{Multiple views} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ZChassisVBT.i3:(* A "ZChassisVBT" multi-filter provides a {\em chassis} for a
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ZChassisVBT.i3:   a banner containing (from left to right) a {\em close button}, {\em
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ZChassisVBT.i3:   draggable title}, and a {\em grow button}. (See
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ZChassisVBT.i3:   Figure~\ref{fig:zchassis}.)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ZChassisVBT.i3:   page~\pageref{ZChildVBTSection} for details of the "h", "v", "loc",
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ZChassisVBT.i3:|              (ZMove `{\it title}`)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ZChassisVBT.i3:|        (Frame `{\it ch}`)))))
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/ZChassisVBT.i3:   See Figure~\ref{fig:zchassis}.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:   larger than the viewport's {\em interior} (that is, the screen
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:(* \noindent The styles are as follows:
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:   \item "HorAndVer" puts a horizontal and vertical scrollbar
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:   \item "HorOnly" places a scrollbar at the bottom.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:   \item "VerOnly" places a scrollbar at the left side.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:   \item "NoScroll" specifies that views will not have scrollbars.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:   \item "AlaViewport" specifies that there is a scrollbar in the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:   \item "Auto" specifies that scrollbars appear only when the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:   \end{itemize} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:(* \subsubsection{Panning the contents} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/lego/oldViewportVBT.i3:(* \subsubsection{Multiple views} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3:   The model supports a single {\it region}, which is delimited by the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3:   {\it mark} and the {\it point}.  Control-space and control-@ set
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3:   character composition. See Section~\ref{MetaOptionKeys} for an
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3:\begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3:\begin{tabbing}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3:option-LongKeyName \= This is just a tab-setting line. \kill
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-space \> set the mark \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-a \> move to the beginning of the line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-b \> move to the previous character \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-b \> move to the previous word \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-d \> delete the next character \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-d \> delete the next word \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-e \> move to the end of the line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-f \> move to the next character \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-f \> move to the next word \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-h \> delete the previous character, and move left \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-h \> delete to the start of the current word \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-i \> invoke the "tabAction" callback \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-j \> insert a newline \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-k \> delete to the end of the line, and make that \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3:           \> the source selection \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-m \> invoke the "returnAction" callback \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-n \> move down one line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-o \> insert a newline without moving the cursor \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-p \> move up one line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-q \> insert the next character (``quoted insert'')\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-r \> search backward for the current source selection \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-s \> search forward for the current source selection \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-t \> swap the current and previous characters \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-v \> scroll up one screen \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-v \> scroll down one screen \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-w \> {\bf Cut} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-w \> {\bf Copy} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-y \> {\bf Paste} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-z \> scroll up one line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-z \> scroll down one line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: control-\_ \> {\bf Undo} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-\_ \> {\bf Redo} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-< \> move to the beginning of the buffer \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-> \> move to the end of the buffer \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-leftArrow \> move to the previous word (like meta-b) \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3: meta-rightArrow \> move to the next word (like meta-f)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3:\end{tabbing}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/EmacsModel.i3:\end{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/ISOChar.i3:  All           = SET OF T {'\000'.. '\377'};
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/ISOChar.i3:  Controls      = SET OF T {'\000'.. '\037', '\177'.. '\217', '\231', '\234'};
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/ISOChar.i3:  Spaces        = SET OF T {' ', '\t', '\n', '\r', '\f', '\240'};
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/ISOChar.i3:  Uppers        = SET OF T {'A'.. 'Z', '\300'.. '\326', '\330'.. '\336'};
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/ISOChar.i3:  Lowers        = SET OF T {'a'.. 'z', '\337'.. '\366', '\367'.. '\377'};
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:(* {\tt TextPort} was originally designed after an editor called Ivy
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:   \cite{IvyRefman} that was developed at SRC.  Ivy was written in
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:   Section~\ref{MetaOptionKeys} for an explanation of ``option'' keys
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:\begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:\begin{tabbing}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:option-LongKeyName \= This is just a tab-setting line. \kill
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: Return              \> invoke the {\tt returnAction} method \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: shift-Return        \> call {\tt Newline} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: option-Return       \> insert a newline after the cursor \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: Backspace           \> delete primary selection or the previous character \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: option-Backspace    \> swap the two previous characters \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-A           \> delete previous character \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-B           \> delete whole line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-C           \> delete to start of line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: option-C            \> {\bf Copy} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-D           \> delete to the start of the current word \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-E           \> {\bf Move}: replace target with source, and clear source \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-F           \> delete to the end of the current word \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-G           \> delete whole word \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-H           \> swap the selection {\it boundaries} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-I           \> move to the next word \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-J           \> move to previous character \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-K           \> move to next character \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-L           \> move to first non-blank and select line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-M           \> find previous occurrence \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: option-M            \> find previous occurrence of primary \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-N           \> find next occurrence of primary \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: option-N            \> find first occurrence of primary \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-O           \> move up 1 row in the current column \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-P           \> move down 1 row in the current column \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-Q           \> {\bf Clear} (delete the Primary selection) \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-R           \> {\bf Swap}: exchange the selected {\it text} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-S           \> delete the next character \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-U           \> move to the previous word \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-V           \> delete to end of line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: option-V            \> {\bf Paste} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-W           \> {\bf Paste} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: option-X            \> {\bf Cut} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-Y           \> move to opposite end of selection \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-Z           \> {\bf Undo} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-shift-Z     \> {\bf Redo} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-,           \> find next occurrence \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-;           \> move to end of line and select line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3: control-Space       \> normalize
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:\end{tabbing}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:\end{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:\subsubsection{The Ivy selection model}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:\begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:\begin{tabbing}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:quadruple-click \= AllThree \= This is just a tab-setting line \kill
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:          click \> Left   \> to select a point between characters\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:   double-click \> Left   \> to select a single line\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:   triple-click \> Left   \> to select the entire buffer\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:          drag  \> Left   \> to change the selected point \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:          click \> Middle \> to select a single word\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:   double-click \> Middle \> to select a single paragraph\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:   triple-click \> Middle \> to select the entire buffer\\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:           drag \> Middle \> to change the selected word or paragraph \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:          click \> Right  \> to extend the current selection \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:   double-click \> Right  \> to reduce the selection-unit \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:           drag \> Right  \> to extend the current selection
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:\end{tabbing}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:\end{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:and the new position of the mouse. If you do {\em not} move the mouse,
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/IvyModel.i3:\subsubsection{Replace-mode selection}\label{ReplaceMode}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyFilter.i3:   \copyright, to the "next" filter. If there is no entry in the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyFilter.i3:   assumes that the user is {\em not} composing an 8-bit character,
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyFilter.i3:   example, produces an ``c'' with a cedilla, \c{c}. If the sequence
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyFilter.i3:   second "KeyRec", it makes {\em two} calls to "SELF.next.apply".
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyFilter.i3:   copyright symbol, \copyright; so can "C" and "O", "c" and "O", or
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyFilter.i3:   lower-case "e" with a grave accent, \`{e}, but "E" and "`" produce
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyFilter.i3:   an upper-case "E" with a grave accent, \`{E}.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyFilter.i3:   "e" and "`", but "o" and "c" do {\em not} combine to form the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyTrans.i3:  NullKey = '\000';
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyTrans.i3:   \medskip\bulletitem If "32 <= key <= 255", then return
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyTrans.i3:   \medskip\bulletitem If "key" is "Key.Backspace", "Key.Tab",
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/KeyTrans.i3:   \medskip\bulletitem Otherwise return "NullKey" *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:     {\it runs}, {\it lines}, and {\it paragraphs}.  Each
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:     structure defines a {\it unit}, in such a way that the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:     A {\it run} is defined by a set of characters, typically
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:     A {\it line} is defined as a set of characters delimited by
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:     A {\it paragraph} is a maximal sequence of non-blank lines.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:     Given an index "n" into the text, we define the {\it extent}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:  (* {\it Note for future work:  There is nothing in the nature
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:  BlankRun = ISOChar.Spaces; (* {' ', '\n', '\t', '\r', '\f'} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:(* \subsubsection{Runs} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:(* \subsubsection{Lines} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:(* A {\it line} is a sequence of characters delimited by newlines
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:(* \subsubsection{Blank lines} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:(* \subsubsection{Paragraphs} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MTextUnit.i3:(* A {\it paragraph} is a maximal sequence of non-blank lines, in
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   The conventions for the Mac model are taken from Apple's {\it Human
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   Interface Guidelines} \cite[pages 106-114]{AppleUI}.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   The first unmodified downclick establishes the {\it anchor point}.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   If the user then drags the mouse, the upclick establishes the {\it
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   releases the mouse without dragging, that establishes the {\it
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   \begin{quote}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   \end{quote}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   environment variable "MacCommandModifier"\index{MacCommandModifier}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   "MacOptionModifier"\index{MacOptionModifier} to name the X-modifier
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:\begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:\begin{tabbing}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:LongCommandKeyName \= This is just a tab-setting line. \kill
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:command-c \> {\bf Copy} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:command-v \> {\bf Paste} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:command-x \> {\bf Cut} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:command-z \> {\bf Undo} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:command-shift-z \> {\bf Redo} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:\end{tabbing}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:\end{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   \copyright, but option-shift-7, which produces a double dagger,
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   \ddag, on the Macintosh, produces no key in the Mac model, since
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   produce ``a'' with an acute accent, \'{a}. The complete table appears
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/MacModel.i3:   on page~\pageref{MacExtendedCharacters}. *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \begin{description}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item[Appearance] The client can choose the font, colors, margins,
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item[Access to the text] There are procedures to read and write
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item[Keybindings and Text-Selections] A textport is initialized
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   with a {\em model}, an object (defined in the "TextPortClass"
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item[Feedback] A textport has callback-methods that are invoked
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \end{description}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   descriptions in this interface, the words {\it replace}, {\it insert},
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   {\it delete}, and so on should be understood as having the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   valid event-time); i.e., this method is called {\em before} the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   is {\em not} valid), so it reasonable to take down whatever
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   environment-variable named "TEXTPORTDEBUG"\index{TEXTPORTDEBUG} is
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:(* \subsubsection{Access to the text}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   Section~\ref{ReplaceMode}, page~\pageref{ReplaceMode}), replace it
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:(* \subsubsection {Models}\index{Model} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   environment variable named "TEXTPORTMODEL";\index{TEXTPORTMODEL} if that
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   Appendices \ref{EmacsModel}--\ref{XtermModel} for details on
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:(* \subsubsection {Keybindings}\label{TextPortKeybindings}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   a {\em chain} of keyfilters (see the "KeyFilter" interface), each
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \begin{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item{If the key is Return, then if the "shift" modifier is on, we
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item{If the key is Tab, we invoke "v.tabAction(cd)".  The
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item{If the key is an ``arrow'' key, we call the model's
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item{If the "control" modifier is on, we call the model's
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item{If the "option" modifier is on, we call the model's
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item{If the key is Backspace or Delete, we delete the previous
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item{If the key is an ISO Latin-1 graphic character, we insert it into
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item{Otherwise, we ignore it.}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \end{itemize}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:(* \subsubsection{Selections}\label{TextPortSelections}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   range of text, known as a {\em local selection}.  The "TextPort"
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   interface defines two local selections, called {\em primary} and
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   {\em secondary}. The mechanism for doing this depends entirely on
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   Primary selections in non-readonly textports may be in {\em
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   replace mode}, also called {\em pending-delete mode}. This means
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   Independent of the local selections are the two {\em global
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   one can own Target. The {\em contents} of a global selection are
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   {\bf Copy}\index{Copy}, which is defined as follows: the textport
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   Some models establish an {\em alias}\index{alias} between a local
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   {\em identical with} the contents of the local selection.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   implement {\bf Copy} by making a separate copy of the local
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \begin{enumerate}\index{TextPortHighlighting}\label{TextPortHighlighting}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item A replace-mode Primary selection is highlighted with black
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item If a Source selection is visible (i.e., if it is aliased with
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \item A Primary selection that is neither a replace-mode selection
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   \end{enumerate}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   "VBT.Write" will {\em replace} the selected text; otherwise, they
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   cause the new text to be {\em inserted} at whichever end of the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:(* \subsubsection{Feedback}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   "v.modified()" {\it after} the change has already happened to "v".
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:   "TextEditVBT" interface in Section~\ref{TextEditVBTSection}. *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPort.i3:(* \subsubsection{Direct access to the text} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:(* \subsubsection{Models}\index{Model}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   {\em Keybindings}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   as described on page~\pageref{TextPortKeybindings}. A keyfilter is
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   {\em Text-selections}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   As explained on page~\pageref{TextPortSelections}, the model
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   {\em Selection-related editing operations}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   \index{Cut}\index{Copy}\index{Paste}\index{Clear}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   \index{Select All}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   \begin{description}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   \item[Copy] If the Primary selection is not empty, then acquire
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   \item[Paste] If the Primary selection is not empty and is in
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   \item[Clear] Delete the contents of the Primary selection.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   \item[Cut] This is defined as {\bf Copy} followed by {\bf Clear}.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   \item[Select All] Extend the Primary selection to include the
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   \end{description}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:(* \subsubsection{Selections} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   the "TextPort" interface (see page~\pageref{TextPortHighlighting}). *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:(* \subsubsection {Cursor-motion} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:   actually covers the {\it current} word, but on successive calls, it
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:(* \subsubsection {Deletion commands}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:(* \subsubsection {Other modification commands} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:(* \subsubsection {Searching} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:(* \subsubsection {Scrolling the display} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:(* \subsubsection {Managing the ``Undo'' stack} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:(* \subsubsection {Compose-character filtering} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TextPortClass.i3:(* \subsubsection {Miscellany} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TypescriptVBT.i3:   become part of the {\em history} of the typescript, and is not
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/TypescriptVBT.i3:   Section~\ref{ReplaceMode}, page~\pageref{ReplaceMode}).  Any
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3:\begin{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3:\begin{tabbing}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3:option-LongKeyName \= This is just a tab-setting line. \kill
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3: control-u    \> delete everything from the current position \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3:              \> to the beginning of the line \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3: control-z    \> {\bf Undo} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3: control-shift-z    \> {\bf Redo} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3: meta-x       \> {\bf Cut} \\ 
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3: meta-c       \> {\bf Copy} \\
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3: meta-v       \> {\bf Paste}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3:\end{tabbing}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/etext/XtermModel.i3:\end{center}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/mtext/MText.i3:(* \subsection {Creating MTexts} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/mtext/MText.i3:(* \subsection {Examining MTexts and Extracting Characters} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/mtext/MText.i3:(* \subsection {Modifying MTexts} *)
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/vbtkitutils/AutoRepeat.i3:   When an auto-repeat object "ar" is activated, it forks a {\it timer
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/vbtkitutils/AutoRepeat.i3:   thread\/} that calls "ar.repeat()" after "firstWait" milliseconds,
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/vbtkitutils/Rsrc.i3:(* {\em Resources\/} are arbitrary texts that are associated with
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/vbtkitutils/Rsrc.i3:   This interface supports retrieval of resources using a {\em search
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/vbtkitutils/XParam.i3:(* \subsubsection{An example}
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/vbtkitutils/XTrestle.i3:   {\it The X Window System\/} \cite{XWindowSystem}.
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/vtext/VText.i3:   it will be displayed from the font. If '\t' is not in printable, tabs
/home/ftp/pub/m3/pkg/SRC-m3/vbtkit/src/vtext/VText.i3:   will display as \011. If '\t' is in printable, then tabs will display as
/home/ftp/pub/m3/pkg/SRC-m3/visualobliq/src/Attributes.i3:(* t is a string of entries with \n as the separator and terminator *)
/home/ftp/pub/m3/pkg/SRC-m3/visualobliq/src/GenerateObliq.i3:  sessionConstructor := "CreateEachFormOnce(LOCAL);\n";
/home/ftp/pub/m3/pkg/SRC-m3/webcard/src/MailUtilities.i3:  DefaultWS = SET OF CHAR{' ', '\t', '\n', '\r', '\f', ASCII.VT, ASCII.NUL};
/home/ftp/pub/m3/pkg/SRC-m3/webcard/src/MailUtilities.i3:     is empty, it is omitted entirely.  The body is prefixed by "\n------". *)

Test case illustrating problems in RdWrPipe implementation.

The program is named "pipetest".  Run it with no arguments, and you'll get
a message telling you how to use it.

The program uses RdWrPipe.New() to create a Rd.T-Wr.T pair.  It then
forks off two threads.  The first thread copies data line-by-line from
the file "TestData" (a 100-line text file) to the RdWrPipe.  The second
thread copies data line-by-line from the RdWrPipe to the standard
output.  You can introduce delays in the reading and/or writing loops
through the command-line argument, as described in the usage message.
The delays don't seem to make any difference in the behavior of the
program, however, other than slowing it down a lot.  So the most
expeditious way to run the program is "pipetest 1".

What you will see is that all 100 lines of the test data get copied TO
the pipe, but only the last 12 lines get read FROM the pipe.  The first
88 lines mysteriously disappear.

The particulars change depending on what is in the test data.

John Polstra <jdp@polstra.com> January 3, 1996.

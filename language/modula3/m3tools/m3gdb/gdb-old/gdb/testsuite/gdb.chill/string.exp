# Copyright (C) 1995 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@prep.ai.mit.edu

if $tracelevel then {
	strace $tracelevel
}

if [skip_chill_tests] then { continue }

set testfile "string"
set srcfile ${srcdir}/$subdir/${testfile}.ch
set binfile ${objdir}/${subdir}/${testfile}.exe
if  { [compile "${srcfile} -g -o ${binfile} ${CHILL_RT0} ${CHILL_LIB}"] != "" } {
    perror "Couldn't compile ${srcfile}"
    return -1
}

proc do_tests {} {
    global prms_id bug_id subdir objdir srcdir binfile prompt

    set prms_id 0
    set bug_id 0

    # Start with a fresh gdb.

    gdb_exit
    gdb_start
    gdb_reinitialize_dir $srcdir/$subdir
    gdb_load $binfile

    send "set language chill\n" ; expect -re "$prompt $"

    # These tests based on Cygnus PR chill/5696.
    runto string.ch:22
    gdb_test "p s20" { = "Moser Wilfried"} "print simple vstring"
    gdb_test "p s20(1)" { = 'o'} "print vstring element"
    gdb_test "p s20(1:3)" { = "ose"} "print vstring slice (:)"
    gdb_test "p s20(2 up 3)" { = "ser"} "print vstring slice (up)"
    gdb_test "p s10" { = "1234567890"} "print simple string"
    gdb_test "p s10(1)" { = '2'} "print string element"
    gdb_test "p s10(1:3)" { = "234"} "print string slice (:)"
    gdb_test "p s10(2 up 3)" { = "345"} "print string slice (up)"

    gdb_test "p length(s10)" { = 10} "print string length"
    gdb_test "p length(s20)" { = 14} "print varying string length"
    gdb_test "p lower(s10)" { = 0} "print string lower"
    gdb_test "p upper(s10)" { = 9} "print string upper"
    gdb_test "p lower(s20)" { = 0} "print varying string lower"
    gdb_test "p upper(s20)" { = 19} "print varying string upper"

    # These tests are based on Cygnus PR chill/9078.
    gdb_test "print foo // bar" { = "Moser Wilfried"}
    gdb_test "print foo // bar1" { = "Moser abcde"}
    gdb_test "print foo1 // bar1" { = "12345abcde"}
}

do_tests

Tue Mar  1 19:43:31 1994  Stan Shebs  (shebs@cygnus.com)

	* a29k/a29k.h (TARGET_SOFT_FLOAT): Define.
	(TARGET_SWITCHES): Add -msoft-float.
	* a29k/a29k.md (all floating point): Disable floating point insns
	if doing soft floats.

Tue Mar  1 19:36:05 1994  Glenn Holloway  (glenn@soi.com)

        * defaults.h (ASM_OUTPUT_ADDR_DIFF_ELT): Use
	ASM_OUTPUT_INTERNAL_LABEL instead of ASM_GENERATE_INTERNAL_LABEL.

Tue Mar  1 19:26:47 1994  Jim Wilson  (wilson@cygnus.com)

	* sparc/sol2.h (JUMP_TABLES_IN_TEXT_SECTION): Delete.
	* sparc/sysv4.h (JUMP_TABLES_IN_TEXT_SECTION): Add.

	* c-typeck.c (build_binary_op): Pass TREE_TYPE (orig_op0) not
	orig_op0 to TREE_UNSIGNED.

Tue Mar  1 18:33:33 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* varasm.c (output_constant): Strip off some NOP_EXPRs
	before further processing.

Tue Mar  1 12:00:00 1994  Stan Cox  (coxs@dg-rtp.dg.com)

	* m88k.c (legitimize_address, print_operand): Make -fPIC work
	again.  Put addresses inside UNSPEC when loading them to
	ensure that cse won't mistakenly optimize them.
        
	* m88k.md: Two new patterns, to match (HIGH (UNSPEC (..))) and
	(LO_SUM (reg) (UNSPEC (..)))  as generated above.

	* m88k.h: (GO_IF_LEGITIMATE_ADDRESS) Reject invalid PIC addresses.

Tue Mar  1 11:00:14 1994  Doug Evans  (dje@cygnus.com)

	* configure: Fix some typos.
	* config.sub: Move comment to proper place.

Mon Feb 28 18:31:50 1994  Doug Evans  (dje@cygnus.com)

	* ns32k/encore.h (ASM_OUTPUT_ASCII): Fix typo.

Mon Feb 28 18:31:42 1994  Steve Chamberlain  (sac@cygnus.com)

	* expr.c (convert_move): Change name of truncsipsi to truncsipsi2
	to conform to existing convention, same with extendpsisi.

Mon Feb 28 08:11:55 1994  Jim Meyering  (meyering@comco.com)

	* cccp.c (check_precompiled): Delete unused var dollar_loc.
	(pcstring_used): Delete unused var TMP.
	(write_output): Delete unused var WRITTEN.
	(assertion_lookup): Delete unused var BP.
	(pedwarn_with_file_and_line): Delete unused var I.

Mon Feb 28 07:12:24 1994  Julian Bradfield  (jcb@dcs.ed.ac.uk)

	* m68k.md (call): Change HPUX_ASM case.
	* m68k/hp320.h (READONLY_DATA_SECTION, LEGITIMATE_PIC_OPERAND_P):
	Defined.
	(FUNCTION_PROLOGUE): Emit PIC prologue.

Mon Feb 28 06:21:18 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* reload1.c (eliminate_regs, case MULT): New case, to apply
	distributive law, when needed.

	* stor-layout.c (variable_size): If global_bindings_p < 0,
	don't even make the SAVE_EXPR.

	* reg-stack.c (reg_to_stack): Use GET_RTX_CLASS.
	Clear LABEL_REFs here.
	(find_blocks): Make algorithm identical to that inreg_to_stack.
	Use GET_RTX_CLASS.
	Don't clear LABEL_REFs here.
	Build a list of labels referenced by other than jumps.
	If computed jump, mark using that list and forced_labels.
	(uses_reg_or_mem): New function, copied from flow.c.

	* optabs.c (expand_binop): Use expand_divmod to do
	integer division for DIV of MODE_COMPLEX_INT operands.

Sun Feb 27 20:24:30 1994  Rob Austein  (sra@epilogue.com)

	* protoize.c (process_aux_info_file): Properly start over on
	file error.

Sun Feb 27 17:42:19 1994  Jim Wilson  (wilson@cygnus.com)

	* expmed.c (store_split_bit_field): If OP0 is a SUBREG, then
	compute WORD from the base register, instead of from the SUBREG.
	(extract_split_bit_field): Likewise.
	(extract_bit_field): Sign-extend multiword bitfield if necessary.

	* emit-rtl.c (subreg_realpart_p): New function.
	* integrate.c (copy_rtx_and_substitute): Use subreg_realpart_p
	instead of subreg_lowpart_p for CONCAT.

	* c-pragma.c (HANDLE_PRAGMA_WEAK): Depend on ASM_OUTPUT_DEF not
	SET_ASM_OP when defining it.
	* dwarfout.c (ASM_OUTPUT_DEF): Delete definition.
	* defaults.h (ASM_OUTPUT_DEF): Add it here.
	* varasm.c (handle_pragma_weak): Depend on ASM_OUTPUT_DEF not
	SET_ASM_OP when defining it.  Use ASM_OUTPUT_DEF to output value
	instead of SET_ASM_OP and explicit ASM_OUTPUT_LABELREF calls.

	* calls.c (expand_call): Set nregs to -1 for BLKmode parameter,
	then before move_block_to_reg call set it to the type size.

	* reorg.c (try_merge_delay_insns): Success when SLOT_NUMBER ==
	NUM_SLOTS not when NEXT_TO_MATCH == 0.

	* expmed.c (store_fixed_bit_field): Adjust BITPOS so that it
	fits inside MODE before adjusting OFFSET to get an aligned address.

	* expmed.c (store_fixed_bit_field): Move float mode to integral
	mode conversion from near end of function to top of function.

	* c-typeck.c (process_init_element): Check for constructor_type
	set before dereferencing it in the string cst code.

Sun Feb 27 17:28:06 1994  Philippe De Muyter  (phdm@info.ucl.ac.be)

	* m68k/mot3300.h (TARGET_DEFAULT): Default to 68020-40.
	(ASM_SPEC): New macro.
	(FUNCTION_VALUE, FUNCTION_VALUE_REGNO_P): Return pointer in a0.
	(*_LIBCALL): Use functions from sysV68's library.
	(INIT_CUMULATIVE_ARGS, FUNCTION_ARG*): Some libcalls pass
	parameters in registers.

Sun Feb 27 15:20:35 1994  Ron Guilmette  (rfg@netcom.com)

	* flags.h (id_clash_len): Now unsigned.
	(warn_larger_than, larger_than_size): New variables.
	* toplev.c: Likewise.
	(main): Support -Wlarger-than-NN.
	* c-common.c (declare_hidden_char_array): Build new type if
	warn_larger_than.
	* c-decl.c (finish_decl, finish_function): Issue warning for
	large objects, if requested.

Sun Feb 27 10:50:50 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* integrate.c (expand_inline_function): Allow extra arguments
	and force their evaluation for side-effects.

	* local-alloc.c (qty_compare{,_1}): Give multi-word regs higher
	priority, as stated in the comments.
	* global.c (allocno_compare): Likewise.

	* c-common.c (binary_op_error): Initialize OPNAME.
	* c-decl.c (store_parm_decls): Initialize some vars.
	* c-lex.c (readescape): Initialize FIRSTDIG.
	* c-typeck.c (type_lists_compatible_p): Initialize NEWVAL.
	(pop_init_level): Initialize SIZE.
	(output_pending_init_elements): Initialize NEXTPOS_TREE.
	* calls.c (expand_call): Initialize OLD_PENDING_ADJ.
	* cccp.c (main, args case 'D'): Rewrite to avoid uninitialized var.
	(main, args case 'A'): Delete unused var P1.
	(rescan): Initialize STR.
	(do_xifdef, do_endif): Initialize arg to skip_to_end_of_comment.
	* expr.c (emit_move_insn): Delete unused vars.
	(emit_move_insn_1): Don't set SUBMODE unless used.
	(expand_builtin, case BUILT_IN_SAVEREGS): Clean up uses of VALREG
	and SAVED_VALREG.
	* final.c (final_scan_insn): Always set OPS and use alloca.
	* gcc.c (execute): Initialize PROG.
	* optabs.c (emit_float_lib_cmp): Init LIBFUNC; abort if not reset.
	* stmt.c (expand_start_bindings): Properly set NOTE if bytecode.
	* tree.c (make_node, stabilize_reference_1): Abort if unknown class.
	* varasm.c (make_decl_rtl): Initialize NAME and abort if not reset.

Sat Feb 26 13:09:37 1994  Doug Evans  (dje@canuck.cygnus.com)
	
	* mips-tfile.c (fatal, error): Don't use prototypes
	ifndef HAVE_VPRINTF.

	* fixincludes: Fix including of machine/r3_cpu.h and machine/r4_cpu.h
	in machine/cpu.h on Ultrix 4.3.

Sat Feb 26 07:14:04 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.h (MASK_NO_SUM_IN_TOC, TARGET_NO_SUM_IN_TOC): New macros.
	(MASK_MINIMAL_TOC): Change bit value.
	(TARGET_SWITCHES): Add -mno-sum-in-toc; use -mfull-toc instead
	of -mnormal-toc, other minor changes.
	* rs6000.md (movsi): If -mno-sum-in-toc, do addition of
	symbol + const.

	* jump.c (rtx_renumbered_equal_p): Fix bug in comparing SUBREGs
	and REGs.
	Two commutative operations are equal if the operands are in the
	opposite order.

	* function.c (fixup_var_refs_insn): Delete CLOBBER of VAR.  If
	VAR is being assigned into by a libcall sequence, remove the
	libcall notes.

	* cse.c (count_reg_usage, case SET): If SRC has side-effects,
	count a usage of DEST in it.

	* expr.c (store_expr): In promoted TARGET case, if EXP is a
	volatile MEM and WANT_VALUE is nonzero, only reference the MEM once.
	Return TARGET if it is a hard register; clean up return code.

	* tree.c (substitute_in_type, case REAL_TYPE): Fix typo in
	previous change.

Fri Feb 25 06:42:20 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* tree.c (substitute_in_type, case REAL_TYPE): Allow
	TYPE_{MIN,MAX}_VALUE to be unassigned.

	* combine.c (if_then_else_cond): Fix typo in narrowing of a SUBREG.

	* alpha.md (neg[sd]f2): Use %R1 consistently.

	* reload.c (find_reloads): Don't restrict class of multiword
	operand to preferred class.
	(find_reloads_address_1): Rework to use `switch'.
	Reload a SUBREG of a hard reg as a unit.

	* alpha.md (mul*): Disallow multiply by constant.

Thu Feb 24 21:20:11 1994  Ian Lance Taylor  (ian@cygnus.com)

	* fixinc.sco: In <prototypes.h>, fix prototypes of getcwd and
	link.

Thu Feb 24 13:06:05 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config.sub: Don't force os=-hpux for hp9k2... and hp9k3...

Thu Feb 24 11:17:11 1994  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* configure (hppa*-*-osf*): Renamed from hppa*-*-mach.  Target
	filenames changed accordingly.

Thu Feb 24 08:54:27 1994  Bob Miorelli  (pwa-b!miorelli@uunet.uu.net)

	* lynx.h (LIB_SPEC, LINK_SPEC): Add missing blanks.

Thu Feb 24 08:42:07 1994  Ian Willis  (ianw@sco.com)

	* i386/sco.h, i386/scodbx.h (HANDLE_SYSV_PRAGMA): Define.

Thu Feb 24 07:31:44 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* loop.c (maybe_eliminate_biv_1): Ignore GIV if it isn't
	always computed.

	* loop.c (scan_loop, strength_reduce): Go back to LOOP_TOP, not
	its NEXT_INSN (in case SCAN_START == LOOP_TOP).

Wed Feb 23 07:30:14 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* reload1.c (choose_reload_regs): If EQUIV is a SUBREG, 
	make a new REG.

	* c-common.c (decl_attributes): Warn if attribute will be ignored.
	Allow `noreturn', `volatile', and `const' on object of type
	pointer to function.
	Always give decl with error or warning.
	* calls.c (expand_call): Functions may be const or volatile from
	their type.

Tue Feb 22 11:00:12 1994  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: In #[el]if, put double underscores around M32,
	m88k, pdp11, tower[_0-9]*, u370, u3b[0-9]*.  From Kaveh R.
	Ghazi.

	* fixinc.sco: Fix prototype declaration of utime in <sys/times.h>;
	it's broken in SCO 3.2v4.0.

Tue Feb 22 08:14:28 1994  Matthias Pfaller  (leo@marco.de) 

	* ns32k.h (FUNCTION_{PROLOGUE,EPILOGUE}): %$ is not supported
	in fprintf.
	(ADJSP): New macro to resolve %$.

	* pc532.h (FRAME_POINTER_REQUIRED): Deleted.
	* pc532-mach.h (FRAME_POINTER_REQUIRED): Moved to here.
	(DEFAULT_PCC_STRUCT_RETURN): Deleted; redundant.

	* ns32k.c (output_move_dconst): New function.
	* ns32k.h (output_move_dconst): New declaration.
	* ns32k.md: Added peephole patterns for stack adjustments followed
	by QI/HI pushes.
	(movsi): Use output_move_dconst for TARGET_32532.
	(ffs): New patterns.

	* ns32k.c (global_symbolic_reference_mentioned_p): New function.
	(print_operand_address): Allow pc-relative mode not only
	for {LABEL, SYMBOL}_REF but for CONST too. If compiling PIC,
	transform "symbol+const(Rx)" to "const(symbol(sb))[Rx:b]".
	* ns32k.h (OVERRIDE_OPTIONS): New macro to support PIC.
	(FUNCTION_PROLOGUE): Save/Load sb when compiling PIC.
	(FUNCTION_EPILOGUE): Restore sb when compiling PIC.
	(INITIAL_FRAME_POINTER_OFFSET): Take saved sb into account when PIC.
	(LEGITIMATE_CONSTANT_P, GO_IF_LEGITIMATE_ADDRESS):
	Set current_function_uses_pic_offset_table if P uses a global
	symbolic reference.
	(ENCODE_SECTION_INFO): New macro to support PIC.

Tue Feb 22 07:59:27 1994  Torbjorn Granlund  (tege@cygnus.com)

	* alpha.md (divsi3): Emit all RTL from RTL template.
	(udivsi3, modsi3, umodsi3, divdi3, udivdi3, moddi3, umoddi3): Likewise.

Tue Feb 22 07:21:31 1994  Samuel A. Figueroa  (figueroa@cs.nyu.edu)

	* i386/os2.h (LINK_SPEC, LIB_SPEC): New macros.
	(PATH_SEPARATOR): Delete from here.
	* i386/xm-os2.h (PATH_SEPARATOR): Add to here.

Mon Feb 21 17:48:39 1994  Jim Wilson  (wilson@cygnus.com)

	* mips-tfile.c (fatal, error): Add ! HAVE_VPRINTF versions.

Sun Feb 20 16:53:02 1994  Ted Lemon  (mellon@pepper.ncd.com)

	* mips.c (mips_move_2words): Check for TARGET_FLOAT64 != TARGET_64BIT.
	(override_options): Don't override MASK_64BIT; don't allow -gp64
	without -mips3.
	* mips.h: Update mips3 comments.
	(TARGET_OPTIONS): Add gp64 and gp32.
	(SECONDARY_MEMORY_NEEDED): Don't allow fp<->gp copy if TARGET_FLOAT64
	!= TARGET_64BIT.
	(CC1_SPEC): Generate correct -mfp* and -mgp* from -mips*
	* mips.md (movdf_internal1): Disable if TARGET_FLOAT64 != TARGET_64BIT.
	(movdf_internal1a):  New pattern.
	* osfrose.h (CC1_SPEC): Update as above.

Sun Feb 20 15:40:45 1994  Jim Wilson  (wilson@cygnus.com)

	* sparc.h (HARD_REGNO_MODE_OK): Update comment.

	* iris5.h (OBJECT_FORMAT_ELF): Add comments.
	* configure (mips-sgi-irix5): Use collect.

Sat Feb 19 14:25:41 1994  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: Permit upper case characters in typedef of size_t
	in <sys/types.h>.

Thu Feb 17 18:02:02 1994  Steve Chamberlain  (sac@cygnus.com)

	* c-parse.in (attrib): Handle attribute ((section ("string"))).
	* c-common.c (decl_attributes): Decode section attribute.
	* c-decl.c (duplicate_decls): Merge section name into new decl.
	* tree.h (DECL_SECTION_NAME): New macro.
	(struct tree_decl): New member `section_name'.
	* varasm.c (IN_NAMED_SECTION): New macro.
	(named_section): New function.
	(enum in_section): New value `in_named'.
	(in_named_name): New global.
	(make_function_rtl, make_decl_rtl, output_constant_def): Fix comment
	regarding ASM_OUTPUT_LABELREF.
	(make_decl_rtl): Warn if section attribute used with uninitialized
	variable declaration.
	(assemble_start_function, assemble_variable, output_constant_def):
	Change to named section if given.
	* sparc/sysv4.h (ASM_OUTPUT_SECTION_NAME): Define.
	* h8300/h8300.h (ASM_OUTPUT_SECTION_NAME): Define.
	(EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION): Delete.
	(ASM_OUTPUT_LABELREF): Call fprintf directly.
	* h8300/h8300.c (asm_output_labelref): Delete.
	* sh/sh.h (ASM_OUTPUT_SECTION_NAME): Define.
	(ASM_OUTPUT_SECTION): Delete.

Wed Feb 16 21:46:48 1994  Doug Evans  (dje@cygnus.com)

	* i960/i960.c (i960_function_prologue): Put register save area before
	outgoing arg block.

Wed Feb 16 15:33:26 1994  Jim Wilson  (wilson@cygnus.com)

	* expr.c (get_pointer_alignment):  ALIGN is alignment of innermost
	object, not the MAX of alignment of all objects.

	* expr.c (group_insns): Delete.
	(emit_move_insn_1, expand_expr): Use emit_no_conflict_block
	instead of group_insns.

	* final.c (end_final): Pass BIGGEST_ALIGNMENT not align to
	ASM_OUTPUT_ALIGNED_LOCAL.

	* alpha.c (alpha_builtin_saveregs): Don't include
	current_function_arg_offset_rtx in argsize.  Subtract 48 from arg
	base address when no int registers stored on the stack.

	* genattrtab.c (expand_units): Fix blockage calculation.

	* loop.c (scan_loop): Add no_labels_between_p call to tests which
	decide if an invariant reg can be safely replaced with its SET_SRC.

Wed Feb 16 00:54:04 1994  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: Fix uses of new in Xm/Traversal.h.  Found on
	RS/6000.

Tue Feb 15 19:44:41 1994  Per Bothner  (bothner@kalessin.cygnus.com)

	* tree.def:  Remove STRING_TYPE.  No-one uses it.
	* tree.h (struct tree_type):  New bitfield string_flag.
	* tree.h (TYPE_STRING_FLAG):  New macro.
	* tree.c, sparc.c:  Remove unneeded tests for STRING_TYPE.
	* expr.c (expand_builtin), dwarfout.c:  Use TYPE_STRING_FLAG.
	* dbxout.c (dbxout_type):  For SET_TYPE and ARRAY_TYPE, use
	TYPE_STRING_FLAG to emit appropriate indication.

Tue Feb 15 19:36:45 1994  Stephen L Moshier  (moshier@world.std.com)

	* real.c (real_value_truncate): If requested mode is not
	supported, return the unmodified input instead of aborting.

Tue Feb 15 19:30:48 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (expand_increment): Handle both BAD_SUBREG and POST.

Tue Feb 15 11:09:08 1994  Ian Lance Taylor  (ian@cygnus.com)

	* fixinc.svr4: Make byteorder.h a here document, rather than
	copying it from the source directory.
	* byteorder.h: Removed.

	* fixinc.sco: Don't install <sys/byteorder.h>.

	* fixincludes: Removed references to GCCCMD.  Instead of running
	${GCCCMD} to determine correct value for size_t, just fix the
	header files to use __SIZE_TYPE__.
	* Makefile.in (fixinc.ready): Removed target.
	(stmp-fixinc): Don't depend upon fixinc.ready.  Don't pass fourth
	argument (was "`pwd`/xgcc -B`pwd`/") to $(FIXINCLUDES).
	(clean): Don't remove fixinc.ready.

	* rs6000.h (RS6000_ITRUNC, RS6000_UITRUNC): Define.
	* rs6000.md (fix_truncdfsi2, fixuns_truncdfsi2): Use RS6000_ITRUNC
	and RS6000_UITRUNC, not "itrunc" and "uitrunc".
	* rs6000.c (output_prolog): Likewise.

Mon Feb 14 19:19:06 1994  Jim Meyering  (meyering@idefix.comco.com)

	* gen-protos.c (main): Remove unused args in call to fprintf.
	* bi-opcode.c (main): Move unused arg ++i out of call to printf.

Mon Feb 14 19:14:55 1994  Stephen L Moshier  (moshier@world.std.com)

	* real.c (eifrac): If FIXUNS_TRUNC_LIKE_FIX_TRUNC,
	convert on positive overflow as if unsigned.

Mon Feb 14 19:13:15 1994  Jason Merrill  (jason@deneb.cygnus.com)

	* toplev.c (lang_options): Add -W{no,}extern-inline.

	* gcc.c (default_compilers): Generate and use .ii files in the
	intermediate stage of compiling C++ source.

Mon Feb 14 19:08:37 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* local-alloc.c (optimize_reg_copy): A register that dies in
	a CALL_INSN doesn't cross that call.

	* combine.c (simplify_shift_const, case AND): When remaking
	binary operation, do it in SHIFT_MODE.

Mon Feb 14 11:27:35 1994  Frederic Pierresteguy  (F.Pierresteguy@frcl.bull.fr)

	* config.sub: Add case for Bull dpx20.

Sun Feb 13 23:50:15 1994  Ian Lance Taylor  (ian@cygnus.com)

	* rs6000.c (output_epilog): Don't output a traceback table if
	flag_inhibit_size_directive is set.

Sun Feb 13 17:47:14 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.c (rs6000_adjust_cost): Renamed from ppc_adjust_cost.
	* rs6000.h (ADJUST_COST): Call rs6000_adjust_cost.

Sun Feb 13 17:07:02 1994  Ian Lance Taylor  (ian@cygnus.com)

	* rs6000.h (ASM_OUTPUT_INTERNAL_LABEL_PREFIX): Define.
	(ASM_OUTPUT_ADDR_VEC_ELT): Use ASM_GENERATE_INTERNAL_LABEL instead
	of assuming the default format for internal labels.
	(ASM_OUTPUT_ADDR_DIFF_ELT): Likewise.
	* rs6000.c (output_prolog, output_epilog): Likewise.
	(output_function_profiler): Likewise.

	* fixincludes: Fix conflicts with C++ reserved words in
	X11/ShellP.h, Xm/Traversal.h, and Xm/BaseClassI.h.  Found on
	RS/6000.

Sun Feb 13 13:40:17 1994  Michael Meissner  (meissner@osf.org)

	* halfpic.h (toplevel): Include stdio.h if it hasn't been included
	already, so that STDIO_PROTO can be defined.  Otherwise,
	asm_fprintf gets a prototype mismatch.

Sun Feb 13 02:36:30 1994  Doug Evans  (dje@cygnus.com)

	* gcc.c (fatal, error): Fix declarations (dependent on HAVE_VPRINTF)..

Sat Feb 12 19:46:29 1994  Michael Meissner  (meissner@osf.org)

	* configure (386-*-osfrose): Use i386/xm-osf.h as xm file.

	* i386/xm-osf.h (new file): Define HAVE_PUTENV and HAVE_VPRINTF.

Sat Feb 12 08:51:02 1994  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* calls.c (expand_call): When preserving subexpressions, don't put
	expensive arguments directly into hard registers.

	* combine.c (REVERSIBLE_CC_MODE): Add default definition.
	(reversible_comparison_p): REVERSIBLE_CC_MODE.
	* sparc.h (REVERSIBLE_CC_MODE): Define.

	* combine.c (subst): Always simplify true and false arms if
	if_then_else_cond succeeds.
	(subst, case IF_THEN_ELSE): More canonicalizations; delete some
	redundant tests.
	(if_then_else_cond): Canonicalize (OP (mult COMP A) (mult REV_COMP B)).
	(gen_binary): Simplify (REL_OP (compare X Y) 0) here.

Sat Feb 12 07:41:55 1994  Torbjorn Granlund  (tege@adder.cygnus.com)

	* cse.c (cse_main): Conditionalize special treatment of
	PIC_OFFSET_TABLE_REGNUM on PIC_OFFSET_TABLE_REG_CALL_CLOBBERED.

	* expmed.c (expand_shift): Truncate immediate count if
	SHIFT_COUNT_TRUNCATED.

Fri Feb 11 18:49:42 1994  Per Bothner  (bothner@kalessin.cygnus.com)

	* dbxout.c (dbxout_type_fields):  Emit anonymous fields
	just like other fields, but with an empty name.  Don't
	treat the fields as belonging to the containing object.

Fri Feb 11 20:08:25 1994  Torbjorn Granlund  (tege@adder.cygnus.com)

	* rs6000.md (definition of "type"): Add "jmpreg" as new	type.
	Change "mtlr" to "mtjmpr".
	(movsi matcher): Pair `c' and `l' in the same constraint
	alternative.
	(return): Set attribute to "jmpreg".
	(indirect_jump): Likewise.
	* rs6000.h (ADJUST_COST): Call ppc_adjust_cost.
	* rs6000.c (ppc_adjust_cost): New function.  Adjust for TYPE_JMPREG.

Fri Feb 11 17:39:42 1994  Michael Collison  (collison@osf.org)

	* reload1.c (gen_input_reload): If reg-reg add is not valid,
	try copying reg-reg and adding reg-int.

Fri Feb 11 17:36:11 1994  Jason Merrill  (jason@deneb.cygnus.com)

	* expr.c (expand_builtin): If the builtin was called as
	__builtin_whatever, pretend we're optimizing.

Fri Feb 11 17:30:28 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* jump.c (mark_jump_label, case LABEL_REF): Update REG_LABEL
	note if changing target of jump.

	* regclass.c (record_reg_classes): Fix logic in case of matching
	operands.

Fri Feb 11 16:03:21 1994  Doug Evans  (dje@cygnus.com)

	* tree.h (VPROTO, VA_START): Avoid duplicate definition.
	* rtl.h (VPROTO, VA_START): Likewise.
	* gcc.c (VPROTO, VA_START): Define.
	(PROTO): Define.
	Add prototypes for static functions.
	* g++.c (VPROTO, VA_START): Define.

	* gstdarg.h: Don't define _STDARG_H/etc. if not gcc,
	it may collide with system's header.

Thu Feb 10 19:26:37 1994  Chip Salzenberg  (chip@fin.uucp)

	* c-typeck.c (c_expand_return): Do not warn about returning the
	address of a locally declared extern variable.

Thu Feb 10 15:57:06 1994  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* final.c (IS_ASM_LOGICAL_LINE_SEPARATOR): Provide default
	definition.
	(asm_insn_count): Use IS_ASM_LOGICAL_LINE_SEPARATOR rather
	than assuming the logical line separator is ';'.

	* pa.h (IS_ASM_LOGICAL_LINE_SEPARATOR): Define.

Thu Feb 10 08:49:39 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* reload.h (reload_secondary_{reload,icode}): Deleted.
	(reload_secondary_{in,out}_{reload,icode}): New variables.
	* reload.c: Likewise.
	(MATCHES, MERGABLE_RELOADS, MERGE_TO_OTHER): Move to front of file.
	(push_secondary_reload): New function, from find_secondary_reload.
	(find_secondary_reload): Deleted.
	(push_reload): Call push_secondary_reload.
	(combine_reloads): Use new vars for secondary reloads and icodes.
	* reload1.c (emit_reload_insns): Use new vars for secondary
	reloads and icodes.

	* explow.c (memory_address): Fix error in last change.

Thu Feb 10 08:13:49 1994  Stephen R. van den Berg  (berg@pool.informatik.rwth-aachen.de)

	* rtl.h, tree.h, mips-tfile.c (VPROTO): New macro.
	* combine.c, expr.h, genattrtab.c, output.h, rtl.h, tree.h, toplev.c:
	Use PROTO for varargs functions.
	* genattrtab.c (attr_printf): Only declare when defined.
	* bc-emit.c, calls.c, combine.c, emit-rtl.c, final.c, g++.c:
	If __STDC__, include gstdarg and use ANSI form of varargs.
	* gcc.c, genattrtab.c, mips-tfile.c, tree.c, toplev.c: Likewise.

Wed Feb  9 09:53:54 1994  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h (SUBTARGET_SWITCHES): Add -mmcount-ptr as a
	synonym for -mno-mcount.
	(CC1_SPEC): If -melf, pass -mmcount-ptr by default.

	* i386/osfelf.h (CC1_SPEC): Unless -mrose, pass -mmcount-ptr by
	default.

	* configure (alpha-dec-osf): Use osf2.h and gdb-osf2.h on OSF/1 2.0 and
	beyond.

	* alpha/osf2.h, alpha/gdb-osf2.h (new files): Support for OSF/1 2.0
	that uses 4 byte wchar_t's instead of 2 byte.

Tue Feb  8 20:18:12 1994  Paul Eggert  (eggert@twinsun.com)

	* real.c (earith, ereal_negate, eneg, eisneg, enan, emovo, esub):
	Propagate the sign of NaNs, so that e.g. -(NaN) evaluates to -NaN.
	(eadd, ediv, emul, eremain, e53toe, e64toe, e113toe, e24toe, esqrt): 
	Likewise.
	(make_nan): New arg specifies sign of NaN.  All callers changed.
	(eiisneg): New function.
	(esqrt): Compute sqrt(-0.0) to be -0.0, not 0.0.

Tue Feb  8 19:23:41 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* toplev.c: Include ctype.h.

	* tree.c (int_fits_type_p): Properly handle case of variable bounds
	for types.

Tue Feb  8 19:20:04 1994  Jason Merrill  (jason@deneb.cygnus.com)

	* fixproto: Add popen and pclose to required list for stdio.h.
	Add putenv to required list for stdlib.h.
	Add getopt to required list for unistd.h.

	* fixproto: Append "#include <stdlib.h>" to assert.h if it uses
	exit or abort.

	* libgcc2.c (__builtin_new): If __new_handler returns, keep trying
	to allocate the memory.
	(__default_new_handler): Add __ to beginning of name to avoid
	namespace clashing.

Tue Feb  8 18:50:07 1994  Jim Wilson  (wilson@cygnus.com)

	* i386/x-aix (FIXINCLUDES): Delete definition.
	* configure (i[34]86-ibm-aix): Delete definition of fixincludes.
	* fixincludes: When edit size_t typedef, modify sed pattern to
	avoid matching typedef uses of size_t.  Likewise when adding
	#ifndef GCC_SIZE_T.
	* fixinc.ps2: Delete file.

	* mips.h (ASM_OUTPUT_LOCAL, ASM_OUTPUT_COMMON): Use SIZE not ROUNDED.

	* iris5.h (SIZE_TYPE, PTRDIFF_TYPE): Don't redefine.
	(MAX_WCHAR_TYPE_SIZE): Define.

	* mips-tdump.c (print_file_desc): Correct printf format.
	(main): Likewise.

	* flow.c (find_basic_blocks): Also look for REG_LABEL notes on first
	instruction of each basic block.

	* sparc.c (save_regs, restore_regs): Use __inline__ not inline.

Tue Feb  8 10:13:54 1994  Doug Evans  (dje@cygnus.com)

	* toplev.c (open_dump_file): New function.
	(compile_file): Open dump files with it.  Remove dump_base_name_length.

Sun Feb  6 15:52:48 1994  Jim Wilson  (wilson@cygnus.com)

	* collect2.c (sys_siglist): Don't declare if
	DONT_DECLARE_SYS_SIGLIST is defined.
	* mips/xm-sysv4.h (DONT_DECLARE_SYS_SIGLIST): Define.
	* sparc/xm-sol2.h (NO_SYS_SIGLIST): Delete.
	(DONT_DECLARE_SYS_SIGLIST): Define.
	* mips-tfile.c (sys_siglist): Don't declare if NO_SYS_SIGLIST or
	DONT_DECLARE_SYS_SIGLIST are defined.
	(catch_signal): Add code for NO_SYS_SIGLIST case.

	* sched.c (reg_pending_sets, reg_pending_sets_all): New variables.
	(sched_analyze_1): Set reg_pending_sets instead of reg_last_sets.
	(sched_analyze_2): Set reg_pending_sets or reg_pending_sets_all
	instead of reg_last_sets.
	(sched_analyze_insn): Use reg_pending_sets and
	reg_pending_sets_all to set reg_last_sets.  Set
	reg_pending_sets_all instead of reg_last_sets.
	(schedule_block): Allocate and clear reg_pending_sets.

	* sparc.md (movdi): Handle 'U' and 'T' constraints.

	* m68k/hp320.h (FUNCTION_PROFILER): Concatenate strings to avoid
	use of ANSI C specific feature.

	* mips.c (function_arg): When soft-float, don't add bias for
	second SFmode argument.

	* iris5.h (CPP_PREDEFINES): Add _MIPSEB.

Sun Feb  6 08:40:46 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* function.c (struct temp_slot): Add new field, ADDRESS.
	(assign_stack_temp): Initialize it to zero.
	(find_temp_slot_from_address, update_temp_slot_address): New functions.
	(preserve_temp_slots): Use find_temp_slot_from_address.
	* explow.c (memory_address): Call update_temp_slot_address on
	new and old address.

	* cse.c (canon_hash, case LABEL_REF, SYMBOL_REF): Avoid warning
	on 64-bit machines.

Sat Feb  5 17:55:52 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* configure (i[34]86-sequent-ptx): Alias for i[34]86-sequent-sysv*.

Sat Feb  5 11:46:00 1994  Steve Chamberlain  (sac@cygnus.com)

	* sh.c (hard_regno_mode_ok): New vector. 
	(output_stack_adjust): Always adjust stack with an addsi insn. 
	(calc_live_regs):  Support alernative calling conventions. 
	(print_operand): Delete obsolete cases.
	(synth_constant): New function to generate constants by
	arithmetic means. 
	(expand_block_move): Use new block move support	routines. 
	(prepare_move_operands):  Use synth_constant when possible, try
	and geneate splits for DI moves.
	(output_jump_label_table, dump_table, output_far_jump,
	prepare_split_double_ops,from_compare, equality_operator,
	handle_pragma, expand_acall): New functions. 
	(prepare_scc_operands):	When condition isn't supported swap args
	and alter test.
	(output_move_double): Generate better code for constant moves.
	(output_shift): Cope with negative shifts. 
	(byte_index_operand, pop_operand, painful_immediate_operand,
	ok_shift_value, hard_immediate_operand, adjust_insn_length,
	dump_constants, output_movepcrel): Deleted.  
	(final_prescan_insn): Now only prints pc.
	(shiftcosts, andcosts, multcosts): Work out some insn costs.
	(gen_ashift, gen_shifty):  Emit code for shift operations.
	(fixit, hi_const, find_barrier,	broken_move,
	machine_dependent_reorg): New functions to fix move instructions
	with out-of-range literals.

	* sh.h (OPTIMIZATION_OPTIONS, CONDITIONAL_REGISTER_USAGE): New.
	(TARGET_SWITCHES): Extra -m options for experimental calling
	conventions.
	(HARD_REGNO_MODE_OK): Use hard_regno_mode_ok vector rather than
	inline code.  
	(FRAME_POINTER_REQUIRED): Always 0. 
	(reg_class, REG_CLASS_CONTENTS, REG_CLASS_NAMES): Change order
	of classes.
	(FRAME_GROWS_DOWNWARD): Don't define.
	(FUNCTION_ARG_PARTIAL_NREGS): Always 0.  
	(MAX_REGS_PER_ADDRESS):	Is 2. 
	(GO_IF_LEGITIMATE_INDEX): Split up into smaller macros.
	(CASE_VECTOR_MODE, CASE_VECTOR_PC_RELATIVE): Jump tables are of
	switchable size and always pc relative. 
	(RTX_COSTS): Use new andcosts, multcosts and shiftcosts functions. 
	(INSN_SETS_ARE_DELAYED,	INSN_REFERENCES_ARE_DELAYED): New.
	(ASM_OUTPUT_CASE_LABEL, ASM_OUTPUT_ADDR_DIF_ELT): Now switches are
	pc relative.

	* sh.md (define_attr length): Calculate lengths more accurately.
	(define_attr "rte", "hit_stack"): New.  
	(cmp*):  Allow all conditions by swapping args.  
	(addc, adddi3, and_ff, casesi, casesi_worker, peepholes): New. 
	(div*, mul*): Use library routines with special calling
	conventions. 
	(shifts): Generate only legal shift insn sequences. 
	(extend*): Get clobbers right, extra constraints. 
	(mov*): Greatly simplified.
	(b*):  Use from_compare function. 
	(return, rte): Understand pragma interrupt. 
	(anddi3, iordi3, xordi3): Deleted.  
	(consttable_2,consttable_4, consttable_8, align_2, align_4,
	consttable_end, movesi_k, movhi_k, movdi_k): Support for inline
	literal tables.
	(movstrsi, block_move_real, block_lump_real): Use new block move
	routines.

	* toplev.c (rest_of_compilation): Invoke MACHINE_DEPENDENT_REORG if
	defined.

Sat Feb  5 08:05:58 1994  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* cse.c (memory_extend_rtx): New variable.
	(cse_main): Initialize it.
	(cse_insn): See if we have already loaded a MEM in a wider  mode.

Sat Feb  5 07:05:29 1994  Jason Merrill  (jason@deneb.cygnus.com)

	* fixproto: Add lstat to required_list for sys/stat.h

Fri Feb  4 12:14:49 1994  Stan Cox  (coxs@dg-rtp.dg.com)

	* m88k.h: (TARGET_SWITCHES) Assume -muse-div-instruction
	-mno-check-zero-division for -m88110.  (CONSTANT_ADDRESS_P) Fix a
	-fpic reload bug.  (DONT_REDUCE_ADDR) Don't strength reduce so
	m88k scaled loads/stores will be used.  (enum processor_type) Use
	instead of attr_cpu, which is not always defined.

	* m88k.md: (movdf) Split movdf so it can go into a branch delay slot

	* m88k.c: (m88k_gp_threshold) Make -mshort-data- unsigned.
	(block_move_*) Copy MEM_IN_STRUCT_P for block move cases.

	* dgux.h: (TARGET_SVR4) Use -msvr4/-msvr3 instead of
	-mversion-03.00 to choose assembler syntax.

Fri Feb  4 08:14:31 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* emit-rtl.c (gen_lowpart_common, gen_highpart): Test *_BIG_ENDIAN
	with "if", not #if and fix one erroneous test.

Thu Feb  3 17:15:07 1994  Jim Wilson  (wilson@cygnus.com)

	* expmed.c (store_bit_field, insv case): Don't use PUT_MODE on
	xop0 when it is a SUBREG, generate a new SUBREG.

Thu Feb  3 13:24:14 1994  Alex Zatsman  (alex.zatsman@analog.com)

	* hard-reg-set.h (GO_IF_HARD_REG_EQUAL): Fix typo.

Thu Feb  3 07:45:45 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* flow.c: Add prototypes for static functions.
	(uses_reg_or_mem): New function.
	(find_basic_block): Some cleanups; eliminate shadowed variables.
	Look for REG_LABEL notes in all insns and allow for multiple such.
	Don't delete labels in forced_labels.
	Generalize test for computed jumps.
	(find_auto_inc): OFFSET should be HOST_WIDE_INT.
	(mark_used_regs): Put decls of parms in parm order.
	(find_use_as_address): PLUSCONST should be HOST_WIDE_INT.

	* reload1.c (eliminate_regs, case INSN_LIST): Properly remake
	list when we change something further on.

Wed Feb  2 21:25:03 1994  Jim Wilson  (wilson@cygnus.com)

	* c-typeck.c (signed_or_unsigned_type): Check for any
        INTEGRAL_TYPE_P not just INTEGER_TYPE.

	* Makefile.in (enquire.o): Depend on stmp-int-hdrs.

	* mips.h (CPP_SPEC): Define __PTRDIFF_TYPE__ not __PTRDIFF_TYPE.

	* reorg.c (fill_simple_delay_slots): When fill epilogue delay
	slot, set needed to end_of_function_needs instead of clearing it.

Wed Feb  2 15:20:38 1994  Philippe De Muyter  (phdm@info.ucl.ac.be)

	* tree.c (FILE_FUNCTION_FORMAT): Fix typo if neither dot nor dollar
	in label.

Wed Feb  2 14:38:56 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fold-const.c (const_binop, COMPLEX_TYPE, case RDIV_EXPR):
	If complex integer, use TRUNC_DIV_EXPR for inner division.

	* c-tree.h: Re-order declarations for functions in c-typeck.c to
	agree with order there; add some missing declarations.
	* c-typeck.c: Add prototypes for static functions; delete
	forward declarations of non-static functions.
	(initializer_constant_valid_p): Add missing parameter to
	recursive call.

Wed Feb  2 14:22:05 1994  Kaveh R. Ghazi  (ghazi@noc.rutgers.edu)

	* objc/Makefile (SUBDIR_INCLUDES): Add -I for include directory.

Wed Feb  2 13:24:23 1994  Chip Salzenberg  (chip@fin.uucp)

	* expmed.c (synth_mult): Delay allocation of algorithm structures
	until they are needed.  Reorder early-exit tests to avoid comparing
	value that is not yet set.

Tue Feb  1 18:56:19 1994  Chip Salzenberg  (chip@fin.uucp)

	* c-common.c (decl_attributes):  Allow format attributes
	on old style (non-prototype) function declarations.

Tue Feb  1 11:25:40 1994  Stephen R. van den Berg  (berg@pool.informatik.rwth-aachen.de)

	* tree.c (build_type_variant): Simplify by using build_type_copy.

	* c-decl.c (grokdeclarator): `volatile' function warning
	corrected to read `noreturn' function warning.
	(finish_function): Likewise.
	* cp-decl.c (finish_function): Likewise.
	* c-typeck.c, cp-typeck.c (c_expand_return): Likewise.
	* toplev.c (rest_of_compilation): Likewise.

Tue Feb  1 06:06:22 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (make_extraction): Don't make an extraction that
	has the potential of crossing a boundary.

	* regclass.c: Add prototypes for static functions.
	(auto_inc_dec_reg_p): New function.
	(regclass): Call it to allow a register needing a secondary reload
	to be used for inc/dec if it is already valid for it.

	* gcc.c (default_compilers, @ada): Don't duplicate "-gnat" parameters;
	pass -quiet unless -Q is specified.

	* alpha.md (minsf3, maxdf3, mindf3): Properly insert constant of
	zero into patterns.

Mon Jan 31 20:55:41 1994  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)

	* i960.c (i960_function_name_declare): Handle names that start
	with '*'.

Mon Jan 31 19:13:59 1994  Chip Salzenberg  (chip@fin.uucp)

	Unify error and message functions:
	* toplev.c: Include "gvarargs.h".
	(fatal_insn_not_found): Omit superfluous argument to error.
	(vmessage, v_message_with_file_and_line): New functions.
	(v_message_with_decl, file_and_line_for_asm): Likewise.
	(v_error_with_file_and_line, v_error_with_decl): Likewise.
	(v_error_for_asm, verror, vfatal): Likewise.
	(v_warning_with_file_and_line, v_warning_with_decl): Likewise.
	(v_warning_for_asm, vwarning): Likewise.
	(error_with_file_and_line, error_with_decl, error, fatal): Now just
	wrappers for above functions.
	(error_for_asm, warning_with_file_and_line): Likewise.
	(warning_with_decl, warning_for_asm, warning): Likewise.

Mon Jan 31 19:03:16 1994  Jim Wilson  (wilson@cygnus.com)

	* sched.c (sched_analyze_insn): Add use dependencies for registers
	mentioned in REG_DEAD notes.

	* configure (mips-tandem-sysv4*): Add.
	* mips/svr4-t.h, mips/svr4-t-gdb.h: New files.

	* sched.c (priority): Call insn_cost() for anti- and output-
	dependencies as well as for true dependencies.

	* cse.c (find_best_addr): Limit number of cse_gen_binary calls to
	20 per iteration.

Mon Jan 31 18:08:27 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* real.c (emovo): Use separate variable for loop index.

	* fold-const.c (operand_equal_for_comparison_p): Declare
	correct_width as unsigned.

	* configure (m68k-wrs-vxworks): Fix typo in name.

	* Makefile.in (cross-test, enquire, protoize, unprotoize):
	Specify program name in -o to force into build directory.

	* i386/sol2.h (CPP_SPEC): Add -Dsun.

	* alpha/gdb.h: Renamed from alpha-gdb.h.
	* alpha/gdb-osf12.h: New file.
	* configure (alpha): Reflect new name for files and support
	gdb with OSF V1.2.

Mon Jan 31 15:18:40 1994  Jim Wilson  (wilson@cygnus.com)

	* bc-emit.c (class_narrowest_mode, byte_mode, word_mode): Add
	extern to declaration.
	* expr.c (local_vars_size): Likewise.

	* genattrtab.c (expand_units): When calculate BLOCKAGE, reverse
	terms to POS_MINUS_OP.  Clarify comment before BLOCKAGE computation.
	(write_complex_function): Use EXECUTING_INSN for first switch, and
	CANDIDATE_INSN for second switch.

	* sparc/lite.h (TARGET_DEFFAULT): Add -mapp-regs.
	* sparc/sparc.h (TARGET_APP_REGS): Define.
	(TARGET_SWITCHES): Add new options -mapp-regs and -mno-app-regs.
	(TARGET_DEFAULT): Add -mapp-regs.
	(CONDITIONAL_REGISTER_USAGE): Make %g2, %g3, and %g4 be fixed when
	the -mno-app-regs option is used.
	* sparc/sun4os3.h (TARGET_DEFAULT): Delete.

	* svr4-5.h (STARTFILE_SPEC): Include values-X[cta].o file in link.

	* xcoffout.c (ASM_OUTPUT_LFE): Output absolute line number not
	relative line number.

Fri Jan 28 19:20:07 1994  Michael Collison  (collison@osf.org)

	* flow.c (find_auto_inc): Check for increment using single_set.

Fri Jan 28 19:11:17 1994  David Edelsohn  (edelsohn@npac.syr.edu)

	* rs6000.md (fsel): Remove insns with record bit set.

Thu Jan 27 18:22:25 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* alpha.c (output_prolog): Fix typo in previous change.

Wed Jan 26 18:19:51 1994  Per Bothner  (bothner@sugar-bombs.gnu.ai.mit.edu)

	* c-typeck.c (initializer_constant_valid_p):  Make non-static.
	(It's used by the Chill back-end.)

Wed Jan 26 13:54:40 1994  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)

	* sched.c (attach_deaths_insn): Add REG_DEAD notes to CLOBBER if
	it is for a MEM.

Tue Jan 25 08:30:11 1994  Chip Salzenberg  (chip@fin.uucp)

	* cse.c (HASHBITS): Removed.
	(HASH, struct set, canon_hash, safe_hash, remove_from_table):
	Generate and use unsigned hash values, to avoid potential trouble
	with signed shift/overflow.
	Also name variables consistently: "hash", not "hash_code".
	(lookup, lookup_for_remove, insert, merge_equiv_classes): Likewise.
	(invalidate, rehash_using_reg, invalidate_for_call): Likewise.
	(find_best_addr, record_jump_cond, cse_insn):  Likewise.

Mon Jan 24 18:59:59 1994  Jim Wilson  (wilson@cygnus.com)

	* expmed.c (store_split_bit_field):  For BYTES_BIG_ENDIAN, only
	pad on left if value not in memory.  Reject gen_lowpart_common
	output if it returns the input value.

	* unroll.c (copy_loop_body): When delete simplified condjump,
	protect the label, so that it doesn't get deleted also.

	* toplev.c (compile_file): If yyparse returns an error, pop all
	pending binding levels.

Mon Jan 24 18:30:53 1994  Doug Evans  (dje@cygnus.com)

	* objc/Object.h (streamVersion, read, write): #ifndef out for the
	alpha since TypedStream not supported there yet.
	* objc/Object.m (streamVersion, read, write): Ditto.

Mon Jan 24 17:40:56 1994  Jim Wilson  (wilson@cygnus.com)

	* sparc.c (sparc_address_cost): Delete.
	* sparc.h (ADDRESS_COST): Define to 1.

	* bsd-5.h, mips-5.h, svr3-5.h, svr4-5.h (ASM_OUTPUT_NEWLINE):
	Define new macro.
	* mips.h (ASM_OUTPUT_NEWLINE): New default for new macro.
	(ASM_OUTPUT_ASCII): Use ASM_OUTPUT_NEWLINE.

	* sparc.h (ASM_OUTPUT_COMMON): Don't output .global.  Use SIZE not
	ROUNDED.
	(ASM_OUTPUT_LOCAL): Delete.
	(ASM_OUTPUT_ALIGNED_LOCAL): Define.

Sun Jan 23 18:57:01 1994  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* expr.c (do_jump_for_compare): Initialize JUMP_LABEL for the branch
	insn before trying to invert it.

Sun Jan 23 18:40:23 1994  Samuel A. Figueroa  (figueroa@cs.nyu.edu)

	* i386/os2.h (PATH_SEPARATOR): New macro.
	* i386/gas.h (ASM_FILE_START): Delete; identical to one in bsd.h,
	which is included.

Sun Jan 23 18:21:23 1994  Randy S. Welch  (randy@tss.com)

	* m68k/plexus.h: Assume GAS 2.x used and add support for debugging.

Sun Jan 23 06:19:28 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* reload.c (find_reloads): Properly test for output operand
	when changing RELOAD_FOR_OUTPUT_ADDRESS to RELOAD_FOR_INPUT_ADDRESS.

	* combine.c (subst, case SUBREG): Handle paradoxical SUBREG of
	constant.
	(IF_THEN_ELSE): Add missing "else" and check for comparison
	before calling reversible_comparison_p.

	* c-typeck.c (output_init_elements): Use FIELD instead
	of constructor_fields when doing alignment and sizing.
	(output_pending_init_elements): Don't blow up when writing
	other than first field put haven't written anything yet.
	Update constructor_bit_index when we emit a skip.

	* toplev.c (rest_of_compilation): Defer compilation of function
	that were specified as inline, whether or not they actually were
	inlined.

	* alpha.h (OBJECT_FORMAT_COFF, EXTENDED_COFF, NM_FLAGS): Define.
	* x-alpha: New file.

	* combine.c (simplify_comparison): Can remove NOT on both operands
	if we swap comparison code.

	* rs6000.md: Insert some missing blank lines.

	* alpha.c (output_{pro,epi}log): Use assemble_name to output
	alpha_function_name.

	* combine.c (simplify_comparison): Fix typos in last change.

Sun Jan 23 05:59:31 1994  Per Bothner  (bothner@cygnus.com)

	* c-typeck.c (really_start_incremental_init): Save current elements
	instead of clearing them.

Sat Jan 22 15:50:29 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* c-typeck.c (c_expand_return): Issue a warning if returning
	address of non-static local object.

	* combine.c (if_then_else_cond): Don't do anything with COMPARE.
	(simplify_comparison): Strip SIGN_EXTEND, NOT, or NEG when
	both operands have it.

	* combine.c (num_sign_bit_copies): Ifndef WORD_REGISTER_OPERATIONS,
	ensure we don't do the wrong thing if X is narrower than MODE.

Thu Jan 20 01:06:23 1994  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.h (ASM_OUTPUT_SOURCE_LINE): Make the first source line stab
	for each procedure special to avoid the need for nasty hacks in GAS.

	* pa.md (iorscc): Fix typo.

Wed Jan 19 19:35:37 1994  Torbjorn Granlund  (tege@adder.cygnus.com)

	* pa.h (ASM_GLOBALIZE_LABEL): Don't globalize function labels here.

Mon Jan 17 16:38:16 1994  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)

	* xcoffout.c (xcoffout_begin_block): Don't emit a .bb for the
	function level scope.
	(xcoffout_end_block): Don't emit a .eb for the function level
	scope.

Sun Jan 16 14:29:31 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config.sub: Alphabetize the list of machine-name aliases.
	Add nh3000 and nh[45]000.
	Delete duplicate clauses for hp9k2... and hp9k31...

Sat Jan 15 18:06:45 1994  Torbjorn Granlund  (tege@blues.cygnus.com)

	* config/sparc/sparc.md (smulsi3_highpart): New pattern.
	(umulsi3_highpart): New pattern.
	* config/mips/mips.md (smulsi3_highpart): New pattern.
	(umulsi3_highpart): New pattern.

Thu Jan 13 18:54:27 1994  Jim Wilson  (wilson@cygnus.com)

	* iris3.h (CPP_SPEC): Define __SIZE_TYPE__, __PTRDIFF_TYPE__, and
	__mips.
	(SIZE_TYPE, PTRDIFF_TYPE): Delete.
	* mips.c (dfhigh, dflow, sfhigh, sflow): New variables.
	(mips_sw_reg_names): Consistently use $ as name prefix.
	(large_int): Handle 64 bit constants.
	(reg_or_0_operand, mips_const_double_ok): Don't examine
	CONST_DOUBLE internals.
	(mips_const_double_ok): Use REAL_VALUE_* macros.
	(simple_memory_operand): Add 64 bit support.  Only test
	TARGET_GP_OPT to determine if doing gp optimizations.  Pass
	address not MEM to eliminate_constant_term.  Use SMALL_INT.
	(mips_fill_delay_slot): Add 64 bit support.
	(mips_move_1word): Add 64 bit support.  Don't examine CONST_DOUBLE
	internals.
	(mips_move_2words): Likewise.
	(mips_address_cost): Pass address not MEM to
	eliminate_constant_term.  Use SMALL_INT.
	(gen_int_relational): New variable mode.  Add 64 bit support.
	(gen_conditional_branch): Add 64 bit support.
	(block_move_load_store, block_move_loop, block_move_call,
	expand_block_move, output_block_move, function_arg_advance,
	function_arg, function_arg_partial_nregs): Likewise.
	(override_options): Clear MASK_GPOPT if threshold is zero or
	negative.  Set MASK_GPOPT if optimizing.  Set mips_isa from -misa=
	option, else from MIPS_ISA_DEFAULT if defined, else to 1.  Make
	default cpu depend on isa.  Add cpus r4400, r4600, orion.  Rewrite
	TARGET_NAME_REGS support.  Initialize dfhigh, dflow, sfhigh,
	sflow.  Add 64 bit support.
	(print_operand): Use REAL_VALUE_* macros.
	(mips_output_external): Don't depend on mips_section_threshold.
	(make_temp_file): Define P_tmpdir when __MSDOS__.  Malloc filename
	string.  Don't unlink temp file when __MSDOS__.
	(mips_asm_file_start): Delete TARGET_NAME_REGS support.
	(mips_asm_file_end): Unlike temp file when __MSDOS__.
	(mips_declare_object): Don't test mips_sections_threshold.
	(compute_frame_size, save_restore_insns, function_prologue,
	mips_expand_prologue, function_epilogue, mips_expand_epilogue):
	Add 64 bit support.
	(function_epilogue): Correctly output `#' before .set volatile.
	* mips.h (enum cmp_type): Add 64 bit support.
	(enum processor_type): Add PROCESSOR_R4600.
	(MASK_64BIT, TARGET_64BIT): New mask bit, to indicate 64 bit mode.
	(HAVE_64BIT_P, OPTIMIZATION_OPTIONS): Delete.
	(CPP_SPEC): Don't abort if not defined.
	(CC1_SPEC): -mips1 and -mips2 imply -mfp32. -mips3 implies -mfp64.
	(CPP_SPEC): Define __SIZE_TYPE__, __PTRDIFF_TYPE__, and __mips.
	(BITS_PER_WORD, UNITS_PER_WORD, INT_SIZE_TYPE, LONG_TYPE_SIZE,
	LONG_LONG_TYPE_SIZE, POINTER_SIZE, POINTER_BOUNDARY,
	PARM_BOUNDARY, EMPTY_FIELD_BOUNDARY, HARD_REGNO_NREGS,
	CONST_OK_FOR_LETTER_P, STACK_ARGS_ADJUST, FUNCTION_PROFILER,
	TRAMPOLINE_TEMPLATE, TRAMPOLINE_SIZE, TRAMPOLINE_ALIGNMENT,
	INITIALIZE_TRAMPOLINE, CASE_VECTOR_MODE, MOVE_MAX,
	TRULY_NOOP_TRUNCATION, Pmode, FUNCTION_MODE,
	ASM_OUTPUT_ADDR_VEC_ELT, ASM_OUTPUT_ADDR_DIFF_ELT,
	ASM_OUTPUT_REG_PUSH, ASM_OUTPUT_REG_POP): Add 64 bit support.
	(MAX_BITS_PER_WORD, MAX_UNITS_PER_WORD, UNITS_PER_FPREG,
	MAX_INT_TYPE_SIZE, MAX_WCHAR_TYPE_SIZE, MAX_LONG_TYPE_SIZE,
	MAX_MOVE_MAX): Define.
	(INDEX_REG_CLASS): NO_REGS not GR_REGS.
	(CONST_DOUBLE_OK_FOR_LETTER_P): Don't examine CONST_DOUBLE
	internals.
	(PREFERRED_RELOAD_CLASS): Return CLASS if it isn't ALL_REGS.
	(TRANSFER_FROM_TRAMPOLINE, ASM_OUTPUT_CASE_LABEL): Delete.
	(REGNO_OK_FOR_INDEX_P, REG_OK_FOR_INDEX_P): Redefine to 0.
	(GO_IF_LEGITIMATE_ADDRESS): Delete redundant code0 == REG test.
	(ENCODE_SECTION_INFO): Don't test mips_section_threshold.
	(CONST_COSTS): CONST_INT have cost 0 not CONSTS_N_INSNS (0).  Pass
	address not MEM to eliminate_constant_term.  Add 64 bit support.
	(MEMORY_MOVE_COST, ASM_OUTPUT_DOUBLE_INT): Define.
	(EXTRA_SECTIONS): Delete in_last_p1.
	(SELECT_RTX_SECTION): Delete division by BITS_PER_UNIT.
	(NO_BUILTIN_SIZE_TYPE, NO_BUILTIN_PTRDIFF_TYPE): Define.
	(SIZE_TYPE, PTRDIFF_TYPE): Add 64 bit support.
	* mips.md (cpu): Add r4600.
	(define_function_unit): Correct numerous errors.  Add r4600.
	(adddi3*, subdi3*, mulsidi3, umulsidi3, negdi2*, one_cmpdl2*,
	nordi2*, anddi2*, iordi3*, xordi3*, movdi*, ashldi3*, ashrdi3*,
	lshrdi3*, seq, sne, sgt, sge, slt, sle, sgtu, sgeu, sltu, sleu,
	indirect_jump, tablejump, call*, call_value*): Add 64 bit support.
	(adddi3_internal_3, addsi3_internal_2, subdi3_internal_3,
	subsi3_internal_2, muldi3, muldi3_internal, divmoddi4, udivmoddi4,
	divdi3, moddi3, udivdi3, umoddi3, absdi3, ffsdi2,
	negdi2_internal_2, anddi3_internal1, xordi3_immed, truncdisi2,
	truncdihi2, truncdiqi2, zero_extendsidi2,
	zero_extendsidi2_interal, zero_extendhidi2, zero_extendqidi2,
	extendsidi2, extendhidi2, extendhidi2_internal, extendqidi2,
	extendqidi2_insn, fix_truncdfdi2, fix_truncsfdi2, floatdidf2,
	floatdisf2, fixuns_truncdfdi2, fixuns_truncdfsi2,
	ashldi3_internal4, ashrdi3_internal_4, lshrdi3_internal4, cmpdi,
	tstdi, branch_zero_di, branch_equality_di, seq_di_zero, seq_di,
	sne_di_zero, sne_di, sgt_di, sge_di, slt_di, sle_di_const,
	sle_di_reg, sgtu_di, sgeu_di, sltu_di, sleu_di_const, sleu_di_reg,
	indirect_jump_internal1, indirect_jump_internal2,
	tablejump_internal1, tablejump_internal2): New patterns.
	(mulsi3): Add missing mips_move_1word parameter.
	(mulsi3+1): Don't split on r4000.
	(divmodsi4, udivmodsi4, udivsi3, umodsi3): Correct lengths.
	(divsi3, modsi3, udivsi3, umodsi3): Allow constant operands.
	(sqrtdf2, sqrtsf2): Correct type attribute.
	(abssi2): Add mips2 support.
	(movsi_unaligned, movsi_ulw, movsi_usw): Comment out.
	(movsf, movdf): Use F not E.
	(cmpdf, cmpsf, branch_fp*, s{eq,ne,lt,le,gt,ge}_[ds]f): Depend on
	TARGET_HARD_FLOAT.
	* va-mips.h: Add 64 bit support.

Thu Jan 13 06:14:17 1994  Paul Eggert  (eggert@twinsun.com)

	* c-parse.in (maybe_attribute): Allow multiple __attribute__
	clauses on a declaration.

Thu Jan 13 06:01:09 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* a29k.h (REG_CLASS_CONTENTS): Fix problems with last word of
	register set in some classes.

	* a29k.h (MEMORY_MOVE_COST): New macro.

Thu Jan 13 05:42:30 1994  Torbjorn Granlund  (tege@adder.cygnus.com)

	* config.sub: Fix typo in -hiux* case.

Wed Jan 12 13:25:12 1994  Per Bothner  (bothner@kalessin.cygnus.com)

	* dbxout.c (dbxout_range_type):  If the range has a base type
	(TREE_TYPE), emit it, even if that is some other integer type.

Wed Jan 12 06:02:23 1994  David Edelsohn  (edelsohn@npac.syr.edu)

	* rs6000.h (MASK and TARGET): Change POWERPCSQR to PPCFPX to
	describe both fsqrt and fsel.
	(TARGET_SWITCHES): powerpc64 implies ppcfpx.
	* rs6000.c (rs6000_override_options): Change POWERPCSQR to PPCFPX.
	* rs6000.md (sqrtsf2, sqrtdf2): Change POWERPCSQR to PPCFPX.
	(maxsf3, minsf3, maxdf3, mindf3): New patterns using fsel instruction.

Tue Jan 11 19:14:31 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* a29k.c (output_prolog): Update debug reg map when 
	we have -mkernel-registers.

	* fold-const.c (fold, truth_andor): Don't apply distributive
	law when it would change evaluation order.
	Clean up code a bit to improve flow.

Mon Jan 10 19:37:27 1994  David Robinson (drtr@mail.ast.cam.ac.uk)

	* expr.c (emit_move_insn_1): Call gen_realpart and gen_imagpart
	instead of gen_lowpart and gen_highpart.
	* function.c (assign_parms): Likewise.
	* optabs.c: Remove redundant prototype for gen_highpart.

Mon Jan 10 19:14:07 1994  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* jump.c (comparison_dominates_p): NE is dominated by LT, GT, LTU
	and GTU.

Mon Jan 10 19:06:57 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* emit-rtl.c (gen_{real,imag}part): Extract value from
	CONCAT directly.
	(gen_lowpart_common, gen_highpart): Don't do it here.

	* cse.c (simplify_relational_operation): Don't do anything with CC0
	in addition to MODE_CC values.

	* expr.c (protect_from_queue): If (MEM (QUEUED ...)), modify a
	new MEM instead of the one we were passed.

	* i386/linux.h: Update banner, reformat comments.
	(STARTFILE_SPEC, GPLUSPLUS_INCLUDE_DIR): No longer conditional
	on CROSS_COMPILER.
	* Makefile.in (gcc.o, cccp.o): No longer define TOOLDIR.

	* regclass.c (globalize_reg): New function.
	(init_reg_sets_1): Don't handle global regs here.
	* varasm.c (make_decl_rtl): Call globalize_reg, not init_reg_sets_1.

	* a29k.c (print_operand, case 'F'): If we have to do the last
	prolog insn, give that priority for an unfilled delay slot.

	* function.c (preserve_rtl_expr_result): New function.	
	* expr.c (exand_expr, case RTL_EXPR): Call it.

Mon Jan 10 13:43:04 1994  Jim Wilson  (wilson@cygnus.com)

	* sched.c (new_insn_dead_notes): Compare registers with rtx_equal_p.

	* Makefile.in (Makefile, stmp-fixinc, deduced.h, stmp-fixproto):
	Execute shell scripts with $(SHELL).
	* config/x-lynx (SHELL): Define to /bin/bash.

Sun Jan  9 22:31:00 1994  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.md (special indexed fpstores): Fix assorted typos.

Sun Jan  9 04:34:17 1994  James Van Artsdalen  (james at bigtex.cactus.org)

	* jump.c (follow_jumps): Don't follow tablejumps.

	* Makefile.in (install-headers-cpio): Run cpio in include-dir.

Sat Jan  8 14:54:06 1994  Doug Evans  (dje@cygnus.com)

	* toplev.c (rest_of_compilation): jump_optimize can change max_reg_num
	so rerun reg_scan before calling cse_main.

Fri Jan  7 20:34:14 1994  Torbjorn Granlund  (tege@adder.cygnus.com)

	* config/alpha/alpha.h (RTX_COSTS): Return actual costs for
	multiplication.

Tue Jan  4 13:44:09 1994  Jim Wilson  (wilson@cygnus.com)

	* sdbout.c (sdbout_symbol): Handle variables at zero offset from
	frame pointer.

Tue Jan  4 07:35:05 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* tree.c (substitute_expr): Don't abort for RTL_EXPR and
	SAVE_EXPR; just do nothing.

Tue Jan  4 00:52:15 1994  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.md (andsi3): Use "?" instead of "!" to avoid losing
	in some cases.

Mon Jan  3 16:59:34 1994  Torbjorn Granlund  (tege@adder.cygnus.com)

	* jump.c (thread_jumps): Don't thread to loop label;
	create new label before loop instead.
	(thread_jumps): Rename argument `verbose' -> `flag_before_jump'.
	* toplev.c (rest_of_compilation): Pass 1 for flag_before_jump
	first time we call thread_jumps.

	* c-typeck (build_binary_op, case *_DIV_EXPR): Use same shorten
	condition as for *_MOD_EXPR.

Mon Jan  3 08:00:16 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fold-const.c (truth_value_p): New function.
	(fold): Use it to see when we should make a TRUTH_{AND,OR}_EXPR.
	(fold, case TRUTH_{AND,OR,ANDIF,ORIF}_EXPR): Use distributive
	law on expressions such as (A && B) || (A && C).

Sun Jan  2 08:14:38 1994  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* cse.c (simplify_relational_operation): Correct declaration of
	variables holding parts of constants.

Fri Dec 31 06:27:57 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* toplev.c (main): Turn on -fomit-frame-pointer if it is safe.
	Add -O3, which turns on -finline-functions.
	* a29k.h, alpha.h, clipper.h, h8300.h, m88k.h, pa.h, romp.h, rs6000.h:
	Define CAN_DEBUG_WITHOUT_FP; delete OPTIMIZATION_OPTIONS.
	* sh.h, sparc.h: Likewise.
	* arm.h: Delete OPTIMIZATION_OPTIONS.
	* h8300.h: Define NO_FUNCTION_CSE and CAN_DEBUG_WITHOUT_FP;
	delete OVERRIDE_OPTIONS.
	* i960.h (OPTIMIZATION_OPTIONS): Just turn on machine-specific opts.
	(CAN_DEBUG_WITHOUT_FP): Define.
	* mips.h (CAN_DEBUG_WITHOUT_FP): Define.
	(OPTIMIZATION_LEVELS): Just set MASK_GPOPT.

	* cse.c (simplify_relational_operation): Rewrite and simplify.
	Add case when we can simplify A-B for compare of A and B.

	* combine.c (added_links_insn): New variable.
	(distribute_links): Set it.
	(if_then_else_cond): New function.
	(try_combine): Return added_links_insn if it is earlier than what
	we would otherwise return.
	(subst): Generalize (OP X Y) to call if_then_else_cond
	instead of only checking for an explicit IF_THEN_ELSE.
	(subst, case IF_THEN_ELSE): When converting to a MULT, simplify
	the MULT before putting it into OP.
	(subst, case AND): Don't make IF_THEN_ELSE here; now made in
	generic case earlier.

	* combine.c (force_to_mode): Add new parm JUST_SELECT; all
	callers changed.

Wed Dec 29 18:05:00 1993  Leonid Baraz  (lbaraz@iil.intel.com)

	* fold-const.c (fold, case PLUS_EXPR): Add a missing test of 
	flag_fast_math.

Wed Dec 29 06:52:07 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* cse.c (simplify_binary_operation, case MULT): Don't convert
	to ASHIFT if still generating RTL.

Mon Dec 27 22:15:55 1993  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: Do not fix <sundev/ipi_error.h>, because SunOS
	sed can not handle the very large macro it contains.

Mon Dec 27 06:28:48 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* alpha.md (maxsf3, minsf3): Correct numerous errors.

	* combine.c (subst, case MINUS): Allow some FP simplifications 
	if -ffast-math.
	(reversible_comparison_p): FP comparisons reversible with -ffast-math.
	* cse.c (simplify_binary_operation, fold_rtx): Allow some FP
	simplications with -ffast-math.
	(simplify_relational_operation): FP comparisons can be reversed
	if -ffast-math is specified.
	* fold-const.c (fold): Simplify more FP ops if -ffast-math.
	* jump.c (can_reverse_comparison_p): Return 1 if -ffast-math.
	* loop.c (get_condition): Can reverse comparison if -ffast-math.

	* alpha.c (ior_operand): New function.
	* alpha.h (PREDICATE_CODES): Add ior_operand.
	* alpha.md (iordi3): Use ornot for some constant cases.

Sun Dec 26 07:55:26 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (do_tablejump): Call emit_cmp_insn with likely-constant
	as second operand.

	* jump.c (jump_optimize): When deleting an insn after a jump,
	update reallabelprev since it might point to the deleted insn.

	* cse.c (count_reg_usage): Don't count a register used within
	a SET that sets it.
	(delete_dead_from_cse): Pass new parm to count_reg_usage.

	* cse.c (fold_rtx, case PLUS): If we have (plus A B), A is
	equivalent to a negative constant, and the negated constant is in
	register, convert to (minus A C) where C is the register containing
	the negated constant.

Sat Dec 25 23:47:01 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.h (DBX_BLOCKS_FUNCTION_RELATIVE): Define.
	(ASM_OUTPUT_SOURCE_LINE): Likewise.
	(DBX_FUNCTION_FIRST): Likewise.

	* pa.h (FRAME_POINTER_REGNUM, ARG_POINTER_REGNUM): Change to %r3
	for compatability with HP compilers.

	* pa.h (READONLY_DATA_SECTION): Re-enable use of $LIT$.

Sat Dec 25 06:05:28 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* emit-rtl.c (gen_reg_rtx): Only clear part of arrays we aren't
	going to copy into.

	* expr.c (expand_expr, case CONSTRUCTOR): If have a target,
	don't build constructor into memory.

	* expr.c (expand_expr, case ARRAY_REF): Remove uses of *_type_node
	and simplify folding a reference to a character in a STRING_CST.

	* a29k.c, a29k.h: Rename R_ACC to R_ACU to not conflict with access.h.

	* m68k/crds.h (HAVE_VPRINTF): Delete from here.
	* m68k/xm-crds.h (HAVE_VPRINTF): Define.
	* m68k/dpx2.h (USG): Delete from here (already in xm.h file).

	* print-tree.c (print_node, print_node_brief): Say something
	when TREE_CONSTANT_OVERFLOW is set.

	* loop.c (check_dbra_loop): Fix error in previous change.

	* combine.c (set_nonzero_bits_and_sign_copies, nonzero_bits):
	Fix errors in SHORT_IMMEDIATES_SIGN_EXTEND code.

	* alpha.h (FUNCTION_ARG): Pass complex float in float regs.

	* fold-const.c (fold, case EQ_EXPR, NE_EXPR): If COMPLEX_TYPE
	and at least one arg is a COMPLEX_EXPR, split into a logical
	operation on the real and imaginary parts.

	* c-typeck.c (common_type): For COMPLEX_TYPE, return one of the
	original types if is the desired common type.
	(build_binary_op): Use SHORT_COMPARE code even if complex.	

	* c-decl.c (grokdeclarator): Properly validate __complex__ and
	create the various kinds of complex integer types.

	* cse.c (simplify_unary_operations): Check that operations really
	are double-word before doing them.

Fri Dec 24 15:21:16 1993  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)

	* cccp.c (read_name_map, read_filename_string, open_include_file):
	New functions.
	(struct file_name_list): New members: name_map, got_name_map.
	(main, path_include, do_include, do_once): Set got_name_map.
	(do_include): Use open_include_file instead of open.  Add new
	parameter to lookup_import calls.
	(lookup_import): New parameter searchptr.  Call open_include_file
	instead of open.

	* expr.c (convert_modes): Can't truncate REG with gen_lowpart if
	TRULY_NOOP_TRUNCATION doesn't allow it.

Fri Dec 24 14:36:53 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* cse.c (cse_insn): Set "cse_jumps_altered" when collapsing
	a switch statement into an unconditional jump.
	* toplev.c (rest_of_compilation): Rerun jump_optimize
	before the second CSE pass.

Fri Dec 24 05:34:38 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* cse.c (simplify_binary_operation, case PLUS, MINUS):
	Simplify such things as (X >> 1) - X.

	* alpha.md (define_attr type): Add new type ISUBR.
	(divmod): Set to type ISUBR.
	* alpha.c (output_prolog): Need GP if type ISUBR.

	* reload.c (push_reload, find_reloads): Reload inside a paradoxical
	SUBREG of MEM except don't force a reload unless the inner mode
	is narrower than BIGGEST_ALIGNMENT.

	* c-typeck.c (check_init_type_bitfields): Check recursively inside
	arrays and records.

	* c-parse.in (attrib): Allow expressions instead of constants.
	* c-common.c (decl_attribute): Verify that alignment and format
	argument numbers are all integer constants.
	Continue on to next attribute if one is in error.

	* cse.c (simplify_binary_operation): Can fold multi-word
	operations when first is CONST_INT.
	(simplify_binary_operation, case PLUS, MINUS): Don't call
	plus_constant when OP0 is VOIDmode.

	* c-typeck.c (pop_init_level): Don't abort if have incomplete array
	type inside some other type.

Thu Dec 23 22:06:21 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* jump.c (thread_jumps): Delete redundant loop termination test.

	* cse.c (simplify_binary_operation, case *SHIFT*): Reduce arg1 as
	defined by SHIFT_COUNT_TRUNCATED.

	* config/pa/pa.c (Several places): Declare values from INTVAL(x) as
	HOST_WIDE_INT.
	(uint32_operand): New function.
	(output_block_move): Change unroll threshold from 64 to 32.
	(compute_movstrsi_length): Corresponding change.
	(print_operand): Don't call debug_rtx, just abort.

	* config/pa/pa.h (FUNCTION_INCOMING_ARG): Delete definition.
	(RTX_COSTS) [PLUS]: Rewrite.
	(output_scc_insn): Delete.
	(output_floatsisf2): Delete.
	(output_floatsidf2): Delete.
	(PREDICATE_CODES): Define, but leave within #if 0 for now.

	* config/pa/pa.md (iorscc): New recognizer.
	2 new recognizers for sub;subb.  1 new recognizer for addi;subb.
	(movstrsi): Remove predicates.  Set inline threshold to 8.
	(umulsidi3): Change predicates to nonimmediate_operand.
	New recognizer for multiply-by-immediate.
	(andsi3): Add `!' for register alternative.
	(vdepi_ior, vdepi_and): New recognizers.
	(vextru rx,1,ry, vextrs rx,1,ry): New recognizers.

	* config/pa/pa.c (initialize_pic): Delete.
	(finalize_pic): Use PIC_OFFSET_TABLE_REGNUM rather than 19.
	* config/pa/pa.h (CONDITIONAL_REGISTER_USAGE): Never make
	PIC_OFFSET_TABLE_REGNUM fixed.
	(INITIALIZE_PIC): Delete.
	* config/pa/pa.md (call, call_value): If PIC, emit USE for for
	PIC_OFFSET_TABLE_REGNUM.  Use PIC_OFFSET_TABLE_REGNUM rather than 19.

Thu Dec 23 18:51:12 1993  Jim Wilson  (wilson@cygnus.com)

	* local-alloc.c (optimize_reg_copy_1): After decreasing sregno's
	reg_live_length, correct it if it is now obviously too small.

	* loop.c (check_dbra_loop): Don't reverse loop if there is a
	single memory store to an invariant address.

	* gcc.c (translate_options): Skip arguments of -B, -b, -V, -x,
	and -Xlinker options.

	* configure (riscos-*-*): Use fixincludes instead of fixinc.mips.
	* fixinc.mips: Delete file.
	* fixincludes: Merge in changes from fixinc.mips.  Fix identifiers
	host_mips, mips, MIPSE[LB], R[34]000, SYSTYPE_*.  Fix size_t uses
	in stddef.h, memory.h, unistd.h.  Fix /**/ in bsd43/bsd43_.h.

Thu Dec 23 18:28:02 1993  Richard Earnshaw  (rwe11@sticte.cl.cam.ac.uk)

	* expmed.c (expand_mult): Preserve useful sub-expressions when
	 expanding a synthesized mult.

Thu Dec 23 18:21:34 1993  Russ Noseworthy  (jrnosewo@ral.rpi.edu)

	* configure (m68k-wrs-vxworks): New, same as m68k-sun-sunos*.

Thu Dec 23 09:03:30 1993  Phil Nelson  (phil@cs.wwu.edu)

	* ns32k.h (ASM_OUTPUT_ADDR_DIFF_ELT): Use .long, not .double.

Thu Dec 23 07:30:24 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* Makefile.in (libgcc.a): Allow chmod of tmpcopy directory to
	fail since it can be empty.

	* gcc.c (default_compilers, gnat1): Don't write -gnatb.

	* c-common.c (T_ST): Fix typo in last change.

	* expr.c (expand_expr, case MINUS_EXPR): When expanding an
	initializer, use plus_constant as appropriate.

	* collect2.c (main): When searching compiler directories, 
	look for ld_suffix, not full_ld_suffix.

	* a29k/unix.h (TARGET_DEFAULT): Update to use new values.

	* Makefile.in (GCC_CFLAGS): Add -I./include.

Thu Dec 23 06:57:39 1993  Chip Salzenberg  (chip@fin.uucp)

	* Makefile.in (ENQUIRE_CFLAGS): Omit -DNO_STDDEF.
	(USE_ALLOCA): Allow ${ALLOCA} to begin with a dash.
	(OBJC, OBJECTIVE-C): Depend on objc-runtime.
	(objc-headers): Make include directory if missing.

	* xm-svr3.h (HAVE_VPRINTF): Define.

	* cse.c (delete_reg_equiv): Don't reference elements of
	REG_{NEXT,PREV}_EQV that are not defined.

Wed Dec 22 14:21:49 1993  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)

	* dbxout.c (dbxout_parms): For parameter passed by invisible
	reference, use DECL_INCOMING_RTL if DECL_RTL is a pseudo-reg address.

	* xcoffout.h (DBX_FINISH_SYMBOL): Get variable name from DECL_RTL
	instead of from DECL_ASSEMBLER_NAME.

	* sched.c (priority): Handle INSN_DELETED_P insns, in addition to
	insns which were deleted by being turned into notes.

	* expr.c (expand_expr, NEGATE_EXPR case): Use subtarget in
	recursive call, not target.

	* fixproto (required_unistd_h): Delete getgroups from list.

	* fix-header.c (missing_extern_C_count): Ifdef out.
	(write_lbrac, recognized_function, read_scan_file, write_rbrac):
	Likewise.

	* cccp.c (main): Cast alloca result to char * to avoid warning.

	* unroll.c (find_splittable_givs): For rewritting illegal init
	insn, use force_operand instead of emit_iv_add_mult.

Wed Dec 22 13:44:17 1993  Ron Guilmette  (rfg@netcom.com)

	* tree.c (chainon):  Detect more circularities.

	* enquire.c (main):  Move declarations of SIZE and TOTAL to
	where they won't cause "unused" warnings when NO_MEM is defined.
	(promotions):  Explicitly declare return type (to avoid warnings).
	Always return a value.

Wed Dec 22 13:39:40 1993  Chip Salzenberg  (chip@fin.uucp)

	* Makefile.in (gcc.o): Define DEFAULT_TARGET_VERSION.
	* gcc.c (compiler_version): New variable.
	(spec_version): Initialize from DEFAULT_TARGET_VERSION.
	(main): Distinguish COMPILER_VERSION from TARGET_VERSION.
	(process_command): Use COMPILER_VERSION for %v.
	Guard against a COMPILER_VERSION that lacks a minor.

Wed Dec 22 07:47:17 1993  Greg Gilley  (ggilley@adobe.com)

	* gcc.c (default_compilers): Treat ".cpp" as C++.
	* cccp.c (main): Strip off ".cpp" extension.
	* toplev.c (strip_off_ending): Likewise.

Wed Dec 22 07:26:26 1993  Rafal Pietrak  (Rafal_Pietrak@camk.edu.pl)

	* Makefile.in (install-headers, install-headers-tar): Correctly
	handle directories when $(libsubdir) is a relative path.

Wed Dec 22 07:12:06 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-common.c (T_ST): New macro.
	(scan_char_table): With s, c and [, allow `a' flag.
	(print_char_table): Accept Z and m codes.
	(check_format_info): Handle the `a' flag.

Tue Dec 21 21:09:38 1993  Rainer Orther  (ro@TechFak.Uni-Bielefeld.de)

	* fixincludes (rpc/auth.h, rpc/xdr.h): Declare structures before
	using them in prototypes, for Irix 4.0.5.
	(rpc/rpc.h): Avoid a nested comment on Ultrix 4.3.

Tue Dec 21 18:41:36 1993  Doug Evans  (dje@canuck.cygnus.com)

	* configure (cpp_md_flags): Rename to md_cppflags.
	(MD_CPP, MD_DEPS): Set appropriately for native or cross build.
	(MD_FILE): Edit in place.
	* Makefile.in (MD_FILE rule): Depend on $(MD_DEPS).  Invoke $(MD_CPP).

Tue Dec 21 17:37:20 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-tree.h (VTABLE_NAME): No def with NO_{DOLLAR,DOT} defined.
	(VTABLE_NAME_P): Use it instead of VTABLE_NAME_FORMAT.

Tue Dec 21 13:25:39 1993  Jim Wilson  (wilson@cygnus.com)

	* sparc.h (FUNCTION_ARG_PASS_BY_REFERENCE): Also pass Pascal arrays
	by reference.

	* sched.c (sched_analyze): For CALL_INSN followed by
	NOTE_INSN_SETJMP note, make it depend on all registers not just
	hard registers, and add a REG_DEAD -1 note.
	(unlink_notes): Don't save away NOTE_INSN_SETJMP notes.
	(schedule_block): After scheduling CALL_INSN, check for REG_DEAD
	-1 note.  If find it, delete it, and output a NOTE_INSN_SETJMP note.

	* rtlanal.c (replace_regs, case REG): Return copies of SUBREGs, to
	avoid invalid sharing.

Tue Dec 21 13:07:14 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.c (output_function_prologue): Use ASM_GENERATE_INTERNAL_LABEL
	rather than generating one on its own.

	* pa.h (ASM_GENERATE_INTERNAL_LABEL): Always use L$ as the prefix
	for internal labels.
	(ASM_OUTPUT_INTERNAL_LABEL): Likewise.

Mon Dec 20 19:10:16 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* c-typeck.c (struct initializer_stack): New field ELEMENTS.
	(start_init, finish_init): Save and restore constructor_elements.

	* emit-rtl.c (gen_lowpart_common): Return a new hard reg even
	if not valid in MODE if the input REG is not valid in its mode.

	* rs6000.md (divsi3): Correct logic for when we call force_reg.
	(modsi3): Ensure operands[2] is a CONST_INT; include REG in
	predicate.

Thu Dec 16 16:14:53 1993  Jeffrey A. Law  (law@mole.gnu.ai.mit.edu)

	* pa.c (compute_frame_size): Remove implicit assumption that %r4
	is the frame pointer.

	* pa.c (output_function_prologue): Reverse last change.  Output
	both the function label and the .PROC here.

	* pa.h (ASM_DECLARE_FUNCTION_NAME): Do not output the function
	label or the .PROC here.

Thu Dec 16 11:34:48 1993  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: Do not preserve _HIDDEN_VA_LIST in stdio.h.

Wed Dec 15 13:48:25 1993  Mike Stump  (mrs@cygnus.com)

	* cp-decl.c (flag_conserve_space): New language specific flag to
	tell the compiler to use .common when possible.  Reduces the size of
	.o files.
	* cp-decl.c (duplicate_decls): Copy DECL_COMMON from the olddecl.
	* cp-decl.c (start_decl): Set DECL_COMMON appropriately.
	* cp-decl.c (finish_decl): Use flag_conserve_space, instead of
	flag_no_common.
	* cp-decl2.c (flag_conserve_space, lang_f_options): New flag.
	* toplev.c (lang_options): New -fconserve-space flag.
	* tree.h (DECL_COMMON): New flag.
	* tree.h (tree_decl): New common_flag.
	* varasm.c (assemble_variable): Use DECL_COMMON to help determine if
	an object can be put in .common.
	* c-decl.c (start_decl): Set DECL_COMMON to 1.

Wed Dec 15 19:04:55 1993  Conrad Kimball  (cek@sdc.boeing.com)

	* Makefile.in (cccp.o, stmt-proto): Use $(includedir).

Wed Dec 15 18:44:03 1993  Leonid Baraz  (lbaraz@iil.intel.com)

	* tree.c (copy_node): Handle length of INTEGER_CST like make_node.

Wed Dec 15 18:37:29 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* final.c (profile_function): Set ALIGN properly.

	* protoize.c: Remove declarations of setjmp and longjmp.

Wed Dec 15 18:31:01 1993  Paul Eggert  (eggert@twinsun.com)

	* c-typeck.c (missing_braces_mentioned): Renamed from
	`partial_bracket_mentioned'.
	(start_init): Clear `missing_braces_mentioned'.
	(warning_init): New function.
	(push_init_level): Optionally warn about missing braces.
	When warning about braces around scalars, identify which scalars.

Wed Dec 15 18:21:29 1993  Richard Henderson  (richard@viz.tamu.edu)

	* mips/iris3.h (LIB_SPEC): Use shared libc when not profiling,
	not debugging, and no "-static".

Wed Dec 15 18:14:31 1993  Doug Evans  (dje@canuck.cygnus.com)

	* expr.c (expand_builtin): Allow __builtin_next_arg to be used
	in varargs functions.

Wed Dec 15 18:09:57 1993  Kaveh R. Ghazi  (ghazi@noc.rutgers.edu)

	* Makefile.in (gnucompare, gnucompare3): New targets.

Tue Dec 14 00:19:44 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.c (output_call): Put temporary label after the
	RP adjustment.  "- 8" adjustment is no longer necessary.

	* x-pa (CC): Do not use absolute path to gcc.

	* pa.c (output_function_prologue): Do not output the .PROC directive
	here.

	* pa.h (ASM_DECLARE_FUNCTION_NAME): Emit the .PROC immediately
	after the function's label.

	* pa.h (ASM_FILE_START): Emit a .file directive at the beginning
	of the output file if debug symbols are being generated.

	* pa.h (MAX_OFILE_ALIGNMENT): Define appropriately for the PA.

	* pa-ghiux.h (TARGET_DEFAULT): Enable TARGET_JUMP_IN_DELAY and
	TARGET_GAS.
	* pa1-ghiux.h (TARGET_DEFAULT): Likewise.

	* pa-ghpux.h (TARGET_DEFAULT): Enable TARGET_JUMP_IN_DELAY.
	* pa-gux7.h (TARGET_DEFAULT): Likewise.
	* pa-utahmach.h (TARGET_DEFAULT): Likewise.
	* pa.h (TARGET_DEFAULT): Likewise.
	* pa1-ghpux.h (TARGET_DEFAULT): Likewise.
	* pa1-utahmach.h (TARGET_DEFAULT): Likewise.
	* pa1.h (TARGET_DEFAULT): Likewise.

	* pa.h (LEGITIMATE_CONSTANT_P): Remove hack for function addresses.
	* pa.c (secondary_reload_class): Function addresses no longer
	need secondary reloads.
	(emit_move_sequence): Special handling of function addresses is
	no longer needed.
	* pa.md (lo_sum of a function address): Use short form as we have
	no intention of supporting MPE external calls.

Mon Dec 13 20:58:58 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (subst, case MINUS): Canonicalize (minus A (plus A B)).

Mon Dec 13 19:09:42 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* mips/iris4.h (ASM_OUTPUT_ASCII): Wrap in `do { ... } while (0)'.
	* clipper/clix.h, fx80/fx80.h, i860/bsd.h, m68k/3b1.h: Likewise.
	* m68k/amix.h, m68k/crds.h, m68k/hp320.h, m68k/m68kv4.h: Likewise.
	* m68k/mot3300.h, m68k/sgs.h, m68k/tower-as.h: Likewise.
	* ns32k/encore.h, tahoe/harris.h, tahoe/tahoe.h: Likewise.
	* vax/vaxv.h,we32k/we32k.h: Likewise.

Mon Dec 13 03:28:02 1993  Doug Evans  (dje@canuck.cygnus.com)

	* configure (sparc-*-solaris2): Fix typo in extra_parts.

Sun Dec 12 08:19:38 1993  Chip Salzenberg  (chip@fin.uucp)

	* cccp.c (main): Combine tests of single-character suffixes.
	(deps_output): Different second parameter: SPACER determines
	meaning of first argument (target, dependency, literal text).
	Wrap output correctly.

Sun Dec 12 07:54:07 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* tree.c (type_hash_canon): Clean up obstack usage a bit.

	* recog.c (indirect_operand): Verify mode of OP is correct.

	* calls.c (expand_call, store_one_arg): Properly push and pop
	temporary level around expression evaluations.

	* configure: Handle EXTRA_PARTS and EXTRA_OBJS like the others.
	(i[34]86-*-osfrose*): Replace t-osfrose with extra_objs assignment.
	(i[34]86-*-sco*): Likewise for t-sco.
	(i[34]86-*-isc*): Likewise for t-isc.
	(i[34]86-ibm-ai*): Likewise for t-aix.
	(i[34]86-*-solaris2, i860-alliant-*): Add extra_parts.
	(sparc-*-solaris2*, m88k-*): Likewise.
	(mips-dec-osfrose*): Add extra_objs.
	(clipper-intergraph-clix*): Replace t-clix with extra_headers and
	extra_parts.
	* Makefile.in (halfpic.o): New rule; copied from t-osfrose.
	* h8300/t-h8300: Delete null LIB2FUNCS_EXTRA.
	* i386/t-sol2, i860/t-fx2800, m88k/t-dgux-gas: Delete EXTRA_PARTS.
	* m88k/t-dgux, m88k/t-m88k, m88k/t-sysv4, sparc/t-sol2: Likewise.
	* m88k/t-luna: Don't require bash.
	* mips/t-osfrose: Delete EXTRA_OBJS and halfpic.o rule.
	* clipper/t-clix, i386/t-aix, i386/t-isc, i386/t-osfrose, i386/t-sco:
	Deleted; no longer needed.

Sun Dec 12 06:47:14 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* Version 2.5.7 released.

Sun Dec 12 06:18:33 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* function.c (thread_prologue_and_epilogue_insns): When constructing
	USE chain, set both NEXT_INSN and PREV_INSN links.  Also, preserve
	order of USE insns in chain.

Sun Dec 12 06:13:51 1993  DJ Delorie  (dj@ctron.com)

	* configure.bat: Update to relect recent changes elsewhere.
	* objc/makefile.dos: Likewise.

Sat Dec 11 18:09:50 1993  Per Bothner  (bothner@cygnus.com)

	* dbxout.c (dbxout_type):  The "base type" of a SET_TYPE is its
	DOMAIN_TYPE, not its TREE_TYPE.
	* dwarfout.c (output_type): Likewise.

Sat Dec 11 07:36:57 1993  David Rifkind  (dave@yarc.com)

	* rs6000.md: Add a few missing new nmemonics.

Sat Dec 11 06:57:55 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* cccp.c (INPUT_STACK_MAX): Double size.

	* integrate.c (initialize_for_inline): Handle CONCAT when setting up
	parmdecl_map.

	* rs6000.md (modsi3): Reject REG in predicate to avoid undefined
	reference and extra pseudo creation if will fail.

Fri Dec 10 10:03:36 1993  Mike Stump  (mrs@cygnus.com)

	* toplev.c (lang_options): Change -fnodollars-in-identifiers to
	-fno-dollars-in-identifiers to match docs.

Fri Dec 10 15:42:02 1993  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)

	* c-lex.c (yylex): When reading malformed floating point constant,
	avoid printing error more than once, and avoid passing malformed
	number to subsequent atof call.

Fri Dec 10 06:03:35 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.c (easy_fp_constant): Use input_operand to see if
	each word can be loaded in one insn.

	* rs6000.md: Change numerous occurrences of TARGET_POWERPC
	to ! TARGET_POWER and make related changes.

	* rs6000.md (modsi3): Rework to operate correctly for both POWER
	and PowerPC.

Thu Dec  9 16:19:05 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-tree.h (OPERATOR_TYPENAME_P): Define outside of
	NO_{DOLLAR,DOT} macro checks, so it always gets defined.
	(VTABLE_NAME_P): Define for NO_DOT && NO_DOLLAR_IN_LABEL.

Wed Dec  8 05:46:26 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* flow.c (mark_used_regs, case CLOBBER): Refine previous change
	to just look at the address of a MEM inside a CLOBBER.

	* fold-const.c (fold, case *_{DIV,MOD}_EXPR): When using
	distributive law, take care when C2 is negative.

Tue Dec  7 08:45:59 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* flow.c (mark_used_regs): Look inside a CLOBBER; it may be the only
	place regs are used if it has a stack slot that is from an inlined
	function.

Mon Dec  6 20:56:11 1993  David Rifkind  (dave@yarc.com)

	* expr.c (move_block_{to,from}_reg): Check HAVE_{load,store}_multiple
	value; don't just #idef the symbol.

Mon Dec  6 08:01:59 1993  Torbjorn Granlund  (tege@cygnus.com)

	* pa.c (hppa_legitimize_address): If we can't legitimize,
	do nothing; don't call abort.

Mon Dec  6 07:38:30 1993  Richard Earnshaw  (rwe11@cl.cam.ac.uk)

	* arm.c (output_ascii_pseudo_op): 8-bit chars should be zero-extended.
	* arm.h (ASM_OUTPUT_ASCII): Likewise.

Mon Dec  6 07:32:59 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* objc/encoding.h: Include ctype.h.

	* expr.c (expand_expr, case PLACEHOLDER_EXPR): Remove top entry 
	from PLACEHOLDER_LIST when expanding the value in it.

Mon Dec  6 05:40:38 1993  Doug Evans  (dje@cygnus.com)

	* emit-rtl.c (start_sequence): Save current sequence_rtl_expr.

Fri Dec  3 07:07:01 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* Version 2.5.6 released.

	* c-typeck.c (c_expand_return): Return if convert_for_assignment
	returns error_mark_node.

Fri Dec  3 06:42:05 1993  Arne Henrik Juul  (arnej@fm.unit.no)

	* fixincludes (stdio.h): Fix typos (missing quote) in previous change.

Fri Dec  3 06:35:57 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* gstddef.h: Define and protect against __STDDEF_H__ for Irix 5.1.

	* sparc.c (shift_operand): Delete function.
	* sparc.md (ashlsi3, ashrsi3, lshrsi3): Use arith_operand instead
	of shift_operand.  Truncate shift counts to 5 bits.

Thu Dec  2 08:11:00 1993  Stefan Rapp  (sr@irb.informatik.uni-dortmund.de)

	* loop.c (scan_loop): Correct arguments for register check.

Thu Dec  2 07:07:05 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* fixincludes: Preserve _HIDDEN_VA_LIST when changing VA_LIST to
	DUMMY_VA_LIST.  Change __va_list to __gnuc_va_list.  For AIX
	3.2.5.

Thu Dec  2 07:00:24 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* emit-rtl.c (push_topmost_sequence, end_sequence): Update
	sequence_rtl_expr from sequence_stack entry.

	* calls.c (emit_library_call): Use Pmode, not OUTMODE, when passing
	in structure address.

	* a29k.c (secondary_reload_class): Kernel regs are in same class
	as user regs.

	* a29k.md (movti split): Set CR to 3, not 1 like DImode.

Thu Dec  2 06:46:07 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* reload.c (find_reloads_toplev): Replace obsolete reference to
	BYTE_LOADS_*_EXTEND with LOAD_EXTEND_OP.

Thu Dec  2 06:39:16 1993  Jeffrey A Law  (law@snake.cs.utah.edu)

	* pa.h (ASM_STABS_OP, ASM_STABN_OP): Define.
	(ASM_FILE_END): Put a TAB before the .stabs directive.

Thu Dec  2 06:30:17 1993  David Edelsohn  (edelsohn@npac.syr.edu)

	* rs6000.md (define_function_unit): Restore ppc601 load and fpload
	timings.

Wed Dec  1 17:24:17 1993  Brendan Kehoe  (brendan@mole.gnu.ai.mit.edu)

	Wed Nov 24 06:36:10 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

        * cp-tree.c (get_decl_list): Use the DECL_NESTED_TYPENAME for the
        value we're going to paste onto CLASSTYPE_ID_AS_LIST.  This will get
        the right name for nested classes, and for templates.

	Mon Nov 29 13:09:31 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (grokdeclarator): Properly evaluate TREE_PUBLIC for
	friends.  (Fixes spurious warnings about friends being declared
	static but not used.)

	* cp-type2.c (build_functional_cast): If we got an error_mark_node
	from build_method_call, make sure EXPR_AS_METHOD is cleared out
	again, so the later checks will work properly.

	* cp-decl.c (build_enumerator): Fix logic so an enum inside a class
	that's local to a function has its enumerators end up in that
	class's list of members, not in the list for the function.

Tue Nov 30 19:26:05 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* sparc.h (STATIC_CHAIN_REGNUM): Use %g2; %g1 is reserved
	for prologue.
	(TRAMPOLINE_TEMPLATE, INITIALIZE_TRAMPOLINE): Swap useage of %g1
	and %g2.

	* m68k.md (movdf): Don't need earlyclobber when a register
	is copied to itself.

Sat Nov 27 06:19:22 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* Version 2.5.5 released.

	* c-typeck.c (pop_init_level): Ensure never on momentary_obstack
	when calling complete_array_type.

Sat Nov 27 03:52:26 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* fixproto (scanning files_to_check): Create subdirs files are in.

	* config/m68k/m68k.md (cmpsi, cmphi, cmpqi): Handle SGS_CMP_ORDER
	when outputting cmpm insn.

Fri Nov 26 15:57:24 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* gcc.c (default_compilers): Do define __GNUC_MINOR__ if input is `-'.

Thu Nov 25 18:16:25 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* function.h (struct sequence_stack): New field sequence_rtl_expr.
	(struct function): Likewise.
	* emit-rtl.c: Include tree.h.
	(sequence_rtl_expr): New variable.
	(save_emit_status, restore_emit_status): Save and restore it.
	(init_emit): Initialize it.
	(start_sequence_for_rtl_expr): New function.
	* function.c: Declare sequence_rtl_expr.
	(struct temp_slot): New field rtl_expr.
	(assign_stack_temp): Set it from sequence_rtl_expr.
	({free,pop}_temp_slots): Don't free any slot with nonzero rtl_expr.
	(free_temps_for_rtl_expr): New function.
	* expr.c (expand_expr, case RTL_EXPR): Call free_temps_for_rtl_expr.
	* stmt.c (expand_start_stmt_expr): Call start_sequence_for_rtl_expr
	instead of start_sequence.
	* cp-parse.y (except_stmts): Likewise.
	* cp-init.c (build_new): Likewise.
	* cp-typeck.c (build_modify_expr): Likewise.
	* Makefile.in (emit-rtl.o): Includes tree.h.

Thu Nov 25 17:24:02 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (stmp-fixproto): Create include subdir if doesn't exist.

Wed Nov 24 14:32:47 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* c-common.c (shorten_compare): Correct typo from last change.

Wed Nov 24 13:25:09 1993	Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* protoize.c (save_def_or_dec): Correct typo in change of Nov 23.  Make
	sure pointers within def_dec_p are valid before it is freed.

Wed Nov 24 07:02:50 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* expr.c (expand_expr, case ADDR_EXPR): Also pass const0_rtx if
	necessary, to avoid multiple cleanup runs.
	(expand_expr, case WITH_CLEANUP_EXPR): Pass const0_rtx if
	necessary, to keep the recursive call from running the same
	cleanups twice.
	(expand_expr, case TARGET_EXPR): Don't try to add the cleanup if
	ignore's non-zero, since we would have already done it.

Tue Nov 23 21:10:22 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Cygnus<->FSF C++ front-end merge.
	Tue Nov 23 11:05:28 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-errfn.c (STRDUP): Cast return value of alloca to (char *).

	Mon Nov 22 00:07:17 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-lex.c (real_yylex): Move declaration of tmp inside the block
	that uses it, so compilers don't try to mis-optimize it away.

	* cp-search.c (dfs_pushdecls): Make sure there's a lang_specific
	node on the decl before trying to print the warning out.

	* cp-decl.c (grokdeclarator): Say the member was redeclared as
	static, not just that it can't be declared static.

	* cp-search.c (get_first_matching_virtual): Don't do
	SET_IDENTIFIER_ERROR_LOCUS as an attempt to avoid multiple warnings
	with -Woverloaded-virtual.  It changes the compiler's behavior
	(elicits unwanted errors).

	Sat Nov 20 19:31:01 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-tree.h (lang_type): Add field `has_nonpublic_ctor', and delete
	dummy since we used the two bits it was holding out for the MIPS
	compiler.
	(TYPE_HAS_NONPUBLIC_CTOR): Defined.
	* cp-class.c (finish_struct_methods): Set TYPE_HAS_NONPUBLIC_CTOR
	as appropriate for a copy ctor with non-public visibility.
	(finish_struct): Don't generate a copy ctor if the type if one of
	its fields has a private copy ctor, or a protected one for which we
	aren't allowed access.
	(base_info): Add member `saw_nonpublic_ctor'.
	(finish_base_struct): Set b->saw_nonpublic_ctor if necessary.

	* cp-method.c (hack_identifier): Make sure there's a
	DECL_LANG_SPECIFIC before getting ready to grope around a class.

	* cp-typeck.c (build_indirect_ref): Complain if we encounter a
	pointer to member.

	Fri Nov 19 16:37:28 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (start_decl): Complain when a function is declared as
	part of a template definition, but the class it's supposed to be
	part of wasn't a template.

	* cp-decl.c (pushdecl): Don't warn about shadowing a member of
	`this' if that member is static.

	* cp-call.c (convert_harshness_old): Don't die if one of the types
	isn't an aggregate with a binfo.
	(convert_harshness_ansi): Likewise.

	Fri Nov 19 12:18:31 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-typeck.c (convert_for_assignment): Fix typo so initialization
	of a pointer from an integer actually work, rather than emit bogus
	code.

	* cp-pt.c (overload_template_name): Accept unions for templates.
	(instantiate_class_template): Likewise.
	* cp-parse.y (template_instantiate_once): Likewise.

	* cp-lex.c (real_yylex): Instead of using the "shorts" method to
	check for overflow, use the C front-end's "parts" method (to handle
	any size, and not rely on long long being 32 bits wide).

	Thu Nov 18 11:51:34 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-lex.c (cons_up_default_function): Disable earlier change; it
	screws up stabs somehow.  Very strange.

	Thu Nov 18 00:16:29 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (grokdeclarator): Say what class is involved when saying
	we can't declare a member inside it.

	* cp-lex.c (real_yylex): Recognize operator->() as POINTSAT, not
	POINTSAT_LEFT_RIGHT.  By swallowing the parens, we ended up never
	building the call properly for them.
	* cp-parse.y (POINTSAT_LEFT_RIGHT): Remove token.
	(operator_name): Remove POINTSAT_LEFT_RIGHT rule.
	* cp-spew.c (init_spew): Remove POINTSAT_LEFT_RIGHT from
	toks_follow_ids.

	* cp-parse.y (primary): Only try to print out the operator's name if
	it's valid.

	* cp-decl.c (grok_op_properties): Fix missing parens to keep the
	logic from accidentally giving an error when it shouldn't.

	Wed Nov 17 20:04:00 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-search.c (dfs_pushdecls): TREE_PURPOSE doesn't have to be
	a _DECL for class_value to be an envelope, it just can't be an
	IDENTIFIER_NODE.

	Wed Nov 17 15:54:02 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-type2.c (process_init_constructor): Deal with pointers to
	members as initializers for initializer lists.

	Wed Nov 17 11:48:38 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-decl.c (ambi_op_p): Add ++ and --.

	* cp-error.c: Lose the anon_parm_name stuff.

	* cp-lex.c (cons_up_default_function): Change input_filename for
	synthetic code.

	* cp-error.c (dump_aggr_type): Always print const or volatile.
	(dump_function_decl): Only print static if verbose.

	* cp-errfn.c (cp_sprintf): New function.

	* cp-decl.c (grokfndecl): Be more verbose in complaint about applying
	method qualifiers to non-methods.

	Wed Nov 17 09:51:04 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* cp-parse.y (attrib): Accept "noreturn" attribute.

	Tue Nov 16 12:28:49 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-decl2.c (grokoptypename): Fix handling of udc's.

	* cp-method.c (build_component_type_expr): Ditto.

	* cp-class.c (finish_struct_methods): Be more verbose in complaint
	about overloaded operator delete.

	* cp-decl.c (grok_op_properties): Do more checking on operators.
	(grokdeclarator): Remove check for ops being members, fix handling
	of user-defined conversions.
	(grokfndecl): Remove checks for ops, move call to grok_op_properties
	up.
	(finish_decl): Remove check for ops with default arguments.
	(ambi_op_p): New fn, name for either unary or binary op
	(unary_op_p): New fn, checks name for unary op

	Mon Nov 15 12:38:54 1993  Brendan Kehoe  (brendan@rtl.cygnus.com)

	* g++.c (main): If they gave us -v, also show the invocation of the
	gcc driver.

	Mon Nov 15 12:04:47 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-decl.c (grokdeclarator): Lose "operator <typename>".

	* cp-method.c (build_component_type_expr): Ditto.

	* cp-decl2.c (grokoptypename): Ditto.

	Make C++ accept template parameters as type names; for example,
	doing `template <class T, T t> A {...}'.

	* cp-pt.c (end_template_parm_list): Fix a bug in gs4t's patch.
	(grok_template_type): Simplify.

	* cp-typeck.c (build_modify_expr_1): Give error if trying to
	get default operator= for class where you can't.

	* cp-decl.c (duplicate_decls): Uniformify, fix redeclaration of
	builtins.

	Sat Nov  6 19:06:25 EST 1993 Gnanasekaran Swaminathan (gs4t@virginia.edu)

	* cp-pt.c (begin_template_parm_list): pushdecl here so that we
	can push TEMPLATE PARAMETERS as type names.
	(process_template_parm): build_lang_decl for TEMPLATE
	PARAMETERS here.
	(grok_template_type): New function. get the actual type of a
	TEMPLATE PARAMETER.
	(coerce_template_parms): delete pushdecl as it is moved (see
	above). Don't build type decls for TEMPLATE PARAMETERS as it is
	built above.
	
	Mon Nov 15 12:04:47 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-decl.c (duplicate_decls): If a function has been declared with
	explicit language linkage, redeclaring (or defining) it without
	is OK.

	Fri Nov 12 15:30:27 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-lex.c (operator_name_string): Fix handling of __ad__foo.

	* cp-error.c (dump_decl): Handle demangling of vtable names.

	* cp-tree.c (lang_printable_name): Pass everything to decl_as_string,
	not just functions.

	* cp-decl2.c (check_classfn): Use cp_error.

	* cp-error.c (dump_decl): Fix IDENTIFIER_TYPENAME_P case.

	* cp-method.c (build_decl_overload): Propagate IDENTIFIER_OPNAME_P
	to mangled identifier.

	* cp-type2.c (my_friendly_abort): Add "confusion" message for
	abort after earlier errors.

	Wed Nov 10 18:39:17 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-decl2.c (lang_decode_option): Include warn_enum_clash among
	-Wall.

	Wed Nov 10 16:18:19 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* Makefile.in (stamp-cp-parse): Update counts.

	Wed Nov 10 15:27:12 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-errfn.c (cp_thing): Allow cp_*_at to use an arbitrary argument,
	not just the first, by using, for instance, `%+D'.

	Mon Nov  8 13:50:49 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-error.c (language_as_string): New function for printing language
	context.  Corresponds to %L.

	Mon Nov  8 10:39:28 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-pt.c (reinit_parse_for_template): Use inline_text_obstack
	instead of permanent_obstack so that yylex() doesn't clobber the
	growing object.

	* cp-lex.c (reinit_parse_for_block): Overhaul to reduce code size by
	half and make #line directives in template definitions work.

	Sun Nov  7 15:19:28 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-pt.c (instantiate_class_template): if (!setup_parse), don't
	mess with lineno and input_filename.

	Mon Nov  1 18:15:59 1993  Kung Hsu  (kung@cirdan.cygnus.com)

	* cp-cvt.c(convert_to_reference): Fix when pass ref to array as 
	initializer, the argument type is convert to pointer and the type
	in the field of the class should also convert to pointer.

	Fri Nov  5 11:57:41 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-pt.c (instantiate_template): Work properly with
	-fexternal-templates.

	* cp-lex.c (extract_interface_info): #if 0 out earlier
	tinst_level work pending further work.

	Fri Nov  5 07:39:00 1993  Michael Tiemann  (tiemann@blues.cygnus.com)

	* cp-search.c (compute_visibility): Don't lose access to public
	members from base classes of base classes.

	* cp-typeck.c (convert_for_assignment): Allocate enough space in
	LHSBUF for the null terminiator.

	Tue Nov  2 07:20:03 1993  Michael Tiemann  (tiemann@blues.cygnus.com)

	* cp-decl2.c (build_push_scope): Don't push the scope for
	ptr-to-method declarations.  Also, clarify some comments.

	* cp-parse.y (abs_member_declarator): Add `see_typename' epsilon
	rule so that parser can recognize ptr-to-member functions.

	Mon Nov  1 18:15:59 1993  Kung Hsu  (kung@cirdan.cygnus.com)

	* cp-cvt.c(convert_to_reference): Fix when pass ref to array as 
	initializer, the argument type is convert to pointer and the type
	in the field of the class should also convert to pointer.

	Mon Nov  1 11:06:39 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-errfn.c: Don't include <string.h>.
	Don't use the return value of strcpy.

	Sun Oct 31 22:32:05 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-call.c (build_scoped_method_call): Return (void)0 if trying to
	call a nonexistent destructor.

	* cp-parse.y (object): Support p.~int().

	* cp-error.c (dump_expr): Handle error_mark_node better.

	Sat Oct 30 21:49:00 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-parse.y (primary): Support p->~int().

	Fri Oct 29 18:09:12 1993  Mike Stump  (mrs@cygnus.com)

	* cp-type2.c (build_functional_cast): Don't delete things twice.

	Thu Oct 28 15:35:55 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-tree.h (struct tinst_level): The template instantiation level
	structure.  Used by the code described below.

	* cp-pt.c (push_tinst_level): New function for remembering file
	context when instantiating templates.  Stores the identifier as well,
	for error reporting.
	(pop_tinst_level): Da opposite.
	(tinst_for_decl): Returns a pointer to the tinst_level structure to
	use for determining which file to associate the current DECL with, or
	NULL to use the current file and line.  To restore the old behavior,
	just change this function to "return 0;".
	(instantiate_class_template): push_tinst_level.

	* cp-parse.y (tmplate_instantiate_once): pop_tinst_level() after
	instantiating member templates.

	* cp-lex.c (extract_interface_info): If instantiating a template,
	set up interface/implementation according to the spot in the user's
	code that triggered the instantiation.

	* cp-pt.c (tsubst): Associate the FUNCTION_DECL with the spot in the
	user's code that triggered the instantiation.  *Currently disabled*

	* cp-class.c (finish_struct): If we're instantiating a template,
	associate the TYPE_DECL with the spot in the user's code that
	triggered the instantiation.  *Currently disabled*

	* cp-pt.c (coerce_template_parms): Do extra checking on the template
	parms, since templates are more picky than initializers.

	Wed Oct 27 17:06:54 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-parse.y (datadef): Don't override a template with a forward
	declaration of a template class.

	Tue Oct 26 17:54:12 1993  Kung Hsu  (kung@cirdan.cygnus.com)

	* cp-parse.y (component-declarator0): fix bit field name same as type
	name syntax error.

	Tue Oct 26 16:07:29 1993  Mike Stump  (mrs@cygnus.com)

	* cp-cvt.c (build_up_reference): Fix typo, fixes core dump on bad
	code.

	Tue Oct 26 11:52:09 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-error.c (dump_function_decl): Only print default arguments
	if verbose.
	(dump_type): Ditto.

	Mon Oct 25 22:18:05 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* cp-typeck.c (c_sizeof, build_c_cast):  Re-enable Salzenberg's
	July 10 change (set TREE_OVERFLOW as well as TREE_CONSTANT_OVERFLOW).

	Mon Oct 25 18:53:08 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-pt.c (instantiate_class_template): Don't do the
	push_template_decls thang if !setup_parse; the binding level
	never gets popped.

	Mon Oct 25 11:54:34 1993  Kung Hsu  (kung@cirdan.cygnus.com)

	* cp-method.c (hack_identifier): fix seg fault when an
	external variable does not have class context.

	Sun Oct 24 19:01:15 1993  Michael Tiemann  (tiemann@blues.cygnus.com)

	* cp-spew.c (scan_tokens): Test for ';' in first pre-scan of the
	tokens.

	Fri Oct 22 23:46:17 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-tree.c (get_decl_list): When consing up CLASSTYPE_ID_AS_LIST,
	don't assume that `value' is a reasonable identifier to use.
	(list_hash_lookup_or_cons): Ditto.

	* cp-error.c (dump_decl, CONST_DECL): Pass off non-enum cases to
	dump_expr.
	(dump_expr): Pass off DECLs to dump_decl.

	Fri Oct 22 20:57:46 1993  david d `zoo' zuhn  (zoo@rtl.cygnus.com)

	* cp-errfn.c (STRDUP): Change to comma expr for bdmaged cc's.
	(cp_thing): Add decl for ap, initialize fmt later.

	Fri Oct 22 17:15:01 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-error.c (dump_decl): Handle CONST_DECLs for enum tags.

	* cp-type2.c (my_friendly_abort): Move abortcount to global level.

	* cp-search.c (dfs_pushdecls): Be more helpful in shadowing warning.

	* cp-pt.c (mangle_class_name_for_template): If the last template
	parameter was also a template class, insert a space so that
	the mangled name can be used as input for the compiler (i.e.
	with default_copy_constructor_body).

	Fri Oct 22 16:40:27 1993  Mike Stump  (mrs@cygnus.com)

	Handle constructors in templates better.

	* cp-call.c (build_method_call): Use constructor_name_full instead
	of constructor_name.
	* cp-cvt.c (convert_to_reference, convert, build_type_conversion_1,
	build_type_conversion): Ditto.
	* cp-decl.c (make_temporary_for_reference, grok_reference_init):
	Ditto.
	* cp-init.c (expand_default_init, expand_aggr_init_1, build_new):
	Ditto.
	* cp-typeck.c (build_modify_expr_1, convert_for_initialization):
	Ditto.
	* cp-search.c (lookup_field, lookup_fnfields): Check for short
	constructor name, as that is how we store it.
	* cp-decl2.c (constructor_name_full): New routine.
	* cp-tree.h (constructor_name_full): Declare it.
	* cp-call.c (build_method_call): Check for either short or the full
	constructor name.

	Wed Oct 20 17:17:37 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-tree.h: Declare code_as_string.

	* cp-error.c (code_as_string): New function, translates
	enum tree_code into a string.  Very incomplete at the moment.

	* cp-decl.c (lookup_tag): Use cp_error more.

	Tue Oct 19 16:39:20 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-error.c (dump_type_prefix): Do the prefix/suffix thang for
	ARRAY_TYPE nodes.

	Thu Oct 14 23:56:34 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-gc.c (build_dynamic_cast): Avoid doing runtime work if possible.
	(build_typeid): Add logic.

	Thu Oct 14 10:56:43 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-gc.c (build_typeid): New function, allegedly returns the
	Type_info object for the type of an expression, currently does
	nothing.
	(get_typeid): New function, allegedly returns the Type_info object
	for a _TYPE node, currently does nothing.
	(build_dynamic_cast): New function, supposedly implements
	run-time checked casting, currently only does what can be done
	at compile time.

	* cp-parse.y (.kindof_pushlevel): Only push first decl (the variable).
	(primary): Add dynamic_cast and typeid expressions.
	(simple_if): Use partially_scoped_stmt again.
	Makes 'if' condition work.

	* cp-error.c (expr_as_string): Suppress parens on initial call
	to dump_expr.

	* cp-tree.h: Add decls for Type_info_type_node, build_typeid,
	get_typeid and build_dynamic_cast.

	* gplus.gperf: Add typeid and dynamic_cast.

	* cp-spew.c (init_spew): Ditto.

	Wed Oct 13 19:15:21 1993 Jason Merrill (jason@deneb.cygnus.com)

	Partial implementation of Stroustrup's proposal for declarations in
	conditions from X3J16/92-0121.

	* cp-parse.y (paren_cond_or_null): New rule, use condition instead
	of expr.
	(xcond): Ditto.
	(condition): New rule, used in the condition parts of if, while, for
	and switch statements.  Allows a restricted set of declarations of
	the form "type_specifier declarator = expression".
	(.kindof_pushlevel): Like pushlevel, but pushes all of the decls
	from the previous binding level into the new one too.
	(partially_scoped_stmt): Like implicitly_scoped_stmt, but uses
	.kindof_pushlevel instead of .pushlevel.
	(simple_if): .pushlevel before condition.
	(simple_stmt, simple_if ELSE): Ditto, pop binding level.
	(simple_stmt, simple_if): Ditto.
	(simple_stmt, WHILE): Ditto.
	(simple_stmt, forhead.1): .pushlevel before condition, use xcond
	instead of xexpr, pop binding level.
	(simple_stmt, forhead.2): Use xcond instead of xexpr, always pop
	binding level.
	(simple_stmt, SWITCH): .pushlevel before condition, etc, etc.
	(forhead.2): always .pushlevel.
	(datadef): Use cp_error more.
	(simple_stmt, CASE): Ditto.

	* cp-decl2.c (pushdecls): New function, push all decls in the chain
	into the current scope.

	Wed Oct 13 12:31:58 1993  Mike Stump  (mrs@cygnus.com)

	* cp-decl.c: Remove redefinition of NULL, as some machines don't
	  like it.  Clean up all NULL uses.

	Mon Oct 11 17:21:08 1993  Kung Hsu  (kung@cirdan.cygnus.com)

	* cp-decl2.c (finish_file): Fix libg++ build problem of mismatch
	  blocks.

	Mon Oct 11 13:51:05 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Mon Oct  4 11:49:48 1993  Chip Salzenberg  (chip@fin.uucp)

	* cp-typeck.c (build_modify_expr): Check whether recursive calls
	return error_mark_node.

	Mon Oct  4 12:41:16 1993  Chip Salzenberg  (chip@fin.uucp)

	* cp-class.c (finish_struct): Too-long bitfield is an error.
	* cp-decl.c (grokdeclarator): "inline main()" is an error.
	(grok_op_properties): Overloaded ?: is an error.
	(start_enum): Duplicate enum definition is an error.

	Mon Oct  4 12:45:11 1993  Chip Salzenberg  (chip@fin.uucp)

	* cp-typeck.c (common_type): Use TYPE_MAIN_VARIANT when preferring
	long int to int (when width is the same).

	Mon Oct  4 12:46:54 1993  Chip Salzenberg  (chip@fin.uucp)

	* cp-typeck.c (convert_for_assignment): Mismatch in signedness
	of pointer targets should not inhibit warnings for const mismatch.

	Mon Oct  4 12:53:04 1993  Chip Salzenberg  (chip@fin.uucp)

	* cp-typeck.c (default_conversion): Convert to unsigned int
	if original type is unsigned and of greater or equal size.

	Mon Oct 11 13:19:42 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (build_enumerator): Call default_conversion on the VALUE
	before calling constant_expression_warning.

	Mon Oct 11 10:21:37 1993  Kung Hsu  (kung@cirdan.cygnus.com)

	* cp-decl.c (finish_function): fix the mismatch LBB LBE block
	  problem, specifically when compiler generated
	  destructor/constructor (pr2972)
	* cp-decl2.c (finish_file): same as above
        * cp-parse.y (compstmt): same as above

	Mon Oct 11 01:08:09 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-error.c (dump_type_suffix): Cope with arrays with unspecified
	bounds.

	Thu Oct  7 19:35:26 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-error.c:  Deal with printing out array DECLs properly.
	Use dump_char for printing out string literals, too.

Tue Nov 23 18:08:27 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* dwarfout.c (function_start_label): New function.
	(output_entry_point_die): Use it.
	(output_global_subroutine_die, output_local_subroutine_die): Use it.

	* c-common.c (check_format_info): Always use TYPE_MAIN_VARIANT
	when comparing cur_type against wanted_type.

	* protoize.c (save_def_or_dec): If function's aux info doesn't end
	with a closeparen, ignore it.
	(xmalloc, xrealloc): Cast result of malloc.

	* c-typeck.c (build_binary_op): Don't accept complex types
	for max, min, lt, etc.

Tue Nov 23 18:05:14 1993  Lisa Repka  (lisa@MicroUnity.com)

	* reorg.c (rare_destination): Ensure we always correctly handle
	a null JUMP_LABEL.

Tue Nov 23 17:48:39 1993  Doug Evans  (dje@canuck.cygnus.com)

	* i960/i960.h (ASM_SPEC): Pass -linkrelax, not -link-relax.

Tue Nov 23 17:35:25 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* arm.c (arm_backwards_branch): Branching to the current insn is a 
	backwards branch.

Tue Nov 23 13:59:24 1993  Hallvard B Furuseth  (hbf@durin.uio.no)

	* libgcc2.a (__bb_exit_func): Fix format %*d -> %*ld.

	* c-parse.in, cp-parse.y (maybe_type_qual): Don't fail to set $$.

Tue Nov 23 15:26:28 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (try_combine, simplify_shift_const): Add initializations
	for some uninitialized variables.

	* c-common.c (check_format_info): When we have INTEGER_TYPEs,
	save result of signed_type or unsigned_type for later
	comparison with the various forms of char types.

	* expr.c (expand_expr, case SAVE_EXPR): Properly recompute the
	value of UNSIGNEDP when SAVE_EXPR_RTL is nonzero and we have promoted.

Tue Nov 23 04:14:04 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* dwarfout.c (output_local_subroutine_die): Use the function name
	from its symbol_ref, not DECL_ASSEMBLER_NAME.

Mon Nov 22 13:59:41 1993  Steve Chamberlain  (sac@mole.gnu.ai.mit.edu)

	* final.c (get_attr_length): asm_insn_count takes a body, not an
	insn.

Sun Nov 21 22:37:12 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/m68k/mot3300.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL): 
	Use SIZE, not ROUNDED.
	(FUNCTION_PROLOGUE, FUNCTION_EPILOGUE): Definitions turned off.
	(REGISTER_PREFIX, IMMEDIATE_PREFIX): New definitions.
	(PARM_BOUNDARY): New definition.

Sun Nov 21 15:39:04 1993  Tor Egge  (tegge@pvv.unit.no)

	* m88k/dolph.h (SDB_ALLOW_FORWARD_REFERENCES): Define.
	(SDB_ALLOW_UNKNOWN_REFERENCES): Define.
	(CPP_PREDEFINES): Redefine.
	(CPP_DEFAULT): Redefine. 
	(INITIALIZE_TRAMPOLINE): Redefine.
	* m88k/dolphin.ld: New file.
	* m88k/t-m88k (realclean): Remove some generated .asm files.
	* m88k/x-dolph (EXTRA_PARTS): Redefined to also contain gcc.ld.
	(gcc.ld): Copied from dolphin.ld.
	(X_CFLAGS): Define __m88k__.
	* libgcc2.c (__enable_execute_stack): Add DolphinOS version.

Sun Nov 21 01:00:40 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/m68k/isi.h (LIB_SPEC): Use -lm in addition to -lc--
	not instead of -lc.

	* fix-header.c (write_rbrac): Make added declarations conditional
	on __cplusplus and nothing else.
	* fixproto (stdio.h): Reenable adding protos for v*printf.

	* sys-protos.h (authdes_create): Delete arg info.
	We can't count on having struct sockaddr defined.

	* fixincludes (math.h): When deleting inline sqrt and abs,
	be flexible about arg name and function body.

	* Makefile.in (stmp-fixproto): Never run fixproto twice.

Sat Nov 20 16:52:15 1993  Jim Wilson  (wilson@cygnus.com)

	* stmt.c (warn_if_unused_value): Handle arbitrary number of casts
	before a modify.

Sat Nov 20 16:38:25 1993  Eric Baur  (eric@synnet.com)

	* i386/perform.h (perform_divsi3, perform_modsi3): Add '&' in
	constraint for DX; explicitly copy arg arg1 to cx.

Sat Nov 20 02:26:28 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (expand_builtin): For sin, cos, fsqrt, alloca, ffs, strlen,
	strcpy, memcpy, strcmp, memcmp, if args are bad, use expand_call.

	* fix-header.c (write_rbrac): Treat rewinddir like memmove.

Fri Nov 19 18:24:43 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* protoize.c: Remove declarations for malloc and realloc.

	* expr.c (store_field): Convert EXP to MODE before calling
	store_bit_field.

	* optabs.c (expand_complex_abs): Replace some erroneous 
	uses of MODE with SUBMODE.

	* combine.c (force_to_mode): Don't allow sign-extension of 
	constants when we are narrowing things in an IOR or XOR.

Fri Nov 19 16:42:43 1993  Jim Wilson  (wilson@cygnus.com)

	* rs6000.c (output_function_profiler): When TARGET_MINIMAL_TOC,
	emit .long instead of .tc.

Fri Nov 19 13:22:37 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

    	* configure: Let a host set truncate_target to specify that the
	installation directory names must be truncated to 14 characters.
	If set, truncate the target argument.

Fri Nov 19 17:27:58 1993  Holger Teutsch  (holger@hotbso.rhein-main.de)

	* clipper.h (HARD_REGNO_MODE_OK): Allow any mode in general regs.
	Float regs may only hold SFmode and DFmode.
	(FUNCTION_ARG): Only MODE_INT and MODE_FLOAT with size <= 8 are
	passed in registers.
	(FUNCTION_ARG_ADVANCE): Update accordingly.
	(FUNCTION_ARG_PARTIAL_NREG): Undefine.

	* clipper.md (movsf+1,2,movdf+1,2): Make 'f' preferred register class.

Thu Nov 18 20:09:56 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* fixincludes: When compute DOTS, convert /./ to / to avoid
	accidentally converting it to /../.
	* fixinc.dgux, fixinc.svr4: Likewise.

Thu Nov 18 06:14:55 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* function.c (expand_function_end): New arg END_BINDINGS.
	* c-decl.c (finish_function): Pass new arg to expand_function_end.
	* cp-decl.c (finish_function): Pass new arg to expand_function_end.
	Don't call expand_end_bindings here.
	* integrate.c (output_inline_function):
	Pass new arg to expand_function_end.

Wed Nov 17 18:54:21 1993  Chip Salzenberg  (chip@fin.uucp)

	* objc/objects.c: Include "tconfig.h" before "runtime.h".

Wed Nov 17 19:15:31 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fixincludes (math.h): Add missing quoting of `*' when fixing
	prototype of `sqr'.

Tue Nov 16 07:15:52 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* alpha.h (EXTRA_CONSTRAINT): New macro.
	(SECONDARY_{INPUT,OUTPUT}_RELOAD_CLASS): Disallow unaligned into float
	regs.
	* alpha.md (movdi): Use 'Q' instead of 'm' for FP.

Tue Nov 16 02:06:01 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Version 2.5.4 released.

	* c-typeck.c (push_init_level): When aligning next struct field,
	make sure there's another field left.

	* cp-errfn.c: Don't include string.h.
	(STRDUP): Macro deleted.
	(cp_thing): Copy strings "by hand".

	* combine.c (force_to_mode): Don't do right-shift in a narrower mode.

Mon Nov 15 01:54:48 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* sdbout.c (sdbout_symbol): If non-static var has static-style RTL,
	don't output anything for it.

	* Makefile.in (stmp-fixproto): Don't depend on xsys-protos.h.
	(diff): Don't compare bi-parser.c

	* news.h (NO_DOT_IN_LABEL, NO_DOLLAR_IN_LABEL): Defined.

	* c-typeck.c (push_init_level, really_start_incremental_init):
	Skip any nameless bitfields at start of record.
	(process_init_element): Skip any nameless bitfields after the field
	just processed.

Mon Nov 15 02:09:54 1993  Torbjorn Granlund  (tege@blues.cygnus.com)

	* pa.h (RETURN_IN_MEMORY): Define.

Sun Nov 14 17:25:29 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (expand_expr): For TRUTH_AND_EXPR, TRUTH_OR_EXPR
	and TRUTH_XOR_EXPR, if result mode doesn't match operands,
	don't use subtarget.

	* c-typeck.c (convert_for_assignment): Fix typo (codel => coder).

Sun Nov 14 12:45:37 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* function.c (assign_parms): Clear STACK_PARM when we have a 
	pass-by-pointer parm that we load into a pseudo.

	* flow.c (flow_analysis): Fix bug in previous change.

	* fold-const.c (twoval_comparison_p): Do nothing for SAVE_EXPR, at
	least for now.

	* reload.c (push_reload): Allow RELOAD_FOR_INPUT with a secondary
	reload the same class as the input if the modes differ.

	* expr.c (store_expr): Convert constants to proper mode in two places.

	* sh.h (HAVE_VPRINTF): Delete from here.
	* xm-sh.h (HAVE_VPRINTF): New macro.

Sun Nov 14 04:28:56 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/i860/i860.h (SECONDARY_INPUT_RELOAD_CLASS):
	Moving any kind of integer cst to float reg needs intermediate.

	* sys-protos.h (getmntent): Delete the arg decls
	because BSD 4.4 and Sunos disagree on them.

Sat Nov 13 23:06:42 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/mips/mips.c (function_arg, function_arg_advance):
	In default case, handle complex modes much like BLKmode.
	(function_arg_partial_nregs): Likewise.

Sat Nov 13 22:31:48 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* alpha.h (CPP_SPEC): Always define __LANGUAGE_C__ unless assembler.
	Define __cplusplus for C++.

	* alpha.md (movsf, movdf): Add 'G' to constraint for operand 1
	when operand 0 is a register and support it in alternative 0.

	* stmt.c (expand_end_bindings): Use emit_move_insn instead of
	gen_move_insn in case nonlocal_goto_handler_slot is not a valid memref.

	* flow.c (find_basic_blocks): When starting new basic block
	for a CALL_INSN in the presence of nonlocal labels, don't
	get confused with following CLOBBER.
	(flow_analysis): Use same logic as find_basic_block to see when
	the insn after a CALL_INSN starts a new basic block.

	* expmed.c (store_split_bit_field): Properly load a constant VALUE
	into a WORD_MODE pseudo.

Sat Nov 13 18:27:43 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/ns32k/ns32k.md (movsi): Handle moves to fp reg.
	Handle const_double as operand 1.

	* Makefile.in (diff): Fix typo in name gcc.??s.

Fri Nov 12 08:34:58 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* dbxout.c (dbxout_type_field): Skip fields with variable
	position and/or size instead of crashing on them.

Fri Nov 12 22:49:50 1993  Pat Rankin  (rankin@eql.caltech.edu)

	* bi-arity.c, bi-opcode.c, bi-opname.c (main): Flush stdout and
	and check for errors prior to termination; end with call to exit
	rather than return from main, as with gen*.c.
	* bi-arity.c, bi-lexer.c, bi-opcode.c, bi-opname.c, bi-parser.y:
	Use FATAL_EXIT_CODE rather than hardcoded 1 for fatal exit code.

Fri Nov 12 18:41:51 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* gstdarg.h, gvarargs.h: Test __bsdi__ like __BSD_NET2__.

	* pa.h (FUNCTION_ARG_BOUNDARY): Fix return value for 64bit
	pass by value structures.

	* fix-header.c (write_rbrac): Handle v*printf like memmove.

Fri Nov 12 08:53:47 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* arm.md (comparison): Don't emit invalid optimization
	for (set (reg) (comparison)) and (set (reg) (neg (comparison)))
	when comparison is LT.

	* arm.c (pattern_really_clobbers_lr): Setting a subreg of a mem is
	valid and safe.

Fri Nov 12 08:38:22 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* m68k/hpux7.h: Add directory name to #include of hp320.h.

Thu Nov 11 00:00:55 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Version 2.5.3 released.

	* fix-header.c, gen-protos.c (fancy_abort): New function.

	* c-typeck.c (mark_addressable): Handle REALPART_EXPR and
	IMAGPART_EXPR.

	* integrate.h (global_const_equiv_map_size): Declared.

	* dbxout.c (dbxout_symbol): If it's C++, don't check the
	DECL_SOURCE_LINE of a typedef.
	(dbxout_parms): Fix previous change.

Wed Nov 10 10:33:28 1993	Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* fixproto (rel_source_subdir):	Prune out redundant /subdir/../ to
	prevent recursion.

Wed Nov 10 22:30:16 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/ns32k/encore.h (ASM_OUTPUT_ASCII): Declare i.

Wed Nov 10 16:18:19 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (grokvardecl): Undo change of Jan 15 1993 which
	tried to implement the "one definition rule".  The duplicate_decls
	call in pushdecl does implement this; grokvardecl got some bad hits.

Wed Nov 10 08:44:17 1993  Niklas Hallqvist  (niklas@appli.se)

	* cp-search.c (compute_visibility): Revert Tiemann's patch of
	Nov 5.  Instead check that privately inherited entities don't
	get restricted visibility if the private derivation is a
	shallow derivation (i.e. one leading to the most derived
	class) and we're actually in the most derived class' scope.

	* cp-search.c (dfs_pushdecls):  Don't be confused by the fact that
	overloaded methods from an outer scope almost looks like an
	envelope.

Wed Nov 10 18:55:22 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* fixincludes: Copy files needed for other files at the very end.

	* arm.md (reload patterns for mla instruction): New.

Wed Nov 10 18:17:40 1993  Jim Wilson  (wilson@cygnus.com)

	* dbxout.c (dbxout_parms): For parms passed via invisible
	reference, accept any reg except FP, SP, and AP.

	* unroll.c (unroll_loop): Set global_const_equiv_map_size.

Wed Nov 10 17:52:33 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (subst_prev_insn): New variable.
	(try_combine): Set it.
	(get_last_value): Use subst_prev_insn if set instead of 
	looking for the first insn before SUBST_LOW_CUID.

	* integrate.c (global_const_equiv_map_size): New variable.
	(expand_inline_function): Set it.
	(expand_inline_function, copy_rtx_and_substitute, try_constants):
	Never access const_equiv_map without checking for out-of-range.
	(mark_stores): Likewise.

	* alpha.md (smaxdi3): Was incorrectly called maxdi3.

	* rs6000.h (LINK_SPEC): Don't pass -btextro if -r.

	* alpha/osf12.h: New file.
	* configure (alpha-dec-osf1.2): New case, to use new file.

	* rs6000.md (sqrtdf2): Fix typo in extra condition.
	(plus/eq pattern): Fix typo: "addze" was "adddze".

Wed Nov 10 12:32:56 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* expmed.c (expand_divmod): If rem_flag, always force op0 to a
	register.

	* expr.c (expand_expr): Use a smaller alignment when reading from
	a field with a variable offset.

Wed Nov 10 01:28:27 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (expand_assignment): Use a smaller alignment when storing
	into a field with a variable offset.

	* fixincludes (math.h): Delete inline definitions for sqr.

Tue Nov  9 15:33:45 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-method.c (hack_identifier): Undo rfg's earlier patch.

Tue Nov  9 19:30:02 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* reload1.c (reload) [SMALL_REGISTER_CLASSES]: Try, at least,
	to avoid 2-groups whose second register is explicitly used.

Tue Nov  9 19:08:47 1993  Jim Wilson  (wilson@cygnus.com)

	* mips.md (adddi3): Use DImode not SImode in force_reg call.

	* mips.c (PIC_OFFSET_TABLE_MASK): New macro.
	(function_epilogue): When -mabicalls, ignore
	PIC_OFFSET_TABLE_REGNUM when calculating load_only_r31.

	* loop.c (strength_reduce): Accept VOIDmode initial values.

Tue Nov  9 09:23:31 1993  Torbjorn Granlund  (tege@mole.gnu.ai.mit.edu)

	* pa.md (negscc): Add mode for NEG.

Tue Nov  9 12:51:54 1993  John Hassey  (hassey@dg-rtp.dg.com)

	* m88k.md ("cmpsf" & "cmpdf"): Undo inadvertent change included
	with CCEVENmode change.

Tue Nov  9 01:31:58 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* fixincludes (loop on $required): When a file is copied
	because another file needs it, scan it for what files it needs.

	* fix-header.c (write_rbrac): When adding proto for memmove,
	put it inside #ifndef memmove.

Mon Nov  8 16:50:49 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* sdbout.c (sdbout_init) [RMS_QUICK_HACK_1]: Call sdbout_symbol
	for __vtbl_ptr_type.

	* cp-decl.c (init_decl_processing): Undo previous change.

	* c-typeck.c (build_binary_op): Warn for ordered compare of ptr with 0
	only if pedantic in both cases.

Mon Nov  8 18:25:06 1993  David Edelsohn  (edelsohn@npac.syr.edu)

	* rs6000.h (ASM_FILE_START): Emit filename directive.

Sun Nov  7 00:24:04 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (mostlyclean): Delete fixhdr.ready here.
	(clean): Not here.

	* scan-decls.c (scan_decls):  After seeing an extern variable
	declaration, goto new_statement to read a new token, rather
	than going to handle_statement (which uses the current token).

Sat Nov  6 19:40:22 1993  Pat Rankin  (rankin@eql.caltech.edu)

	* config/vax/vms.h (__MAIN_NAME): Define as " main(" rather
	rather than " main (" to reflect current cc1plus.

	* config/vax/vms.h: Add __GNUC_MINOR__=5 to CPP_PREDEFINES.

Sat Nov  6 22:54:25 1993  Tor Egge  (tegge@pvv.unit.no)

	* m88k.c (partial_ccmode_register_operand, even_relop)
	(odd_relop): New functions, for support of CCEVENmode.
	(print_operand, new case '!'): Revert following condition.
	* m88k.h (EXTRA_CC_MODES, EXTRA_CC_NAMES, SELECT_CC_MODE):
	New macros to define CCEVENmode. 
	* m88k.md: Handle CCEVENmode as a new mode.  Logical operations
	on CCmode registers now results in CCEVENmode. 
	Add patterns for jumps and ext's for CCEVENmode.
	(cmpsf, cmpdf): Use reg 65 and clobber reg 64.

Sat Nov  6 17:07:54 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cp-decl.c (init_decl_processing) [RMS_QUICK_HACK_1]:
	If sdb output, call sdbout_symbol for vtable_entry_type.
	* config/m88k/dgux.h (RMS_QUICK_HACK_1): Defined.

Sat Nov  6 12:32:31 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* unroll.c (unroll_loop): Don't unroll loop if jump has combined
	the original loop start label with another label.

Sat Nov  6 05:01:31 1993  Chris Smith  (csmith@convex.com)

	* convex.md (untyped_call, blockage): Add new patterns.

Sat Nov  6 03:11:46 1993  Noah Friedman  (friedman@gnu.ai.mit.edu)

        * just-fixinc: Rename fixed native limits.h to syslimits.h (or
        install gsyslimits.h) before renaming gcc's limits.h from tmpfoo
        directory.

Sat Nov  6 00:07:41 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (emit_move_insn_1): Push the components of a complex
	in proper order: imag part has higher address.

Fri Nov  5 16:23:51 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* mips.c (mips_abicalls): Change type to enum mips_abicalls_type.
	(override_options): Use MIPS_ABICALLS_{NO,YES} instead of
	ABICALLS_{NO,YES}.
	* mips.h (enum mips_abicalls_type): New type.
	(mips_abicalls_attr): New define.
	(mips_abicalls): Change type to enum mips_abicalls_type.
	* mips.md (abicalls): Use mips_abicalls_attr not mips_abicalls.

Fri Nov  5 20:34:19 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* fixproto (stdio.h): Don't add protos for vprintf, vfprintf, vsprintf.

Fri Nov  5 20:32:53 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* config/pa/pa.md (decrement_and_branch_until_zero):
	Add missing `return'.

Fri Nov  5 16:08:34 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* listing: Handle i386-linux like m68020.
	Pass compilation options thru an awk variable, not as ordinary args.

	* cccp.c (safe_read, safe_write): Handle EINTR.
	(output_line_command): Handle NO_IMPLICIT_EXTERN_C here.
	(main): Not here.

	* protoize.c (safe_read, safe_write): Handle EINTR.
	(safe_write): Return right away after safe_write.

Fri Nov  5 11:40:59 1993  Jeff Law  (law@snake.cs.utah.edu)

	* pa-ghpux.h (NO_IMPLICIT_EXTERN_C): Define.
	* pa-hpux.h (NO_IMPLICIT_EXTERN_C): Define.

Fri Nov  5 09:45:20 1993  Kresten Krab Thorup  (krab@viking)

	* objc/archive.c (objc_read_string): Allocate string properly.
	* objc/hash.h (compare_strings): Check for null pointers.

Fri Nov  5 11:29:26 1993  David Edelsohn  (edelsohn@npac.syr.edu)

	* rs6000.h (ASM_OUTPUT_DOUBLE, ASM_OUTPUT_FLOAT): Use
	REAL_ARITHMETIC macros including hex for special values.

Fri Nov  5 10:26:34 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-call.c (build_method_call): For unions, don't use get_binfo and
	convert_pointer_to_real, since unions can't be involved in complex MI
	situations.  (Fixes union ctor crash, and completes Sep 27 fix.)

Fri Nov  5 07:39:00 1993  Michael Tiemann  (tiemann@blues.cygnus.com)

	* cp-search.c (compute_visibility): Don't lose access to public
	members from base classes of base classes.

	* cp-search.c (get_base_distance): Initialize BASETYPE_PATH before
	using.  Also, initialize RVAL from get_base_distance_recursive.

Fri Nov  5 05:48:04 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/i860/paragon.h (SIZE_TYPE): #undef it.

	* config/m88k/dgux.h (LIB_SPEC): Handle -msvr4.
	(GPLUSPLUS_INCLUDE_DIR): Definition and #undef deleted.

	* cccp.c (main): Handle NO_IMPLICIT_EXTERN_C.

Fri Nov  5 03:11:05 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* config/m68k/m68k.h (RTX_COST): Return actual costs for
	multiplication, not costs for theoretical special cases that are
	not handled in the md.

Fri Nov  5 00:42:09 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* emit-rtl.c (gen_highpart): If arg is function value hard reg,
	return a subreg of it (as in gen_lowpart_common).

	* integrate.c (expand_inline_function): Handle CONCAT as rtl for parm.
	(copy_rtx_and_substitute): For subreg, handle case where the reg
	inside turns into a CONCAT.

	* configure: Treat hppa1.[01]-hpux8.0[01] like hppa1.[01]-hpux8.02.

	* fixproto:  Don't scan sub-directories whose names end in CC
	or contain ++ - these are probably C++ directories.

Thu Nov  4 12:02:04 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* integrate.c (expand_inline_function): Don't call
	push_temp_slots, free_temp_slots, and pop_temp_slots when handling
	parameters, because they might end up in a temp slot.

Thu Nov  4 15:00:38 1993  Samuel Figueroa  (figueroa@cs.nyu.edu)

	* i386/os2.h, i386/xm-os2.h: New files.

Thu Nov  4 14:36:54 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-decl.c (finish_enum): Undo previous change.

Thu Nov  4 13:30:16 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* loop.c (strength_reduce): Ignore initial value if it is the
	wrong mode.
	(record_initial): Don't ignore any set of the register.

	* rs6000.md (movdf): Don't have reload choose alternative of
	loading a constant into a GPR.

	* reload.c (find_reloads, case 'o'): A pseudo is not always
	an offsettable memref.
	(find_reloads): If we reload a constant into a register via
	memory, count it as two reloads.

	* function.c (expand_function_start): If not optimizing, ensure
	we mark context display regs as live for the entire function.

Thu Nov  4 02:24:22 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* tree.h (DECL_IN_TEXT_SECTION): New macro.
	* varasm.c (assemble_variable): Set DECL_IN_TEXT_SECTION.
	* dbxout.c (dbxout_symbol_location): Test DECL_IN_TEXT_SECTION.

Wed Nov  3 23:59:48 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (build_function_call): Initialize fundecl to 0.

Wed Nov  3 16:34:01 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* pa.h (REGISTER_MOVE_COST): Decrease cost for move from
	SHIFT_REGS to avoid regclass overflow.

Wed Nov  3 15:35:44 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/m68k/m68k.c (output_move_double): Fix up the test for overlap
	of source address with operands[0].

	* regclass.c (regclass): Consider commutativity even when
	one arg is a constant.

Wed Nov  3 12:06:23 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* expmed.c (expand_divmod): Use target as copy_to_suggested_reg
	argument only if it has the same mode as op0.

Wed Nov  3 04:58:26 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* protoize.c (safe_write, safe_read): Really use arg DESC.

	* libgcc2.c (exit): Fix declaration of _exit.

	* c-common.c (check_format_info): Make warning nicer for mismatch
	of int vs long, etc.
	Don't warn if field width is an unsigned int.

	* c-decl.c (finish_enum): Always make an enum signed if it will fit.

Wed Nov  3 14:23:52 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* cse.c (cse_insn):  Call `invalidate' also for STRICT_LOW_PART and
	ZERO_EXTRACT (three places).
	(invalidate_from_clobbers): Likewise (two places).
	(cse_around_loop): Likewise.
	(invalidate_skipped_set): Likewise.
	(cse_set_around_loop): Likewise.

Wed Nov  3 03:56:55 1993  Paul Eggert  (eggert@twinsun.com)

	* dbxout.c (dbxout_type): Print `-2' instead of `0037777777776'
	for an enumeration constant whose value is -2;
	otherwise, GDB 4.11 rejects the type.

Wed Nov  3 04:35:13 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (fix-header, gen-protos): Link with HOST_LIBS.
	Depend on HOST_LIBDEPS.

Wed Nov  3 00:07:18 1993  Per Bothner  (bothner@wombat.gnu.ai.mit.edu)

	* fixproto:  When checking for uses of _flsbuf, make sure to
	not match (say) __flsbuf or other non-word _flsbuf strings.
	* fixproto:  Be more robust when checking for files indirectly
	needed (via #include directives).  E.g. handle "../foo/bar.h"
	properly, and silently ignore missing include files.

Tue Nov  2 17:37:39 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* gcc.c (do_spec_1): Use spec_version for %v, not version_string.
	Distinguish %v1 and %v2.
	(default_compilers): For __GNUC_MINOR__, use %v2.
	For __GNUC__ and __GNUG__, use %v1.

	* protoize.c (safe_read): New function.
	(process_aux_info_file, edit_file): Use safe_read.

	* cccp.c (safe_read): New function.
	(main, finclude, check_precompiled): Use safe_read.

Tue Nov  2 14:31:42 1993  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: Don't remove /**/ from X11/Xlibint.h or
	X11/extensions/multibufst.h; unnecessary.

Tue Nov  2 07:20:12 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* optabs.c (init_optabs): Function `ffs' takes `int', not mode that
	is BITS_PER_WORD wide.

Tue Nov  2 02:53:26 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cp-typeck.c (comptypes): Fix typo in changing STRICT from 2 to 1.

	* protoize.c (edit_file): Use safe_write.
	(safe_write): New subroutine.

	* calls.c (expand_call): Discard __ prefix like _ or __x.

	* objc/objects.c: Include tconfig.h.

Mon Nov  1 23:34:46 1993  Rainer Orth  (ro@anemone.techfak.uni-bielefeld.de)

	* fixincludes (sys/stat.h) fix fchmod prototype, first arg is
	int, not char * [AIX 3.2.4]
	(rpc/svc.h): avoid nested comments [Ultrix 4.3]
	(stdio.h, stdlib.h): fixed getopt prototypes to match POSIX.2
	[DEC Alpha OSF/1 1.3]

Mon Nov  1 11:42:29 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* fixincludes: Fix <sys/limits.h> like <limits.h>.

	* fixincludes: Unquote 'f' in #define _IO.  Fix elf.h like
	elf_abi.h.  For Irix 5.

Mon Nov  1 15:15:38 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* configure (mips-sgi-irix5*): Add fixincludes=Makefile.in.

	* fixproto (setjmp.h):  Don't require siglongjmp and sigsetjmp.
	They need sigjmp_buf, and are missing on many systems.

	* Makefile.in (stmp-fixproto): Print a notice that warnings and errors
	from fixproto are normal.
	(distdir): Avoid spurious output from gcc.texi version number check.
	(diff): New target.

Mon Nov  1 15:19:09 1993  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: Don't remove /**/ from X11/xmd.h; breaks gcc
	-traditional on some systems.

Mon Nov  1 07:38:58 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu

	* rs6000.md: Add set_attr for "length" when we are going to split
	an insn at output time.

	* rs6000.md (bdn/bdz): Fix typo in checking for when we
	need to split.

	* rs6000.md (mulsi3): Make alternatives be "mq" and "no_mq"
	instead of "power" and "powerpc".  Only allow one pattern (either
	with or without the clobber of MQ) to match.

	* stmt.c (expand_decl_init): If CONST_DECL, don't generate any
	code, but call expand_expr if DECL_INITIAL is a constant.

Mon Nov  1 06:17:16 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* m68k.md (divhisi3, udivhisi3, modhisi3, umodhi3): Comment out.
	(divhisi3, udivhisi3, modhisi3, umodhi3 recognizers): Comment out.

	* expmed.c (synth_mult): When factoring T, break from loop after
	first factor.
	(expand_mult): Increase max cost to 12 again.

Mon Nov  1 01:06:27 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cccp.c (safe_write): New function.
	(write_output): Use safe_write.

Mon Nov  1 01:06:27 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Version 2.5.2 released.

	* cccp.c (do_ident): Fix previous change.

Sun Oct 31 14:41:40 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Version 2.5.1 released.

	* cccp.c (do_ident): Substitute macros and output here.
	(directive_table): Turn off the pass_thru field for #ident.

	* c-common.c (shorten_compare): Undo previous change.
	Instead, just suppress warnings if both args are constant.

	* config/m68k/m68k.md (extzv, and its recognizer):
	If width is 32, don't set CC_NOT_NEGATIVE.
	If width is variable, clear the CC status.

	* config/m68k/m68k.c (output_move_double): Extend the special case
	for *--sp = sp[N] to handle 12 bytes as well as 8 bytes.

Sun Oct 31 17:02:13 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-init.c (expand_aggr_init_1): When unswitching a COND_EXPR
	initializer (i.e. int a = b ? 1 : 0 => int a; b ? a=1 : a=0),
	set TREE_SIDE_EFFECTS on the result.

Sun Oct 31 13:33:46 1993  Jim Wilson  (wilson@cygnus.com)

	* expr.c (do_store_flag): For equality test of a single bit, use
	subtarget instead of target in calls.

Sat Oct 30 17:58:37 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/m68k/hpux7.h: New file.
	* configure (m68k-hp-hpux7*): New alternative.

	* c-common.c (shorten_compare): Do nothing if both args constant.

	* config.sub: Re-add hitachi to list of companies not to treat
	as OS names.

	* expr.c (convert_move): When extending to multi-word register
	via its low word, clobber the whole thing.

	* config/i386/i386.c (output_move_double): Extend the special case
	for *--sp = sp[N] to handle 12 bytes as well as 8 bytes.

Sat Oct 30 17:21:33 1993  Atsushi Furuta  (furuta@sra.co.jp)

	* pa-ghiux.h, pa-hiux.h, pa1-ghiux.h: New files, for Hitachi H3050/RX.
	* pa1-hiux.h, x-pa-hiux, xm-pahiux.h: Likewise.
	* config.sub, configure: Add H3050/RX support.

Sat Oct 30 03:40:08 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/pa/pa.c (output_dbra): Fix argument number in addi at end.

	* tree.h (enum built_in_function):  Added END_BUILTINS to delimit
	standard from language-specific builtins.

	* toplev.c (rest_of_compilation): When an `extern inline' is not
	really inline, clear DECL_INITIAL so we don't complain about
	a subsequent non-extern definition.
	* c-decl.c (finish_function): If rest_of_compilation set DECL_INITIAL
	to null, leave it null.

	* c-common.c (convert_and_check): Don't warn converting 0xff
	to a signed char, etc., unless pedantic.

	* Makefile.in (mainversion): New variable.
	(distdir): Use mainversion when verifying gcc.texi has been updated.

Sat Oct 30 03:12:54 1993  Torbjorn Granlund  (tege@cygnus.com)

	* m68k.md (mulsidi3 patterns): Fix typo, LSHIFTRT was ASHIFT.

Fri Oct 29 12:06:09 1993  Ian Lance Taylor  (ian@cygnus.com)

	* fixinc.svr4 (sys/stat.h): Don't change definitions into
	prototypes if they may already be in prototype form.

Fri Oct 29 16:50:33 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/i386/linux.h (LIB_SPEC): Use -lieee if -mieee-fp.

Fri Oct 29 13:04:16 1993  Arne H. Juul  (arnej@fm.unit.no)

	* mips/iris5.h (LINK_SPEC): Pass -no_unresolved if -call_shared.

Fri Oct 29 12:52:54 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.md (addsf3, subsf3, mulsf3, divsf3): Put POWERPC first,
	then POWER.

	* mips/iris5.h ({DBX,SDB,MIPS}_DEBUGGING_INFO): Turn off until working.

Fri Oct 29 12:15:12 1993  Minh Tran-Le  (tranle@intellicorp.com)

	* i386/xm-aix.h: Define HAVE_PUTENV for AIX PS/2.

Fri Oct 29 11:49:46 1993  DJ Delorie (dj@ctron.com)

	* i386/go32.h: Add support for coff-based ctor/dtor handling. 

Thu Oct 28 21:33:22 1993  Kresten Krab Thorup  (krab@next.com)

	* objc-act.c (check_methods_accessible): Fix bug in
	-Wno-protocol.  Reset chain to bottom class for each search. 

Thu Oct 28 21:30:38 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* c-parse.in (init): Remove extraneous pop_momentary in error case.

Thu Oct 28 19:01:33 1993  Ron Guilmette  (rfg@netcom.com)

	* cp-method.c (hack_identifier): If an overloaded identifier
	can only mean one thing, it can only mean one thing.

Thu Oct 28 18:52:15 1993  John F Carr  (jfc@mit.edu)

	* cp-typeck.c (get_member_function_from_ptrfunc):  Convert delta
	to size_t before adding to pointer.

Thu Oct 28 18:43:41 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* arm.h (ENCODE_SECTION_INFO): Use DECL_RTL for DECLs.

Wed Oct 27 20:58:31 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* pa.c (emit_move_sequence): Fix typo, `Pmode' was `mode'.

Wed Oct 27 00:01:06 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cse.c (cse_insn): When using src_related, copy the rtx.
	Likewise for src_eqv_here.

	* c-typeck.c (output_pending_init_elements): Don't crash if
	constructor_unfilled_fields is 0.

	* fixincludes (bsd/sys/wait.h): Undo previous change.

	* config/m68k/xm-amix.h (abort): Don't use fancy_abort.
	(alloca): In GCC 1, define as __builtin_alloca.

	* config/m68k/amix.h (ASM_GENERATE_INTERNAL_LABEL)
	(ASM_OUTPUT_INTERNAL_LABEL): #if 0 deleted, to reenable these.
	(NO_DOT_IN_LABEL): Defined.
	(NO_DOLLAR_IN_LABEL): Undefined.

	* function.c (assign_parms): If parmreg is a CONCAT, handle the
	case where stack_parm is 0.

	* expr.c (do_jump): Use do_jump_by_parts_equality for complex compares.

	* c-typeck.c (build_c_cast): When making union constructor,
	copy TREE_CONSTANT from the given value.
	(initializer_constant_valid_p): Special handling for "constant"
	union constructor.

	* bytecode.def: Rename dup to duplicate.
	* expr.c (expand_assignment): Use duplicate.
	(bc_expand_expr): Likewise.
	(bc_expand_constructor): Likewise.

	* print-tree.c (print_node_brief): Use unsigned char to print
	the bytes of a real constant.

	* expmed.c (store_bit_field): When calling operand_subword_force,
	if VALUE has a non-void mode, pass that mode.

	* config/m68k/amix.h (NO_DOLLAR_IN_LABEL): Defined.

Tue Oct 26 19:05:36 1993  John F Carr  (jfc@mit.edu)

	* rs6000.c (rs6000_override_options): Support -mcpu=rsc1.

Tue Oct 26 19:01:08 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (deduced.h): Add -I. and -I$(srcdir).

	* scan-types.sh (CC): Move a " to avoid shell error.

	* config.sub (paragon): New alias.
	* configure (i860-*-osf*): New alternative.
	* gstdarg.h, gvarargs.h [__i860__]: Add to little-endian list.
	* libgcc2.c (___builtin_saveregs): New alternative for __PARAGON__.
	* va-i860.h: Treat __PARAGON__ like __SVR4__.
	(va_dcl) [__PARAGON__]: Declare va_alist.
	* paragon.h, xm-paragon.h: New files.

Tue Oct 26 18:58:49 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fix-header.c: Delete duplicate definition of "buf".
	* fix-header.c, gen-protos.c, scan-decls.c, scan.c: Include hconfig.h.
	* scan-decls.c: Remove unused #ifdef OLD.

	* Makefile.in (gen-protos.o, scan.o, fix-header.o, scan-decls.o):
	Add rule to compile using $(HOST_CC).
	Show using hconfig.h.

	* rs6000.md (movsi): Can copy a TOC address into a register.

Tue Oct 26 15:03:07 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* gcc.c (default_compilers): Define __GNUC_MINOR__, using %v.
	(do_spec_1): Implement %v.

Tue Oct 26 11:06:59 1993  Mike Stump  (mrs@cygnus.com)

	* cp-lex.c (consume_string): Handle "\"" and '\''.

Tue Oct 26 13:44:17 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* Makefile.in (fix-header.o): Depend on fix-header.c.
	(scan-decls.o): New target.
	(gen-protos.o, scan.o): New targets.

	* Makefile.in (gen-protos, fix_header): Add $(HOST_CFLAGS) and
	$(HOST_LDFLAGS).

	* x-sysv (OLDCC): Add -XNh1500.
	* x-mips: Likewise.

Tue Oct 26 12:21:06 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* fixincludes: Fix NeXT <sys/wait.h> problem in <bsd/sys/wait.h>
	as well, since that is where the file is in NeXTStep 3.0.

Tue Oct 26 07:23:08 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* expmed.c (init_expmed): Use register 10000, not FIRST_PSEUDO_REGISTER
	that gets special treatment in rtx_cost.
	(expand_mult): Decrease max cost to 8.

	* c-typeck.c (build_binary_op): For TRUNC_MOD_EXPR and FLOOR_MOD_EXPR,
	set common.

Tue Oct 26 01:59:17 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* protoize.c [__NeXT__]: Don't declare setjmp or longjmp.

	* configure: Ignore --verbose option if specified.

	* expr.c (emit_move_insn_1): Don't call group_insns
	when X is a CONCAT.
	(emit_move_insn_1, case CONJ_EXPR and COMPLEX_EXPR): Likewise.

	* fixproto (signal.h): Add prototypes only for kill and raise.
	Not for the POSIX signal functions.
	(sys/resource.h): Delete special handling for this file.

	* c-typeck.c (push_init_level): Align here for element of record.
	(process_init_element): Not here (was before call to push_init_level).

	* scan-types.sh: Expect GCC source dir as argument.
	In dummy.c, use gstddef.h and gstdarg.h, not stddef.h and stdarg.h.
	* Makefile.in (deduced.h): Pass GCC source dir to scan-types.sh.

Mon Oct 25 23:23:26 1993  Torbjorn Granlund  (tege@blues.cygnus.com)

	* c-typeck.c (build_binary_op): For TRUNC_MOD_EXPR and FLOOR_MOD_EXPR,
	don't shorten when divisor might be -1.

Mon Oct 25 23:45:20 1993 Minh Tran-Le (tranle@intellicorp.com)

	* seq-sysv3.h (CPP_SPEC): Define _SEQUENT_ to be compatible with cc.
	(INVOKE__main): Defined.
	(HAVE_ATEXIT): Defined.

	* configure (i[34]86-sequent-sysv): Use fixinc.srv4 and define
	broken_install.

Mon Oct 25 18:53:51 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (expand_expr, case PLACEHOLDER_EXPR): Fix typos.

Mon Oct 25 16:25:58 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* scan.c (scan_string, skip_spaces): Add newline before fn name.

	* scan-decls.c (scan_decls): When reading parameter list,
	handle whitespace differently, and keep track of line number.

	* config/i386/x-linux (STMP_FIXPROTO): Define as empty.

Mon Oct 25 13:22:37 1993  Kaveh R. Ghazi  (ghazi@caip.rutgers.edu)

	* fixincludes: Fix bad S_IS* macros in <sys/stat.h> on m88k-sysv3.

Mon Oct 25 22:34:12 BST 1993	Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* fixincludes: Remove nested brackets in change of Oct 21.
	Fix token pasting operator in ARM/RISCiX include files.

Mon Oct 25 13:01:52 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* sparc.h (LONG_DOUBLE_TYPE_SIZE): Don't define here.
	* sol2.h (LONG_DOUBLE_TYPE_SIZE): Do define here.

	* configure (mips-sgi-irix5): Don't use collect.

Sun Oct 24 14:15:12 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* libgcc2.c (L_bb): Undef NULL before including <stdio.h>.

Sun Oct 24 03:04:53 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (g++.o): New target.

	* varasm.c (assemble_variable): Set last_assemble_variable_decl.
	(last_assemble_variable_decl): New variable.
	* toplev.c (rest_of_decl_compilation): Test that var.

Sat Oct 23 20:28:13 1993  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)

	* configure (mips-sgi-irix5): Uncomment.
	* iris5.h: Replace with working version.
	* xm-iris5.h: New file.

	* mips.c (mips_abicalls): New variable.
	(override_options): Set mips_abicalls.  Allow '^' as print operand
	punctuation character.
	(print_operand): Add support for '^'.
	(mips_asm_file_start): Use ABICALLS_ASM_OP instead of ".abicalls".
	(compute_frame_size): Handle TARGET_ABICALLS case.
	(mips_expand_prologue): Likewise.
	* mips.h (mips_abicalls): Declare new variable.
	(PIC_FUNCTION_ADDR_REGNUM): New macro.
	(STARTING_FRAME_OFFSET): Handle TARGET_ABICALLS case.
	* mips.md (abicalls): New attribute.
	(define_delay): Don't fill call delay slots when TARGET_ABICALLS.
	(call_internal3, call_value_internal3): Renamed from
	call_internal2 and call_value_internal2.
	(call_internal2, call_value_internal2): New call patterns for
	TARGET_ABICALL case.
	(call_internal4, call_value_internal4): Likewise.

Sat Oct 23 00:06:14 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (deduced.h): Depend on GCC_PASSES and stmp-int-hdrs.
	(xsys-protos.h): Depend on GCC_PASSES.
	(fixhdr.ready): New target.
	(stmp-fixproto): Depend on fixhdr.ready, not fix-header itself.
	(clean): Delete fixhdr.ready.

Fri Oct 22 01:20:29 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* fix-header.c: Renamed from patch-header.c.
	(progname): Change name.
	* fixproto: Use fix-header.
	* Makefile.in (fix-header, fix-header.o): Renamed from patch-header*.
	(stmp-fixproto, mostlyclean): Rename references to them.

	* expr.c (store_field): In BLKmode case, return blk_object.

	* config/m88k/m88k.h (ASM_FINISH_DECLARE_OBJECT): Undef, then define.

	* Version 2.5.0 released.

Thu Oct 21 13:02:48 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* mips.h (CUMULATIVE_ARGS): Double size of adjust array.
	* mips.c (function_arg): Add comment about too many adjust entries.

Thu Oct 21 13:48:14 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.h (HARD_REGNO_MODE_OK): Multi-word objects cannot
	go into MQ, LR, or CTR.

	* configure (mips-sgi-iris5*): Disable; not working yet.
	* mips/iris5.h (ASM_SPEC, LINK_SPEC, CPP_PREDEFINES): Extend a bit.

	* expmed.c (expand_divmod): Create RESULT in proper mode when trying
	quotient-and-remainder insn.

Thu Oct 21 13:14:40 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (STMP_FIXPROTO): Uncomment the definition.

	* varasm.c (output_constructor): Fix previous change:
	if no TYPE_DOMAIN, don't set min_index.

Thu Oct 21 11:13:21 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* fixincludes: Avoid conflicting uses of __wchar_t in cc1plus and
	stdlib.h for ARM/RISCiX.

Thu Oct 21 08:16:13 1993  Doug Evans  (dje@canuck.cygnus.com)

	* Makefile.in (install-common): Remove g++ dependency.
	Not built for cross compilers.

Thu Oct 21 00:04:40 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* fixincludes (required): Accept a space instead of a tab
	between #define and CTRL (or _CTRL).

	* config/m68k/m68k.c (output_move_double): Use reg_overlap_mentioned_p
	when checking for overlap between source and dest.
	Fix syntax for the lea insn for double overlap case.
	* m68k.md (movdi, movdf, movxf): Delete the & from load case.

	* config/m88k/m88k.h (ASM_FINISH_DECLARE_OBJECT): Emit .size
	only if DECLARE_ASM_NAME.

Wed Oct 20 21:32:11 1993  Jeff Law  (law@snake.cs.utah.edu)

	* pa.c (output_arg_descriptor): Do not stop searching if a USE
	for the static link or struct value register is found.

Wed Oct 20 22:43:22 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h (ASM_FINISH_DECLARE_OBJECT): Don't emit .size
	directive if using the OSF/rose object format.

	* i386/osfrose.h, i386/osfelf.h (SWITCH_TAKES_ARG): Allow use of
	System V.4 -h * and -z * switches.
	(LINK_SPEC): Pass -G, -h*, -z* switches through to the ELF linker.
	Map -static, -symbolic, and -shared into the appropriate -B, -d,
	and -G options when invoking the ELF linker.

Wed Oct 20 20:32:54 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cse.c (fold_rtx): Alter previous change: don't fold the shift
	if the count exceeds the width of the value inside the subreg.

	* varasm.c (copy_constant): New function.
	(output_constant_def): Use it.

	* Makefile.in ($(srcdir)/INSTALL): Add --no-split.

Wed Oct 20 19:35:35 1993  John F Carr  (jfc@mit.edu)

	* alpha.h (LIB_SPEC): Link -lprof1 when profiling.

Wed Oct 20 19:21:18 1993  Jim Wilson  (wilson@cygnus.com)

	* cccp.c (sys_errlist): Conditionalize declaration for BSD 4.4.
	* collect2.c, g++.c, gcc.c, protoize.c: Likewise.
	* collect2.c (my_strerror): Move block local extern declarations
	for sys_errlist and sys_nerr to file level.

Wed Oct 20 18:27:28 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (output_init_element): When initializing a union,
	do it right away: never put the field on the pending list.

	* patch-header.c (main): Delete output file before opening it.
	Discard directory names from progname.
	* patch-header.c:  Simplify and fix handling of errno.h.
	(It no longer thinks errno.h always needs fixing.)
	* patch-header.c (write_lbrac, write_rbrac):  Only write
	extern "C" if that specifically is needed.

Wed Oct 20 18:12:21 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* pa.md (cacheflush): Split into dcacheflush and icacheflush.
	Rewrite to use space regs correctly.
	* pa.h (TRAMPOLINE_TEMPLATE): Rewrite.
	(TRAMPOLINE_SIZE): Update with new size.
	(INITIALIZE_TRAMPOLINE): Rewrite.

Wed Oct 20 17:58:32 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* varasm.c (output_constructor):  Add support for non-zero
	lower array bound.
	* expr.c (store_constructor): Likewise.

Wed Oct 20 15:16:34 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* toplev.c (rest_of_decl_compilation): Use ASM_FINISH_DECLARE_OBJECT
	unconditionally, but define it as no-op by default.

	* config/convex/convex.h (MAX_LONG_TYPE_SIZE): Defined.

	* varasm.c (size_directive_output): New variable.
	* toplev.c (rest_of_decl_compilation): Use ASM_FINISH_DECLARE_OBJECT.
	* config/svr4.h (ASM_DECLARE_OBJECT_NAME): Set size_directive_output.
	(ASM_FINISH_DECLARE_OBJECT): Defined.
	* config/i386/osfrose.h, config/m88k/m88k.h: Likewise.

	* patch-header.c (inf_size):  Move decl inside main.
	(strdup):  Use xmalloc rathern than malloc.
	Don't use the return value of strcpy.
	(INF_UNGET):  Take parameter;  do nothing if EOF.
	(strcpy): Declaration deleted.

Wed Oct 20 11:39:56 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* xm-mips.h (HAVE_VPRINTF): Define for BSD 4.4.

	* mips.c (mips_output_filename): When emitting stabs, don't
	disable them if using gas.
	(mips_output_lineno): Likewise.

	* sparc.h (INITIALIZE_TRAMPOLINE): Emit 3 flush instrutions.
	* sparc.md (flush): Add pattern.

Wed Oct 20 10:47:54 1993  Michael Meissner  (meissner@osf.org)

	* configure (mips-dec-bsd, mips-dec-osf): Fix a typo in the last
	change.

Wed Oct 20 07:57:06 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.h, aix31.h (RS6000_CROR_BIT_NUMBER): Deleted.
	(RS6000_CALL_GLUE): New macro.
	* rs6000.c (print_operand, case '.'): Use RS6000_CALL_GLUE
	instead of RS6000_CROR_BIT_NUMBER.
	(print_operand, case 'E', case 0): Use "return", not "break".
	* rs6000.md (call): Don't use CROR or NOP; just use "%.".

	* c-common.c (check_format_info): Consider "char", "signed char",
	and "unsigned char" types as equivalent.

	* loop.c (find_and_verify_loops): Properly continue loop after
	moving a block of code near a loop exit.

Wed Oct 20 02:01:50 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (extraclean): Delete file djefoo.
	(stmp-fixproto): Depend on stmp-headers, not LIBGCC2_DEPS.

Tue Oct 19 23:11:16 1993  James Van Artsdalen  (james@bigtex.cactus.org)

	* config/i386/isc.h (LONG_DOUBLE_TYPE_SIZE): Define as 64 bits
	due to FP emulator bugs in the target kernel.
	* config/i386/sco.h: Likewise (kernel bugs are only suspected).

Tue Oct 19 21:21:34 PDT 1993  Ralph Campbell (ralphc@pyramid.com)

	* configure (mips-dec-bsd): New alternative.
	* config/mips/dec-bsd.h: New file.

Tue Oct 19 18:49:40 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* c-typeck.c (digest_init): For arrays, use comptypes to compare
	types instead of comparing pointers.

Tue Oct 19 11:24:16 1993  Steve Chamberlain  (sac@phydeaux.cygnus.com)

	* reload1.c (reload): Cope when inherited register is larger than
	one word.
	(choose_reload_regs): Ditto.

Tue Oct 19 18:09:18 1993  David Edelsohn  (edelsohn@npac.syr.edu)

	* rs6000.md (define_function_unit): Add support for RIOS2
	asymmetric integer units.

Tue Oct 19 17:48:37 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* function.c (assign_parms): Properly set parm_reg_stack_loc for
	args that are a CONCAT.

	* clipper.md (movdi): Force use of "o" alternative if
	operand 1 is a MEM.

	* alpha.h (HAVE_ATEXIT): New macro.

	* reload.c (push_reload, find_reloads): If an operand is
	a SUBREG of a PLUS, force a reload and reload what is inside.

	* dbxout.c (print_int_cst_octal): Fix bug in last change.

Tue Oct 19 17:42:23 1993  Richard Earnshaw  (rwe11@cl.cam.ac.uk)

	* arm.c: Include reload.h
	(arm_reload_out_hi): New function.
	(output_call): Don't look inside operands[0].
	* arm.h: Add function definitions for shift_instr, 
	output_mov_long_double_fpu_from_arm,
	output_mov_long_double_arm_from_fpu,
	and output_mov_long_double_arm_from_arm.
	(FLOAT_WORDS_BIG_ENDIAN): Define to 1.
	(SECONDARY_OUTPUT_RELOAD_CLASS): return GENERAL_REGS for HImode
	outputs.
	(ASM_OUTPUT_LONG_DOUBLE, ASM_OUTPUT_DOUBLE, ASM_OUTPUT_FLOAT):
	output floating point constants as hex, make order correct given
	definition of FLOAT_WORDS_BIG_ENDIAN.
	(PRINT_OPERAND): Delete redundant code when handling CONST_DOUBLE.
	* arm.md: (reload_outhi): New pattern.
	(movhi): Handle reloads better.
	(restorehi): Delete.  Also tidy up commented out code.
	(call): Make this a define_expand.
	(matcher for above): only accept MEM(reg)
	(call_value): Handle as for (call).
	* xm-arm.h (HOST_FLOAT_WORDS_BIG_ENDIAN): Define to 1.

Tue Oct 19 13:25:03 1993  Mike Stump  (mrs@rtl.cygnus.com)

        * cp-type2.c (build_m_component_ref): Fix typo, type must be set,
	after changing component.  Fixes problem introduced on Thu Sep 9
	21:22:40 1993.

Tue Oct 19 01:09:56 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* configure (m68000-convergent-sysv*): Untangle from m68k-*-lynxos.

	* Makefile.in (stmp-fixproto): Depend on LIBGCC2_DEPS.
	(crtbegin.o, crtend.o): Specify -fno-inline-functions.

	* config/mips/iris5.h: New file.
	* config/mips/mips.c (mips_asm_file_start): Handle ABICALLS_ASM_OP.
	* configure (mips-sgi-iris5*): New configuration.

Mon Oct 18 16:16:26 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cse.c (note_mem_written): (mem (scratch)) means clobber everything.

	* gen-protos.c: Include ctype.h.

	* expmed.c (extract_split_bit_field): Change shift count calculation
	in little-endian case.

	* Makefile.in (stmp-fixproto):  Added dependency on fixproto script.

Mon Oct 18 11:26:08 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* c-typeck.c (process_init_element): Align structure elements
	that are subaggregates.

	* c-decl.c (finish_decl): After preserve_initializer call, set
	TREE_PERMANENT bit in initializer.

	* combine.c (can_combine_p): Don't combine instructions across a
	volatile insn.
	* rtlanal.c (volatile_insn_p): New function.

Sun Oct 17 03:04:49 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* configure (powerpc-ibm-aix*): Set cpu_type.
	* config.sub: Recognize powerpc.

Sun Oct 17 21:37:57 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* reload1.c (eliminate_regs_in_insn): Rerecognize some loads and
	stores.
	* pa.md (indexing loads and stores): Provide variants which avoid
	reload problems with shift-add operations.

	* pa.h (READONLY_DATA_SECTION): Disable.

Thu Oct 14 12:38:27 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cse.c (fold_rtx): Special case handling for folding
	a subreg of the result of a left shift.

Thu Oct 14 00:05:42 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* alpha.h (DBX_CONTIN_LENGTH): Set to 4000.

	* expr.c (do_jump_for_compare): Don't blow up if aren't any insns
	in this sequence yet.

	* alpha.h (LINK_SPEC): Now OK to pass -O3 to linker.
	(ASM_OUTPUT_LOOP_ALIGN, ASM_OUTPUT_ALIGN_CODE): Work around
	bug in DEC assembler.

Wed Oct 13 21:47:58 1993  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: Remove erroneous parens from Alpha OSF/1 <sym.h>.

Wed Oct 13 16:08:54 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/m68k/sun3.h (CPP_PREDEFINES): Don't define _CROSS_TARGET_ARCH.

	* fold-const.c (invert_truthvalue): Handle SAVE_EXPR.

	* Makefile.in (install-collect2): Depend on install-dir.
	(install-info, install-float-h-cross): Likewise.

Wed Oct 13 15:51:02 1993  Stephen L. Moshier  (moshier@world.std.com)\

	* real.h (FLOAT_WORDS_BIG_ENDIAN): New macro.
	(HOST_FLOAT_WORDS_BIG_ENDIAN): Likewise, for host.
	(REAL_VALUE_TO_TARGET_DOUBLE (default version)): Use them.
	(efixi, efixui): Return HOST_WIDE_INT.
	(REAL_VALUE_FROM_INT): Cast inputs to HOST_WIDE_INT.
	* real.c (FLOAT_WORDS_BIG_ENDIAN, HOST_FLOAT_WORDS_BIG_ENDIAN):
	Use everywhere in place of WORDS_BIG_ENDIAN, HOST_WORDS_BIG_ENDIAN,
	except in reference to endian-ness of integers.
	(etrunci, etruncui, efixi, efixui, ereal_from_int, ereal_to_int,
	ltoe, ultoe, eifrac, euifrac): Change `long' to `HOST_WIDE_INT'.

Wed Oct 13 15:47:37 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-parse.in (initdcl, notype_initdcl): Call decl_attributes
	before init as well as after.

	* config/ns32k/pc532.h (FRAME_POINTER_REQUIRED):
	Require a frame pointer if fn calls setjmp.

Wed Oct 13 15:27:01 1993  Jim Wilson  (wilson@cygnus.com)

	* jump.c (jump_optimize): When moving a range of instructions,
	include all NOTEs before the range, not just line number notes.

Wed Oct 13 11:01:51 1993  Per Bothner  (bothner@wombat.gnu.ai.mit.edu)

	* patch-header.c:  #include <sys/types.h> before <sys/stat.h>.

Wed Oct 13 11:57:33 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.md (seq): Fix typo: had "xubfic" instead of "subfic".

	* va-m88k.h (_VA_LIST_): Define.

	* alpha.c (ignore_line_number): No longer used.

	* mips-tdump.c (print_global_hdr): Fix typo in cast in ctime call.

	* cccp.c (main): Don't catch SIGPIPE if no such signal.

	* x-alpha: File deleted, all shipped OSF systems have `ranlib'.

	* fold-const.c (optimize_bit_field_compare, decode_field_reference):
	Don't do anything if get_inner_reference returned its argument.

	* bi-reverse.c: Avoid defining NULL; can cause duplicate definition
	errors.

Wed Oct 13 07:58:28 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h (ASM_OUTPUT_ADDR_DIFF_ELT): Define like in V.4.
	(FUNCTION_PROFILER, FUNCTION_PROLOGUE): Don't load up %eax with
	the pointer value before calling indirect, just call indirect the
	memory address to save some cycles in profiling.

Tue Oct 12 12:41:12 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* cse.c (record_jump_cond): At end, make missing equivalences
	first, and then merge them.

Tue Oct 12 21:30:29 1993  Doug Evans  (dje@cygnus.com)

	* va-h8300.h (__va_rounded_size): Fix typo in #ifdef.

Tue Oct 12 20:19:22 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* bc-emit.c: Include stdio.h last.
	* combine.c: Include stdio.h after gvarargs.h.

Tue Oct 12 13:28:18 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* fixproto:  Re-write.  We now assume that there are two
	source directories (source_dir_all and source_dir_std).  These
	are handled differently.  All files in source_dir_all (normally
	./include) are processed, but in source_dir_std (normally
	/usr/include) we only process the standard ANSI/Posix ones where
	we might be able to add missing prototypes.
	* scan-decls.c (scan_decls):  Rewrote from being a program whose
	output is piped to patch-header, to a subroutine called by
	patch-header.  This should be somewhat more efficient.
	* Makefile.in (scan-decls):  Removed rule to make program.
	* patch-header.c (recognized_macro, recognized_extern,
	recognized_function):  New functins, with logic moved out from
	read_scan_file, so they can be called by scan_decls.
	* patch-header (main):  Read the original header file into a
	buffer (rather than reading it with stdio).  This should be more
	efficient, partly because we can re-write it in place.
	(inf_skip_spaces, inf_read_upto, inf_scan_ident):  New functions,
	based on skip_spaces, read_upto, and scan_ident in scan.c, but
	these read from the in-memory buffer mentioned above.
	* scan-types.sh:  Don't check for sigset_t, since it can be a
	struct, whose name cannot be simplify replaced by its definition.
	* Makefile.in (deduced.h):  Don't pass -nostdinc.

Tue Oct 12 18:36:32 1993  Peter Schauer  (pes@regent.e-technik.tu-muenchen.de)

	Changes to support native ecoff and embedded stabs debugging
	for the Alpha.

	* alpha.c (output_prolog): Put out file and line number if sdb
	debugging format, put out .ent directive, signal start of function for
	alpha_output_filename and set up debugging auto/arg offsets.
	(output_epilog): Signal end of function for alpha_output_filename.
	(alpha_output_filename, alpha_output_lineno): New functions.
	* alpha.h (TARGET_SWITCHES): Add gas option.
	(ASM_DECLARE_FUNCTION_NAME): Moved output of .ent directive to
	output_prolog.
	(DBX_NO_XREFS): Removed, gdb understands cross references and the
	native debugger can't handle embedded stabs.
	(ASM_FILE_START): Replace output of .file directive
	by ASM_OUTPUT_SOURCE_FILENAME call.
	(TARGET_GAS, MASK_GAS, SDB_DEBUGGING_INFO, DBX_DEBUGGING_INFO,
	MIPS_DEBUGGING_INFO, PREFERRED_DEBUGGING_TYPE, DEBUGGER_AUTO_OFFSET,
	DEBUGGER_ARG_OFFSET, ASM_OUTPUT_SOURCE_LINE,
	ASM_OUTPUT_SOURCE_FILENAME, DEFAULT_GDB_EXTENSIONS, ASM_STABS_OP,
	ASM_STABN_OP, ASM_STABD_OP, SDB_ALLOW_FORWARD_REFERENCES,
	SDB_ALLOW_UNKNOWN_REFERENCES, PUT_SDB_DEF, PUT_SDB_PLAIN_DEF,
	PUT_SDB_TYPE, PUT_SDB_BLOCK_START, PUT_SDB_BLOCK_END,
	PUT_SDB_FUNCTION_START, PUT_SDB_FUNCTION_END, PUT_SDB_EPILOGUE_END,
	ASM_FINAL_SPEC, CODE_MASK, MIPS_IS_STAB, MIPS_MARK_STAB,
	MIPS_UNMARK_STAB, SHASH_SIZE, THASH_SIZE): New macros.
	* alpha-gdb.h: New file.
	* configure (alpha-*-osf*): Handle --with-stabs and --with-gnu-as.
	* mips-tfile.c (add_local_symbol): Index in the external symbol
	must point to local symbol table entry for procedures.

Mon Oct 11 16:14:53 1993  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: If a file is referenced with double quotes from
	a fixed file, make sure it is copied into the fixed include
	directory.
	Remove DPS/XDPSlib.h special-case code.

Tue Oct 12 08:05:28 1993  David Edelsohn  (edelsohn@npac.syr.edu)

	* rs6000/powerpc.h: New file.
	* configure (powerpc-ibm-aix*): New target.
	* rs6000.h (MASK and TARGET): Add new flags for POWER2 and PowerPC
	with square root.
	(ASSEMBLER_DIALECT): New macro.
	(CONDITIONAL_REGISTER_USAGE): Set MQ register fixed if not POWER.
	(SHIFT_COUNT_TRUNCATED): Conditional on POWER.
	(ASM_OUTPUT_REG_{PUSH,POP}): Mnemonics dependencies.
	* rs6000.c (rs6000_override_options): Use new TARGET flags and
	add some more cpu choices.
	(output_prolog, output_epilog): Support new mnemonics and avoid
	using lm/stm when not POWER.
	* rs6000.md: Update define_function_units.
	Put both old and new mnemonics in all templates.
	Add target tests to pattern conditional field throughout.
	(one_cmplsi2): Make POWER and PowerPC variants.
	(mulsi3): Convert to define_expand which calls appropriate POWER
	or PowerPC pattern.
	(divsi3, udivsi3): Add patterns for PowerPC case.  Update divsi3
	define_expand for PowerPC case.
	(ashlsi3, lshrsi3, ashrsi3, extendqisi2, extendqihi2): Convert to
	define_expand which calls appropriate POWER or PowerPC pattern.
	(floating-point): Add PowerPC single-precision FP, and SF/DF sqrt
	insns for 603, 604, 620.
	(call insns): Use "nop" for magic TOC restore.
	(move data, nop): Use PowerPC extended mnemonics.

Tue Oct 12 07:58:36 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* alpha.h (SETUP_INCOMING_VARARGS): If not TARGET_FPREGS,
	save another copy of the integer regs where the FP regs would
	have gone.

	* tree.h (struct tree_type): symtab_address is now a union of
	pointer and integer.
	(TYPE_SYMTAB_ADDRESS): Refer to the integer.
	(TYPE_SYMTAB_POINTER): New macro to refer to pointer.
	* sdbout.c (KNOWN_TYPE_TAG, SET_KNOWN_TYPE_TAG): Refer to
	TYPE_SYMTAB_POINTER and remove casts.
	(tag_of_ru_type): Likewise.

	* reload1.c (reload): Fix typo in RELOAD_FOR_INSN case when
	accounting for reloads.

	* expr.c (convert_modes): Reset OLDMODE from X after we strip
	a SUBREG due to a promoted variable.

	* dbxout.c (dbxout_type, case INTEGER_TYPE): Output bounds in
	octal if type wider than HOST_WIDE_INT.
	(print_int_cst_octal): Trim bound by precision of its type.
	Avoid warning on what may be shift into sign bit.

	* bi-reverse.c: Add missing #include for hconfig.h.

	* fixincludes: Quote braces when looking for DONE files.

	* final.c (dialect_number): New variable.
	(init_final): Initialize it.
	(output_asm_insn, asm_fprintf): Support ASSEMBLER_DIALECT.

Tue Oct 12 01:34:16 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (digest_init): If traditional, allow unbraced scalar
	to initialize the first element of an aggregate.

	* cccp.c (output_line_command): Output the `4' flag only if cplusplus.
	(do_line): Handle the `4' flag.

	* final.c (final_scan_insn): Call walk_alter_subreg for operands
	that are PLUS or MULT, before constrain_operands.

Mon Oct 11 15:18:45 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* real.c (debug_real): New function.

	* regclass.c (reg_scan_mark_refs): XEXP (x, 0) in EXPR_LIST may be 0.

	* config/m68k/m68k.md (cmphi): Turn on constraints to support cmpm.w.

Mon Oct 11 13:20:54 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* unroll.c (unroll_loop): Set map->const_equiv_map_size to
	new_maxregnum.
	(copy_loop_body): When set const_age_map entry for split dest reg,
	verify that it is within the bounds of the map.
	(find_splittable_regs): Count number of biv sets, not number of
	bivs.  Don't pass result to find_splittable_givs.
	(find_splittable_givs): Delete parameter result.  Add local
	variable result.

Mon Oct 11 07:43:31 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (expand_assignment): When assigning an INDIRECT_REF to
	a RESULT_DECL, the size and source rtx were swapped.

	* function.c (trampoline_address): Don't allocate anything
	from parent function's current obstack.

	* regclass.c (reg_scan): Don't call reg_scan_mark_refs on notes
	if there aren't any.
	(reg_scan_mark_refs, case INSN_LIST, EXPR_LIST): New cases.

	* cse.c (simplify_binary_operation): Test value of
	SHIFT_COUNT_TRUNCATED if it is defined.
	* combine.c (subst, shift and rotate cases): Likewise.
	* a29k.h, alpha.h, fx80.h, i960.h, mips.h, pa.h, pyr.h, rs6000.h:
	Define SHIFT_COUNT_TRUNCATED to have a value of 1.
	* sparc.h, tahoe.h, we32k.h: Likewise.

Mon Oct 11 02:40:22 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* regclass.c (regno_last_note_uid): New vector.
	(reg_scan): Initialize regno_last_note_uid.
	Call reg_scan_mark_refs for the notes.  Pass its new arg.
	(reg_scan_mark_refs): New arg NOTE_FLAG.  Pass it recursively.
	Set regno_last_note_uid.
	* regs.h (regno_last_note_uid): Declared.
	* jump.c (jump_optimize): Use regno_last_note_uid when deciding
	whether a register is set and never used.

Sun Oct 10 22:51:01 1993  Stephen Moshier  (moshier@world.std.com)

	* real.c (asctoeg): Fix backward condition in last change.

Sun Oct 10 22:33:17 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* configure (hppa1.0-*-mach*): Use collect2.
	(hppa1.1-*-mach*): Likewise.

	* pa.c (legitimize_pic_address): Delete unused variables.
	(output_block_move, output_ior): Likewise.
	(hppa_builtin_saveregs): Likewise.
	(emit_move_sequence): Add parens as suggested by -Wall.
	(compute_frame_size): Likewise.
	(output_ascii): Return type is "void".
	(hppa_expand_prologue, import_milli): Likewise.

	* pa.c (output_function_prologue):  Pass the highest register
	number saved for ENTRY_GR and ENTRY_FR directives rather
	than the number	of registers saved.
	(hppa_expand_prologue):  Account for %r4 when it's being 
	used as a frame pointer.

Sun Oct 10 18:42:49 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (start_init): Don't set require_constant_elements
	for scalar types.

	* c-parse.in (stmt): Don't call default_conversion on top-level
	expressions.

	* c-typeck.c (convert_for_assignment): Allow silent conversion to
	a pointer from an integer 0 that resulted from arithmetic.

	* varasm.c, c-pragma.c (enum pragma_state): Defined.

	* config/i386/i386.c (restore_386_machine_status)
	(save_386_machine_status): New functions.
	(clear_386_stack_locals): Store those functions in
	save_machine_status, restore_machine_status.
	(struct machine_function): New structure definition.

	* function.h (struct function): New field `machine'.
	* function.c (save_machine_status, restore_machine_status): New vars.
	(push_function_context, pop_function_context): Use them.

	* explow.c (emit_stack_save): Cast enum array index to int.

Sun Oct 10 12:49:39 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* arm.c (const_ok_for_arm): Cast constants to unsigned HOST_WIDE_INT.
	(output_prologue): Sanity check the finite state machine.
	(output_epilogue): Delete unused variable.
	(final_prescan_insn): Always clear arm_target_insn when FSM goes to
	state 0.
	* arm.h (OPTIMIZATION_OPTIONS): Don't set flag_omit_frame_pointer,
	since this inhibits debugging.
	(ASM_OUTPUT_INTERNAL_LABEL): Always clear arm_target_insn when FSM
	goes to state 0.

Sun Oct 10 08:56:58 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* alpha.h (ALPHA_COSTS): Add missing arg to call to rtx_cost.

	* combine.c (force_to_mode, case ASHIFTRT): Verify that result of
	making a LSHIFTRT remains a shift.

	* tree.c (save_tree_status): Function_maybepermanent_obstack is the
	function_obstack of parent function.
	(restore_tree_status): Only free objects later than
	maybepermanent_firstobj in function_maybepermanent_obstack.
	(make_node): Fix logic error in PARM_DECL code.
	Put PARM_DECL in parent function's saveable obstack.
	* function.c (put_reg_into_stack): Allocate fixup structure in
	saveable obstack.

	* expr.c (expand_assignment): Don't short circuit store_expr
	when TO is a VAR_DECL since it needs special handling if promoted.

	* combine.c (subst, case SUREG): Only call force_to_mode if both
	inner and outer modes are MODE_INT.

	* mips-tfile.c (WORD_ALIGN): Fix typo in last change.

	* c-common.c (check_format_info): Support X/Open formats like "%1$d".

Sat Oct  9 22:29:17 1993  Per Bothner  (bothner@wombat.gnu.ai.mit.edu)

	* configure:  If no target is specified, try getting one
	with config.guess.
	* config.guess: New file.

Sat Oct  9 19:50:24 1993  Pat Rankin  (rankin@eql.caltech.edu)

	* c-common.c (check_format_info): Avoid ?: conditional for function
	to be called.

	* config/vax/xm-vms.h [VAXC] (bc_check_for_full_enumeration_handling)
	(current_function_has_nonlocal_goto)
	(output_deferred_addressed_constants): New macros to shorten
	external names exceeding 31 characters.

	* make-cc1.com: Move alloca handling before bytecode construction
	so that VAX C won't need two different values for LIBS.  Eliminate a
	comment about make-like functionality that referred to a capability
	which has not been implemented.

Sat Oct  9 21:53:53 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* fixincludes: Unquote a quoted `t' in a #define _IO line, for AIX
	3.2 sys/stropts.h #define _IO(t,v).
	(sys/spinlock.h): Don't copy it if it doesn't exist.
	(DPS/XDPSlib.h): Change "XDPS.h" to <DPS/XDPS.h>, for AIX.

Sat Oct  9 15:00:00 1993 DJ Delorie (dj@ctron.com)

	* configure.bat: Change $(srcdir)/ to $(srcdir)\ in commands.

Sat Oct  9 15:17:22 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (expand_expr, case ABS_EXPR): Don't copy twice into
	volatile MEM.

	* expr.c (expand_expr): Never reset ORIGINAL_TARGET.
	Pass ORIGINAL_TARGET to lang_expand_expr, not TARGET.

Sat Oct  9 13:27:10 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* tree.c (pop_momentary_nofree): New function.
	* c-parse.in (initdcl, notype_initdcl, init): Undo previous change.
	(init): Use pop_momentary_nofree if the initializer has real data.

Sat Oct  9 12:55:26 1993  Stephen Moshier  (moshier@world.std.com)

	* real.c (asctoeg): Allocate local buffer dynamically.  Count
	any lost significant digits before the decimal point.

Fri Oct  8 16:33:42 1993  Mike Stump  (mrs@rtl.cygnus.com)

	* cp-tree.h (OFFSET_REF): Override OFFSET_REFs from the back-end, as
	  we need to do something more complex with them.
	* cp-tree.def (CP_OFFSET_REF): Very similar to OFFSET_REFs, but
	  allow the front-end to handle them.

Fri Oct  8 14:40:29 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-error.c (dump_expr, REAL_CST): Support printing of real values
	when REAL_IS_NOT_DOUBLE (prints out rep in hex).

Fri Oct  8 13:54:03 1993  Mike Stump  (mrs@cygnus.com)

	* cp-type2.c (store_init_value): Move pointer to member function
	  initilization code to...
	* cp-type2.c (digest_init): here.  Allows nested pointer to member
	  functions to work.
	* cp-decl.c (build_ptrmemfunc_type): Use a real union instead of a
	  magic union, as the initialization code doesn't like them.
	* cp-tree.h (TYPE_PTRMEMFUNC_FN_TYPE): Changed to go though the
	  union.
	* cp-tree.h (DELTA2_FROM_PTRMEMFUNC, PFN_FROM_PTRMEMFUNC): Accessor
	  macros to go thought union.  Allows us to change pointer to member
	  functions a little easier.
	* cp-typeck.c (get_member_function_from_ptrfunc,
	  build_binary_op_nodefault): Changed to use new accessor macros.
	* cp-typeck.c (build_ptrmemfunc): Use new union instead.  Also, make
	  sure TREE_CONSTANT is set for CONSTANT things.
	* cp-decl.c (pfn_or_delta2_identifier): Added to cache
	  get_identifier calls.
	* cp-tree.h (pfn_or_delta2_identifier): Declare it.
	* cp-decl.c (init_decl_processing): Setup pfn_or_delta2_identifier.

Fri Oct  8 19:03:09 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* xcoffout.h (DBX_STATIC_BLOCK_START): For N_LCSYM, force change
	to text section to avoid assembler bug.

	* mips.md (movsi_unaligned): Change in comment "loads" to "stores".

	* calls.c (emit_library_call_value): Compute struct_value_size,
	and pass it to emit_call_1.

Fri Oct 8  16:13:17 1993  H.J. Lu  (hjl@nynexst.com)

	* config/i386/linux.h (STARTFILE_SPEC): Handle -p and -pg
	outermost.  Also add support for cross-linking.

Fri Oct  8 15:20:58 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* Makefile.in (cp-error.o, cp-errfn.o): Add dependency rules.

Fri Oct  8 08:00:51 1993  Eric Youngdale  (eric@kafka)

	* linux.h: Only include i386/gstabs.h if LINUX_ELF is not defined.

	* linuxelf.h:  Copy a lot of stuff from the SVr4 configuration:
	include "i386/i386.h", "i386/att.h" and "svr4.h".
	(MD_EXEC_PREFIX, MD_STARTFILE_PREFIX):  Undefine.
	(ASM_FILE_START, RETURN_IN_MEMORY, ASM_OUTPUT_ADDR_DIFF_ELT)
	(JUMP_TABLES_IN_TEXT_SECTION, DBX_REGISTER_NUMBER): Copy from sysv4.h.
	(TARGET_VERSION): Define to print "i386 Linux/ELF".
	(LINUX_ELF): Define, before we include "i386/linux.h"
	(YES_UNDERSCORE): Undefine.

Fri Oct  8 13:40:44 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h, i386/osfelf.h (CPP_SPEC): If buliding for shared
	libraries, define __SHARED__.

	* i386/osfrose.h (FUNCTION_PROFILER): If half-pic, call mcount in a
	half-pic fashion.
	(FUNCTION_PROLOGUE): If half-pic call through _mcount_ptr in a
	half-pic fashion.

	* halfpic.c (half_pic_external): New function to declare a halfpic
	identifier as always external.

	* halfpic.h (half_pic_external): declare function.
	(HALF_PIC_EXTERNAL): Declare accessor macro.

Fri Oct  8 15:03:56 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Cygnus<->FSF C++ front-end merge.
	Thu Oct  7 11:45:32 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* Makefile.in (CPLUS_OBJS): Change error.o to cp-errfn.o

	* cp-*.c, cp-parse.y: Rename lang_error and its kin to cp_error
	and the like to accomodate rms's belief structure.

	* error.c: Moved to cp-errfn.c to accomodate rms's belief structure

	Wed Oct  6 15:05:49 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-pt.c (mangle_class_name_for_template): Always use type_as_string
	for printing out type parameters.  Nuke id and type variables.

	* cp-error.c (dump_expr, INTEGER_CST): Support printing of character
	literals and large integers
	(dump_char): New function
	(dump_type): Deal with ** and *& more prettily

	* cp-pt.c (mangle_class_name_for_template): Strip out code for
	printing template parameters, replace with call to expr_as_string.

	* cp-method.c (build_overload_value): descend through
	TREE_OPERAND on NOP_EXPRs as well as NON_LVALUE_EXPRs.

	* cp-decl.c (poplevel_class): Add assertion that
	class_binding_level is not NULL.

	Tue Oct  5 11:11:25 1993  Jason Merrill  (jason@deneb.cygnus.com)

	Patches to support proper handling of system includes without munging:

	* cp-lex.h: Declare in_c_header, a flag meaning 'implicitly wrap this
	file in extern "C" { }'.

	* cp-lex.c: Define in_c_header.
	(check_newline): If in_c_header when changing files,
	pop_lang_context().
	(check_newline): If "4" seen on #line line, push_lang_context(C).

	* cccp.c: Add a new field c_system_include_path to struct
	file_name_list which indicates that the directory contains C-language
	system includes.
	(*various*): Set this flag correctly
	(is_system_include): Return 2 if C-language system include.
	(output_line_command): Output " 4" after " 3" for C-language system
	include.

	* cp-tree.h (SET_CLASSTYPE_INTERFACE_UNKNOWN_X): Coerce X to boolean
	value

	Mon Oct  4 17:03:48 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-tree.h: Add declaration for flag_external_templates

	* cp-decl.c (start_decl): Don't declare flag_external_templates

	* cp-pt.c: Ditto

	* cp-parse.y (template_instantiate_once): Ditto

	* cp-lex.c (reinit_parse_for_method): Ditto
	(cons_up_default_function): Ditto
	(extract_interface_info): Don't set interface_unknown
	if (processing_template_defn && !flag_external_templates)

	* cp-error.c (dump_type): Deal properly with pointers to member
	functions.

	* cp-pt.c (instantiate_class_template): If !flag_external_templates,
	increment interface_unknown so that nested classes will be dealt with
	properly.
	(end_template_instantiation): If !flag_external_templates,
	decrement interface_unknown.

	* cp-lex.c (cons_up_default_function): Remove redundant check
	for processing_template_defn && !flag_external_templates
	(reinit_parse_for_method): Ditto

	* cp-parse.y (template_instantiate_once):  Don't mess with
	interface_unknown

	Mon Oct  4 15:47:34 1993  Mike Stump  (mrs@cygnus.com)

	* cp-decl.c (duplicate_decls): Move setting of TREE_CHAIN after
	  all possible return 0;s as we only want to do this when we know
	  that we are dealing with a duplicate.

	* cp-decl.c (start_function): Remove my_friendly_abort 19.  Allows
	  one to declare a built-in as extern inline.

	Mon Oct  4 12:47:33 1993  John F Carr  (jfc@mit.edu)

	* cp-lex.c (consume_string): Change variable `c' to int so return
	value of getch can be assigned to it safely.  Compare return value
	of getch to EOF, not -1.

	Mon Oct  4 11:42:46 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* toplev.c (error and its kin): Use #defines for the argument
	lists for ease of adding arguments, and of moving to vfprintf when
	dje adds it.

	* error.c (lang_thing and its children): Do the same thing.

	* cp-typeck.c (build_binary_op): Do away with the kludge, now that
	error accepts more arguments.

	Sun Oct  3 16:34:39 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-error.c: Remove all traces of in_parmlist

	Sun Oct  3 13:54:57 1993  Mike Stump  (mrs@cygnus.com)

	* cp-call.c (convert_harshness_ansi, convert_harshness_old): Handle
	  pointer to function members properly.

	Fri Oct  1 16:42:30 1993  Mike Stump  (mrs@cygnus.com)

	* cp-error.c (dump_function_decl, dump_function_name): Make static
	  to match prototype.

	Fri Oct  1 15:23:31 1993  Mike Stump  (mrs@cygnus.com)

	* cp-typeck.c (build_ptrmemfunc): Move some code into the virtual
	  conditional part.  Fixes problem with core core dumping when the
	  class that we want to build a pointer to member function for doesn't
	  have any virtual functions.

	Thu Sep 30 18:15:29 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-parse.y (id_scope): Print the name of the invalid scope.
	(unary_expr): Add .scope new typespec '(' typespec ')' expansion
	which just gives an error.

	* cp-typeck.c (build_binary_op): Print more helpful message for
	a missing member operator (print the desired type involved).
	Very kludgey due to error()'s two-arg limit.

	* error.c (lang_thing): Abort if more than NARGS (currently 2) are
	passed, since this is likely to cause a seg fault elsewhere anyway.

	Thu Sep 30 14:19:28 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* g++int.texi: Add error reporting section, make `makeinfo'able

	* cp-type2.c (my_friendly_abort): Deal with recursive calls

	Thu Sep 30 12:24:33 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl2.c (grok_array_decl): Don't pedwarn on reversing the array
	and its index in `a[b]'.

	* cp-typeck.c (build_conditional_expr): Make pointer type mismatch
	in a conditional expression get a pedwarn.
	(build_binary_op_nodefault): Make comparison between different
	pointer types lacking a cast get a pedwarn.
	(build_modify_expr): Don't strip the NOP_EXPRs, since we're using
	the rhs in a non-lvalue context.
	(convert_for_assignment): Allow conversion of 0 to a pointer, but
	not a 0 that results from casting or folding.

	Thu Sep 30 11:24:59 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-typeck.c (build_modify_expr): For memberwise assignment,
	put nop_expr (reference_type (lhstype)) at the end of of the list so
	that the expression has the correct type.

	* error.c (lang_thing): Don't rely on STDC array initialization

	Tue Sep 28 18:20:05 1993  Mike Stump  (mrs@cygnus.com)

	* cp-init.c (build_virtual_init): Use get_binfo and
	  convert_pointer_to_real, to find the right basetype to convert to,
	  instead of trying to use convert_pointer_to, as convert_pointer_to
	  doesn't handle complex MI situations.  Cures a bogus "cannot
	  convert a pointer of type `B' to a pointer of type `A'" when the
	  compiler is initializing virtual table pointers.

	Mon Sep 27 14:54:42 1993  Mike Stump  (mrs@cygnus.com)

	* cp-call.c (build_method_call): Use get_binfo and
	  convert_pointer_to_real, to find the right basetype to convert to,
	  instead of trying to use convert_pointer_to, as convert_pointer_to
	  doesn't handle complex MI situations.  Cures a bogus "cannot
	  convert a pointer of type `B' to a pointer of type `A'" when the
	  compiler is setting up the `this' pointer.
	* cp-cvt.c (convert_pointer_to): Just call convert_pointer_to_real
	  to implement functionality.
	* cp-cvt.c (convert_pointer_to_real): New routine.  Uses new
	  functionality in get_base_distance to figure out which exact
	  parent we want to convert to.
	* cp-search.c (get_base_distance_recursive, get_base_distance):
	  Modify to support searching for a specific PARENT given as a binfo
	  from our hierarchy.
	* cp-typee.h (convert_pointer_to_real): Declare new routine.

	Mon Sep 27 13:02:51 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-type2.c (my_friendly_abort): Undo previous change

	* cp-*.c: Use lang_error instead of error_with_decl,
	error_with_aggr_type, etc.  Not complete; I only changed the easy
	cases and a few of the more obscure ones.  Please convert calls
	over when you're working on an appropriate section.

	* cp-method.c: Strip out error reporting code

	* Makefile.in (CPLUS_OBJS): Add error.o and cp-error.o

	* cp-error.c: New file, contains call-back functions for C++.
	The actual output code is an extensively overhauled version of the
	code from cp-method.c.
	Don't call my_friendly_* to avoid undesirable recursion.

	* error.c: New file, provides call-back mechanism for language-
	dependent error reporting.

	Fri Sep 24 13:52:27 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-type2.c (my_friendly_abort): Don't die quietly if 
	errorcount or sorrycount are positive, die loudly.

Fri Oct  8 13:58:13 1993  Doug Evans  (dje@cygnus.com)

	* loop.c (scan_loop): When skipping consecutive insns,
	don't count notes.

Fri Oct  8 10:41:07 1993  Chip Salzenberg  (chip@fin.uucp)

	* c-common.c (check_function_format): Correct error in last
	change.

Fri Oct  8 08:10:03 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-parse.in (initdcl, notype_initdcl): Call push_momentary and
	pop_momentary here.
	(init): Not here.

Fri Oct  8 06:35:07 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* dbxout.c (dbxout_type, case INTEGER_TYPE): Correctly check
	for type smaller than `integer'.

	* expr.c (expand_expr, case MAX_EXPR): Don't use TARGET directly
	if it is a volatile MEM.

	* i386/t-aix, i386/t-isc, i386/t-osfrose, i386/t-sco, mips/t-osfrose:
	Remove LIMITS_H; hasn't been used for a while.

	* configure: Add EXTRA_PASSES like we add EXTRA_HEADERS.
	Correct EXTRA_HEADERS handling to accept multiple names.
	(mips-*-*): Set extra_passes to mips-tfile and mips-tdump when
	we use t-mips, t-bsd, t-svr[34], and t-ultrix.
	* Makefile.in (mips-tfile, mips-tfile.o, mips-tdump, mips-tdump.o):
	New rules.
	* mips-tfile.c: Don't define memory functions on Alpha.
	(Ptrdiff_t): Always `long'.
	(WORD_ALIGN): Make portable.
	* mips/t-bsd, t-mips, t-svr3, t-svr4, t-ultrix: Remove
	definition of EXTRA_PASSES and remove rules for mips-* files.

	* dbxout.c (dbxout_parms): Don't confuse a parameter at an
	offset of zero from AP or FP with one that has variable size.

	* calls.c (emit_library_call): Fix typo in last change; should
	use Pmode instead of SImode.

Fri Oct  8 00:34:39 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-decl.c (finish_decl): Error if block-scope static var
	has incomplete type.

	* expr.c (expand_expr, case VAR_DECL): If decl wasn't laid out,
	lay it out now, and fix the rtl's mode.

Thu Oct  7 12:30:10 1993  Chip Salzenberg  (chip@fin.uucp)

	* c-decl.c (complete_array_type): Correctly set MAXINDEX to
	one less than array size.

Thu Oct  7 20:44:41 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* c-typeck.c (build_binary_op): For *_DIV_EXPR, set shorten based
	on orig_op0.

Thu Oct  7 18:19:17 1993  Jim Wilson  (wilson@cygnus.com)

	* xm-mips.h (HAVE_VPRINTF): Correct typo, is VPRINTF not VFPRINTF.

	* Makefile.in (LIB2FUNCS): Add _fixtfdi, _fixunstfdi, _floatditf.

Thu Oct  7 14:58:02 1993  Michael Meissner  (meissner@osf.org)

	* configure (i386-osf): ELF on OSF/1 does not need collect2.

Thu Oct  7 17:38:25 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cccp.c (main): New option -lang-c-c++-comments.

Thu Oct  7 16:40:38 1993  Michael Meissner  (meissner@osf.org)

	* config/i386/osfrose.h (OSF_PROFILE_BEFORE_PROLOGUE): New macro
	to determine whether profiling goes before the function prologue
	or after.  New style profiling goes before in order to save
	getting and saving the function's callers address or have mcount
	'know' there is a frame pointer.  Old style profiling using mcount
	and some ELF PIC profiling goes after the prologue.
	(FUNCTION_PROLOGUE): Redefine in order to get new style profiling
	before the function prologue if desired.
	(FUNCTION_PROFILER): Do not put a profile call if it already has
	been put out in the prologue.  Change new style profiling to call
	through _mcount_ptr instead of _real_mcount.  Propigate ROSE brain
	damage regarding mcount being in the users name space to ELF.
	(SUBTARGET_SWITCHES): Make -mmcount default again instead of
	-mno-mmcount.

	* i386.h (FINALIZE_PIC): Add macro to set the variable
	current_function_uses_pic_offset_table if either -p or -a switches
	are used.

Thu Oct  7 17:07:57 1993  Ian Lance Taylor  (ian@cygnus.com)

	* rtl.c (byte_mode, word_mode): Move to emit-rtl.c.
	(init_rtl): Move initialization of byte_mode and word_mode to
	init_emit_once.
	* emit_rtl.c (byte_mode, word_mode): Moved from rtl.c.
	(init_emit_once): Moved in initialization of bytes_mode and
	word_mode from init_rtl.

Thu Oct  7 11:11:25 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cccp.c (struct file_name_list): Add new field c_system_include_path.
	(*various*): Set this flag correctly
	(is_system_include): Return 2 if C-language system include.
	(output_line_command): Output " 4" after " 3" for C-language system
	include.

Thu Oct  7 14:45:20 1993  Doug Evans  (dje@canuck.cygnus.com)

	* Makefile.in (install-dir): Fix typo.
	(install-common): Remove obsolete comment.
	(install-common): Install native g++ only if not cross. 

Thu Oct  7 11:27:45 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* calls.c (emit_library_call, emit_library_call_value):
	Allocate a temp slot if arg must be passed by reference.

	* gcc.c (read_specs): Fix call to bzero.

Thu Oct  7 08:53:57 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* alpha.md: Clean up usage of commutative declarator `%'.

Thu Oct  7 08:14:46 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* i860/xm-fx2800.h (HAVE_VPRINTF): Fix typo; was HAVE_VFPRINTF.

	* xm-alpha.h: Always declare malloc, realloc, etc, to be void *.

	* combine.c (force_to_mode): Sign-extend constant being truncated.

Wed Oct  6 18:53:43 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* bi-lexer.c (xmalloc, xrealloc): Cast the result of malloc, realloc.

Wed Oct  6 15:30:39 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h (FUNCTION_PROFILER): Define to pass the function
	address, its caller, and the unique label address through the
	_real_mcount pointer, unless -mmcount is used, in which case use
	the old calling sequence.
	(SUBTARGET_SWITCHES): Add -mmcount, -mno-mcount support.

Wed Oct  6 15:29:40 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.c (output_function_prologue): Pass on information about the
	number of callee saved general and floating point registers which
	are saved by the current function's prologue.
	(hppa_expand_prologue): Keep track of the number of callee
	register saves done for general and floating point registers.

Wed Oct  6 13:50:03 1993  Ian Lance Taylor  (ian@cygnus.com)

	* cexp.y (MAX_CHAR_TYPE_SIZE, MAX_INT_TYPE_SIZE,
	MAX_LONG_TYPE_SIZE, MAX_WCHAR_TYPE_SIZE): Define.
	(yylex): Use them instead of the non-MAX versions, to avoid
	dependencies on target_flags.

Wed Oct  6 13:47:13 1993  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)

	* combine.c (try_combine): New variable i3_subst_into_i2.
	Set it for special case of substituting i3 into i2.  Use it near
	end to detect when special case succeeded.  Move i2notes to
	i3notes for this special case.
	(distribute_notes, REG_UNUSED case): Ignore all REG_UNUSED notes
	except those from I3.

Wed Oct  6 13:14:13 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (build_c_cast): When making a CONSTRUCTOR, provide
	the dummy first operand.

	* real.c (real_value_truncate): Correct etrunci argument
	in case SImode.

Wed Oct  6 06:55:05 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* final.c (asm_fprintf): Add cases for 'w' and 'l'.

	* Makefile.in (bi-opcode.o): Includes hconfig.h.
	* bi-lexer.c: Remove declarations of malloc and realloc.
	* bi-opcode.c: Include hconfig.h.
	* bi-parser.y: Remove declaration of malloc.

	* regclass.c (record_reg_classes): Check if operands are the same
	by seeing if they are the same register.

	* cse.c (record_jump_cond): Rehash OP1 if OP0's insert_regs returns
	nonzero.

	* calls.c (expand_call): Add yet another assignment to MEM_IN_STRUCT_P.

Wed Oct  6 00:08:28 1993  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)

	* sparc.c (uns_small_int, uns_arith_operand): New functions.
	* sparc.md (umulsidi3): Use uns_arith_operand not arith_operand.
	(const_umulsidi3): Use uns_small_int not small_int.

	* sparc.h (SELECT_CC_MODE): Add support for ASHIFT.
	* sparc.md (ashlsi3+1, ashlsi3+2): New patterns to replace shift
	and compare with addcc.

Tue Oct  5 16:25:32 1993  Jim Wilson  (wilson@cygnus.com)

	* sched.c (sched_analyze_2): Make volatile asms depend on all
	pseudo registers.

	* mips.c (mips_expand_prologue): Handle structure return values as
	the first argument if necessary.

	* mips.h (CLASS_MAX_NREGS): For DFmode and !TARGET_FLOAT64 case,
	return 2 not 4.
	(CLASS_UNITS): Take size parameter instead of num (words).

	* c-typeck.c (output_init_element): When try to copy FIELD if it
	is an interger constant, first check to make sure it is nonzero.

	* reorg.c (fill_simple_delay_slots): When take insn from a
	following unconditional branch target, if new_label is zero, must
	set it to the result of find_end_label ().

	* iris3.h (INITIALIZE_TRAMPOLINE, TRANSFER_FROM_TRAMPOLINE):
	Delete.
	* mips.h (INITIALIZE_TRAMPOLINE): Delete #ifndef/#endif.  Change
	function name from __enable_execute_stack to __gcc_flush_cache.
	(TRANSFER_FROM_TRAMPOLINE): Likewise.  Delete code calling
	mprotect.  Uncomment code calling cacheflush.

Tue Oct  5 16:11:53 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* toplev.c (error and its kin): Use #defines for the argument
	lists for ease of adding arguments and add one arg.

Tue Oct  5 16:05:11 1993  Tor Egge  (tegge@pvv.unit.no)

	* cccp.c (rescan): Don't expand an identifier after a '#'.

Tue Oct  5 15:15:52 1993   Chip Salzenberg  (chip@fin.uucp)

	Move format warning code to c-common.c for use with C++.
	* c-tree.h (init_function_format_info, record_function_format,
	check_function_format): Declare.
	* c-common.c: Include <ctype.h>; avoid home-grown ISDIGIT.
	(decl_attributes): Call record_function_format with DECL_NAME
	and also DECL_ASSEMBLER_NAME.
	(struct format_char_info): Moved here from c-typeck.c.
	(print_char_table): Likewise; renamed from print_table.
	(scan_char_table): Likewise; renamed from scan_table.
	(struct function_format_info): Likewise; add assembler_name.
	(function_format_list): Make list, not array.
	(init_function_format_info): Likewise; renamed from
	init_format_info_table.
	(record_function_format): Likewise; renamed from
	record_format_info; record assembler_name.
	(check_format_info): Likewise; renamed from check_format.
	(check_function_format): New interface that does not require
	knowledge of struct function_format_info.
	* c-decl.c (init_decl_processing): Call init_function_format_info.
	* c-typeck.c (struct format_char_info, print_table, scan_table,
	struct function_info, function_info_entries, function_info_table,
	record_format_info, init_format_info_table, check_format): Moved
	to c-common.c.
	(build_function_call): Call check_function_format.

Tue Oct  5 14:08:18 1993  Wolfgang Stukenbrock (wgstuken@informatik.uni-erlangen.de)

	* gcc.c (choose_temp_base): Correct size allocated for temp_filename.

Tue Oct  5 06:34:34 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* tree.c (contains_placeholder_p): Return 0 for CONSTRUCTOR.
	(substitute_in_expr): Don't allow CONSTRUCTOR.

	* tree.c (make_node, case 'd'): Refine in which obstack
	PARM_DECLs are allocated.

	* calls.c (expand_call): Properly test if we need to promote
	operand; use convert_modes instead of convert_to_mode.
	* expr.c (convert_modes): Properly handle extending constants
	since we might be changing signedness.

	* gcc.c (read_specs): Make a null entry at end of `compilers'
	when reading new entry from file.

	* tree.c (contains_placeholder): Return 0 for WITH_RECORD_EXPR.

	* bi-arity.c, bi-lexer.c, bi-opname.c, bi-parser.y: Include hconfig.h.
	* Makefile.in (bi-arity.o, bi-lexer.o, bi-opname.o, bi-parser.o):
	Likewise.

	* bc-emit.c (dconst[012], dconstm1): Remove redundant definition.

Tue Oct  5 06:24:43 1993  Lisa Repka  (lisa@MicroUnity.com)

	* varasm.c (decode_rtx_const, case CONST_DOUBLE): Only use mode
	of X if it is not VOIDmode.

Tue Oct  5 00:45:30 1993  James Van Artsdalen  (james@bigtex.cactus.org)

	* i386/i386.c (output_to_reg): Handle XFmode write to MEM by
	reading back value after write if source doesn't die.
	* i386/i386.md (pushxf,movxf,extenddfxf2,extendsfxf2): Likewise.

	* i386/i386.md (movxf,extenddfxf2,extendsfxf2): Don't emit fld
	before calling output_to_reg: output_to_reg does that now.

	* i386/i386.h (FIXED_REGISTERS): Don't fix hard reg st7 if XFmode
	is enabled.

	* reg-stack.c (move_for_stack_reg): If the 387 regstack is not
	full when doing an XFmode write from 387 to MEM, copy the source
	reg and write the copy.

Mon Oct  4 18:40:51 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* regclass.c (record_reg_classes): There is no alt_cost
	for a pair of matching args if they are the same pseudo reg.

	* varasm.c (bc_output_ascii): New function.
	(assemble_string): Use it.
	(assemble_static_space, assemble_variable): Put braces around uses
	of BC_OUTPUT_COMMON and BC_OUTPUT_LOCAL.

Mon Oct  4 18:03:04 1993  Stephen L Moshier  (moshier@world.std.com)

	* expr.c (bc_init_mode_to_opcode_maps, bc_expand_expr): Cast enum
	array indices to int.
	(bc_load_memory, bc_store_memory): Likewise.
	(bc_runtime_type_code): Cast enum logical operand to int.
	* bc-emit.c (bc_emit_bytecode): Cast enum array indices to int.
	* bc-optab.c (deduce_conversion, emit_typecode_conversion): Likewise.
	(bc_init_mode_to_code_map, preferred_typecode): Likewise.
	(bc_expand_binary_operation, bc_expand_unary_operation): Likewise.
	(bc_expand_increment): Likewise.
	* bc-typecd.h: Cast enum arithmetic and logical operands to int.

Mon Oct  4 05:52:21 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* a29k.c (incoming_regs): Only use 16 registers for parameter
	passing.

	* tree.c (build_string): Remove previous change and comment why
	string text has to be in saveable_obstack.
	* varasm.c (output_constant_def): Remove last change; no longer needed.

Sun Oct  3 18:51:19 1993  James Van Artsdalen  (james@bigtex.cactus.org)

	* i386/i386.c (output_op_from_reg):  Handle 3-word XFmode values.
	(output_to_reg): Likewise.
	(output_move_double): Handle XFmode operands.
	(output_move_const_single): Use REAL_VALUE_TO_TARGET_SINGLE.
	(print_operand): Add letter `T', size `12'.  Use REAL_VALUE
	macros to convert floating point operands.
	(convert_387_op):  Add XFmode to case FLOAT_EXTEND.

	* i386/i386.h (LONG_DOUBLE_TYPE_SIZE): Define as 96.
	(FIXED_REGISTERS): If XFmode enabled, hard reg st7 is fixed.
	(ASM_OUTPUT_DOUBLE): Use REAL_VALUE_... macros.
	(ASM_OUTPUT_FLOAT): Likewise.
	(ASM_OUTPUT_LONG_DOUBLE): New macro.
	(PRINT_REG):  Add size case 12.
	(DEBUG_PRINT_REG):  Likewise.

	* i386/i386.md: (tstxf_cc, tstxf, cmpxf, cmpxf_cc, cmpxf_ccfpeq,
	swapxf, movxf, extenddfxf2, extendsfxf2, truncxfsf2, truncxfdf2,
	fixuns_truncxfsi2, fix_truncxfdi2, fix_truncxfsi2, floatsixf2,
	floatdixf2, addxf3, subxf3, mulxf3, divxf3, negxf2, absxf2,
	sqrtxf2): New patterns.

	* i386/next.h,i386/osfrose.h,i386/sysv4.h
	(ASM_OUTPUT_DOUBLE,ASM_OUTPUT_FLOAT): Use REAL_VALUE_ macros.
	(ASM_OUTPUT_LONG_DOUBLE): New macro.

	* i386/bsd.h,i386/sco4.h (ASM_OUTPUT_DOUBLE): Deleted,
	use default version.

	* i386/next.h,i386/sco.h (VALUE_REGNO): Add case XFmode.

Sun Oct  3 16:35:05 1993  Michael Meissner  (meissner@wombat.gnu.ai.mit.edu)

	* collect2.c (read_file): Fix typo in prototype.

Sun Oct  3 18:32:46 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (bytecode.realclean): Don't delete bi-lexer.c.

Sun Oct  3 19:45:02 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* gcc.c (default_compilers): Add rules for Ada.
	* toplev.c (lang_options): Add temporary parameter "gnat".

	* tree.c (staticp): DECL_EXTERNAL is not defined for CONSTRUCTOR.

	* tree.def (PLACEHOLDER_EXPR, WITH_RECORD_EXPR): New tree codes.
	* tree.c (save_expr): Don't evaluate something containing a 
	PLACEHOLDER_EXPR.
	(contains_placeholder_p, substitute_in_{expr,type}): New functions.
	* tree.h: Add declarations for new functions.
	* calls.c (expand_call): Pass objects who size depends on the
	contents of the object by invisible reference.
	* function.c (assign_parms): Likewise.
	* explow.c (expr_size): If the size contains a PLACEHOLDER_EXPR,
	surround it with a WITH_RECORD_EXPR.
	* expr.c (store_expr): Use expr_size value, not size_int.
	(store_constructor): Handle case of variable position and allow
	it to contain a PLACEHOLDER_EXPR.
	(get_inner_reference): Make a WITH_RECORD_EXPR if required.
	(expand_expr, case PLACEHOLDER_EXPR, WITH_RECORD_EXPR): New cases.
	(expand_expr, case ARRAY_REF): Make WITH_RECORD_EXPR expressions
	when needed.

	* calls.c (expand_call): Set MEM_IN_STRUCT_P in stack slot if
	appropriate.

	* varasm.c (output_constant_def): Copy string as well as string
	node when deferring output of constants.

	* configure (i370-*): Renamed tm-mvs.h to mvs.h.
	* config/i370/mvs.h: Renamed from tm-mvs.h.

Sun Oct  3 12:50:57 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* arm.h (function definitions): Add new functions definitions.
	(arm_condition_codes): make this externally visible.
	(STARTFILE_SPEC): Move to riscix.h and riscix1-1.h.
	(CPP_PREDEFINES): Move old defn to riscix.h and riscix1-1.h, add
	generaic default definition.
	(CPP_SPEC): Define for generic implementation, pass cpu variant 
	defn to pre-processor.
	(TARGET_VERSION): Indicate this is generic variant.
	(TARGET_6): New macro, set when compiling for arm6 in 32bit mode.
	(ARM_EXTRA_TARGET_SWITCHES): New macro, hook for os dependent files
	to make additions to TARGET_SWITCHES. Default to null.
	(processor_type): new enum type defining processor variant for
	attributes.
	(arm_cpu_attr): Macro to get at cpu type from attributes.
	(TARGET_WHEN_DEBUGGING): remove non-generic definitions
	(OVERRIDE_OPTIONS): Set processor type for attributes.
	(OPTIMIZE_OPTIONS): Set flag_force_mem.
	(PROMOTE_MODE): Promote byte constants unsigned.
	(ENABLE_XF_PATTERNS): Define, do not enable XFmode insns by default
	-- it tends to crash riscix.
	(REAL_ARITHMETIC): Define.
	(CONSTANT_ALIGNMENT): Align string constants so that we can access
	them faster.
	(TARGET_FLOAT_FORMAT): Is IEEE_FLOAT_FORMAT.
	(FIRST_PSEUDO_REGISTER): Increase to support fake registers.
	(FIXED_REGISTERS): Describe behaviours of fake regs.
	(CALL_USED_REGISTERS): Likewise.
	(HARD_REGNO_NREGS): Deal with fake frame and argument registers.
	(HARD_REGNO_MODE_OK): Likewise.
	(FRAME_POINTER_REGNUM): Make this a fake register)
	(HARD_FRAME_POINTER_REGNUM): Define. set to reg 11 (fp).
	(FRAME_POINTER_REQUIRED): It is if TARGET_APCS.
	(ARG_POINTER_REGNUM): Set to new fake register.
	(CC_REGNUM): Define, set to fake register.
	(REG_ALLOC_ORDER): Adjust to get better allocation in small functions.
	Add fake registers.
	(REG_CLASS_CONTENTS): Add new fakes.
	(REGNO_REG_CLASS): Likewise.
	(CONST_OK_FOR_LETTER_P): Add recognition for negated and inverted 
	constant integers.
	(EXTRA_CONSTRAINT): Add 'Q' to recognize MEM (REG). Add 'S' for
	symbols in the text segment.
	(CONST_DOUBLE_OK_FOR_LETTER_P): Add 'H' for negated fp constants.
	(SECONDARY_OUTPUT_RELOAD_CLASS): Define. Needed to store DFmode held
	in SImode regs.
	(REGISTER_MOVE_COST): Make this more expensive than memory for
	float<->int moves.
	(USE_RETURN_INSN): Define, call function.
	(ELIMINABLE_REGS): Define to eliminate fake regs.
	(CAN_ELIMINATE): Likewise.
	(INITIAL_ELIMINATION_OFFSET): Likewise.
	(INITIAL_FRAME_POINTER_OFFSET): Delete.
	(REGNO_OK_FOR_BASE_P): Add fake regs.
	(MAX_REGS_PER_ADDRESS): Is only 2; shifting by reg not allowed in addr.
	(CONSTANT_ADDRESS_P): Accept addresses with the symbol_ref flag set.
	(LEGITIMATE_CONSTANT): Accept negated floats; also constant addresses.
	(ENCODE_SECTION_INFO): Mark strings that will go in the text segment
	with the symbol_ref flag.
	(REG_OK_FOR_BASE_P [!REG_OK_STRICT]): Add new fakes.
	(REG_OK_FOR_PRE_POST_P [!REG_OK_STRICT]): Likewise.
	(REG_OK_FOR_PRE_POST_P [REG_OK_STRICT]): Likewise.
	(GO_IF_LEGITIMATE_INDEX): constant FLOAT indicees must be word
	aligned; be more restrictive about multi-reg ints; allow all legal
	shift operations; check boundary conditions more carefully.
	(DEFAULT_SIGNED_CHAR): Remove os dependent alternatives.
	(LOADS_ZERO_EXTEND): Define; only QImode loads do.
	(HAVE_VPRINTF): Move to xm-arm.h
	(SHIFT_COUNT_TRUNCATED): Not true -- Delete.
	(CONST_COSTS): Define; give the cost of constants.
	(RTX_COSTS): Define; give the cost of rtl.
	(MEMORY_MOVE_COST): Is expensive.
	(BRANCH_COST): Set high to get conditional instructions.
	(ADDRESS_COST): Are all the same.
	(NOTICE_UPDATE_CC): Delete.
	(EXTRA_CC_MODES): Add a no overflow mode and floating point modes.
	(EXTRA_CC_NAMES): Likewise.
	(SELECT_CC_MODE): Return the appropriate mode.
	(STORE_FLAG_VALUE): Define.
	(PREDICATE_CODES): Define, show what they are.
	(ARM_OS_NAME): Supply generic version.
	(ASM_FILE_START): Print appropriate OS name.
	(REGISTER_NAMES): Add fakes.
	(DBX_OUTPUT_MAIN_SOURCE_FILENAME): set desc field to compiler version
	number expected by dbx (RISCIX hack).
	(ASM_OUTPUT_INTERNAL_LABEL): Don't reset arm_ccfsm_state if label isn't
	a code ('L') label.
	(ASM_OUTPUT_LONG_DOUBLE): Define for XFmode.
	(ASM_OUTPUT_DOUBLE): Use REAL_ARITMETIC routines.
	(ASM_OUTPUT_FLOAT): Likewise.
	(ASM_OUTPUT_OPCODE): Change of arm_ccfsm_state is now handled by insns
	that need to change it.
	(PRINT_OPERAND): %d is replaced by appropriate condition characters,
	%D by the inverse of those given. CONST_DOUBLEs use REAL_ARITHMETIC
	functions.
	(PRINT_OPERAND_ADDRESS): Support all the shift types.
	(INIT_CUMULATIVE_ARGS): Add missing bracket.

	* riscix.h: New file -- OS dependent defintitions for riscix 1.2 and
	above.

	* riscix1-1.h: New file -- OS dependent definitions for riscix before
	version 1.2

	* rix-gas.h: New file -- riscix 1.2 and above, but with an assembler
	which supports stabs.

	* arm.c (arm_compare_op0, arm_compare_op1, arm_compare_fp): New
	variables.
	(arm_cpu): New variable.
	(lr_save_eliminated): New variable.
	(arm_condition_codes): delete definition.
	(return_used_this_function): New variable.
	(use_return_insn): New function.
	(const_ok_for_arm): Use HOST_WIDE_INT; rewrite to work if
	HOST_WIDE_INT > 32 bits.
	(fpa_consts_inited, strings_fpa): New variables.
	(init_fpa_table): New function, initialize above.
	(const_double_rtx_ok_for_fpu): Rewrite using fpa_consts_inited and
	REAL_ARITHMETIC functions.
	(neg_const_double_rtx_ok_for_fpu): New function.
	(s_register_operand): New function, as register_operand, but don't
	accept SUBREG (MEM).
	(reload_memory_operand): New function.
	(arm_rhs_operand): Use s_register_operand.
	(arm_rhsm_operand): New function.
	(arm_add_operand): New function.
	(arm_not_operand): New function.
	(fpu_rhs_operand): Use s_register_operand.
	(fpu_add_operand): New function.
	(di_operand): Use s_register_operand.
	(di_operand, case MEM): address must be offsettable.
	(index_operand): Use s_register_operand.
	(const_shift_operand): New function.
	(shift_operator): Also accept MULT by power of two.
	(equality_operator): New function.
	(minmax_operator): New function.
	(cc_register): New function.
	(minmax_code): New function.
	(adjacent_mem_locations): New function.
	(load_multiple_operation): New function.
	(store_multiple_operation): New function.
	(arm_gen_load_multiple): New function.
	(arm_gen_store_multiple): New function.
	(gen_compare_reg): New function.
	(arm_backwards_branch): New function.
	(short_branch): New function.
	(arm_insn_not_targeted): New function.
	(fp_immediate_constant): New function.
	(eliminate_lr2ip): New function.
	(output_call_mem): New function.
	(output_mov_long_double_fpu_from_arm): New function.
	(output_mov_long_double_arm_from_fpu): New function.
	(output_mov_long_double_arm_from_arm): New function.
	(output_move_double): output constants using output_move_immediate;
	sign_extend CONST_INTs; handle PRE/POST INCs.
	(shift_instr): Handle MULT.
	(output_shift_compare): New function.
	(pattern_really_clobbers_lr): New function.
	(function_really_clobbers_lr): New function.
	(output_return_instruction): New function.
	(output_prologue): Determine whether tail calling is possible,
	compensate for this when saving registers. Re-initialize
	return_used_this_function; use HARD_FRAME_POINTER_REGNUM, when
	saving floating point regs.
	(output_epilogue): Epilogue isn't needed if return_used_this_function;
	use HARD_FRAME_POINTER_REGNUM when restoring floating point regs
	and there is a stack frame; Arm 6 requires different return
	instruction.
	(output_load_symbol): New function.
	(final_prescan_insn): Add support for RETURN patterns; can also
	conditionalize and target a RETURN; use attributes to determine
	whether condition codes are set or clobbered; add new case CALL_INSN
	to switch, fail if Arm 6; support a jump inside a parallel; call
	recog () before returning to recover from using attributes on other 
	insns.
	
	* arm.md (type): New attribute for scheduling.
	(cpu): New attribute for cpu type for use in conds attribute.
	(conds): New attribute to describe actions on condition codes, set in
	insns.
	(length): New attribute, set in insns.
	(write_conflict): New attribute describing conflicts with the write
	buffer.
	(fpa): New function unit for floating point co-processor.
	(write_buf): New function unit for Arm 6 write buffer.
	Most patterns: use s_register_operand instead of register_operand.
	Most patterns: Don't use general operand and then expect reload to
	do the work.
	(adddi3): op0 can be the same as ops1 or 2; clobbers condition codes.
	New unnamed patterns to add an SImode operand to a DImode op.
	(addsi3): accept constants that can be catered for using sub.
	New unnamed patterns that set conditions on add.
	(incscc): new pattern, conditional increment.
	New split to add some numbers in two insns.
	(addsf3): Use REAL_ARITHMETIC; support -ve immediates.
	(adddf3): Likewise.
	(FLOAT_EXTEND and ADD): New unnamed patterns.
	(addxf3): New pattern.
	(subdi3): Allow input and output operands to overlap exactly.
	(SUB DImode and SImode): New unnamed patterns.
	(subsi3): Don't accept a constant as last operand, it will never be
	matched.
	(SUB and set CC) New unnamed patterns.
	(decscc): new pattern, conditional decrment.
	(subdf3): Fix bad case alternative.
	(FLOAT_EXTEND and SUB): New unnamed patterns.
	(subxf3): New pattern.
	(mulsi3): Allow op2 to be the same as op0
	(MULT and set CC): New unnamed patterns.
	(MULT and ADD): Ops 2 and 3 can match op 0.
	(MULT, ADD and set CC): New unnamed patterns.
	(mulsf3): use fmls for faster multiply.
	(FLOAT_EXTEND and MULT): New unnamed patterns.
	(mulxf3): New pattern.
	(divsf3): use dvfs and rdfs for faster divide.
	(FLOAT_EXTEND and DIV): New unnamed patterns.
	(divxf3): New pattern.
	(FLOAT_EXTEND and MOD): New unnamed patterns.
	(modxf3): New pattern.
	(anddi3): op 0 can be the same as ops1 or 2.
	(*_EXTEND and AND): New unnamed patterns
	(andsi3): Also accept constants that can be handled with bic
	instruction.
	(AND and set CC): New unnamed patterns.
	(andcbsi3): Delete, this can't be generated any more.
	(NOT then AND): New unnamed patterns.
	(NOT then AND and set CC): Likewise.
	(iordi3): Ops 1 and 2 can match op 0.
	(*_EXTEND and IOR): New unnamed patterns.
	(iorsi3): Only accept a valid rhs operand for op 2.
	(IOR and set CC): New unnamed patterns.
	(xordi3): New pattern.
	(*_EXTEND and XOR): New unnamed patterns.
	(xorsi3): Only accept a valid rhs operand for op 2.
	(XOR and set CC): New unnamed patterns.
	(split pattern): Complex pattern with NOT, AND, and IOR, can
	sometimes produce better code if reordered.
	(AND (IOR () NOT ())): Special pattern to recognize spilt above.
	([su]{min,max}si3): New patterns.
	(set memory from MIN/MAX operation): New pattern.
	(Arithmetic on MIN/MAX operation): New pattern.
	(ashlsi3, ashrsi3, lshrsi3, rotrsi3): Only accept a valid rsh for op2.
	(unnamed LSHIFT pattern): likewise.
	(SHIFT and set CC): New unnamed patterns.
	(SHIFT and NOT): New unnamed pattern.
	(SHIFT, NOT and set CC): New unnamed patterns.
	(negdi2): operand1 can be the same as op 0.
	(FLOAT_EXTEND and NEG): New unsigned pattern.
	(negxf2): New pattern.
	(abssi2): New pattern.
	(ABS and NEG): New unnamed pattern.
	(FLOAT_EXTEND and ABS): New unnamed pattern.
	(absxf2): New pattern.
	(FLOAT_EXTEND and SQRT): New unnamed pattern.
	(sqrtxf2): New pattern.
	({sin,cos}{sf,df,xf}2): New patterns.
	(FLOAT_EXTEND and SIN/COS): New unnamed patterns.
	(one_cmpldi2): New pattern.
	(NOT and set CC): New unnamed patterns.
	(floatsixf2, fix_truncsfsi2, fix_truncdfsi2, fix_truncxfsi2): New
	patterns.
	(truncxfsf2, truncxfdf2): New patterns.
	(zero_extendsidi2, zero_extendqidi2, extendsidi2): New patterns.
	(ZERO_EXTEND and set CC): New patterns.
	(extend{sf,df}xf2): New patterns.
	(movdi): Constrains must accept PRE/POST INC/DEC.
	(movsi): make an expand that splits up integers and unsupported
	moves.
	(unnamed pattern to match movsi): New, don't allow things to
	be moved back together again.
	(REG-REG copy and set CC): New unnamed pattern.
	(restorehi): use plus_constant in expansion code, not PLUS in RTL part.
	(storehi, storeinthi): likewise.
	(movhi): Break up impossible moves.
	(pattern to match movhi): Don't allow impossible moves to be put
	back together.
	(movqi): Break up impossible moves.
	(pattern to match movqi): Don't allow impossible moves to be put
	back together; convert negative constants into mvn instruction.
	(movsf): Use REAL_ARITHMETIC for constants; add alternatives for
	moving GENERAL_REGS to and from memory.
	(movdf): Make this an expand; split out impossible moves.
	(reload_outdf): New pattern.
	(pattern to match movdf): Don't allow impossible moves to be put back
	together; add alternatives for moving GENERAL_REGS to and from memory;
	rearrange and weight to get optimal register allocation.
	(movxf): New pattern.
	(load_multiple): New expand pattern.
	(pattern to load multiple, pattern to load multiple with write-back):
	New unnamed patterns.
	(store_multiple): New expand pattern.
	(pattern to store multiple, pattern to store multiple with write-back):
	New unnamed patterns.
	(movstrsi): Expand short moves as a series of load/store multiples with
	write-back.
	(cmp*): Make these expands; just set some state variables.
	(CC = COMPARE op, op): New unnamed patterns.
	(CC = COMPARE op, NEG op): New unnamed pattern.
	(CC = COMPARE op, SHIFT op): New unnamed pattern.
	(FLOAT_EXTEND then COMPARE): New unnamed patterns.
	(CC = CC): New unnamed (dummy) pattern to allow cse to combine repeated
	compares.
	(b{eq,ne,le,lt,ge,gt,geu,gtu,leu,ltu}): Make these expand patterns,
	use gen_compare_reg().
	(pattern to match branches, pattern to match inverted brances): New
	unnamed patterns.
	(s{eq,ne,le,lt,ge,gt,geu,gtu,leu,ltu}): New expands.
	(pattern to match store_flag operations): New unnamed pattern.
	(pattern to match NOT store_flag, pattern to match NEG store_flag):
	New unnamed patterns.
	(jump): handle arm_ccfsm_state explicitly.
	(CALL (MEM)): New unnamed patterns.
	(return): New pattern.
	(conditional RETURN): New unnamed patterns;
	(table_jump (MEM)): New unnamed pattern.
	(indirect_jump (MEM)): New unnamed pattern.
	Replace shift-arithmetic patterns with new versions that catche all
	cases.
	(Old peephole patterns (commented out)): remove.
	(shift-arithmetic and set CC): New unnamed patterns.
	(reload patterns for all shift-arithmetic patterns): New patterns.
	Add many new patterns to merge store_flag patterns, arithmetic and
	shifting.
	New patterns to match conditional comparisons.
	(movcond): New pattern.
	(arith (MEM, MEM+4)): New unnamed pattern to spot load multiple 
	possibility.
	(patterns to match extended pre-increment): New unnamed patterns.
	(peepholes to match extended post-increment): New.
	(peephole to match move and set conds): Needed because combine misses
	this one.
	(peepholes to match load/store multiples): New.
	(CALL, RETURN): New peephole.
	(CALL, JUMP): New peephole.
	(save_stack_nonlocal, restore_stack_nonlocal): New expands for
	non-local gotos.
	special split to break up some conditional arithmetic sequences 
	before scheduling.

	*configure (arm-*-riscix1.[01]*, arm-*-riscix*): New configurations.
	*config.sub: Recognize operating system "riscix*"; recognize acorn as
	vendor.

Sat Oct  2 17:24:44 1993  James Van Artsdalen  (james@bigtex.cactus.org)

	* i386.md (addhi3): Use byte opcodes when the low byte of a word
	is known to be zero.

Sat Oct  2 14:11:06 1993  John F Carr  (jfc@Athena.mit.edu)

	* combine.c (can_combine_p):  Allow an insn with a REG_EQUIV note
	that reads memory to be moved past an insn that writes memory.

Sat Oct  2 14:04:03 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* regclass.c (record_reg_classes): Skip to next alternative
	when we skip normal cost computation.

	* collect2.c: Add prototypes to static declarations.
	(PROTO): New macro.
	(dup2, putenv): Functions return integers; add type and returns.

	* varasm.c (make_decl_rtl): Set TREE_SIDE_EFFECTS on global if
	-fvolatile-global.

	* tree.c (build_string): Make lifetime of string the same as 
	tree node.

Sat Oct  2 04:55:44 1993  Doug Evans  (dje@canuck.cygnus.com)

	* a29k/a29k.h, a29k/unix.h, alpha/alpha.h, arm/arm.h, clipper/clix.h,
	convex/convex.h, elxsi/elxsi.h, fx80/fx80.h, gmicro/gmicro.h,
	h8300/h8300.h, i370/tm-mvs.h, i386/386bsd.h, i386/aix386ng.h,
	i386/gas.h, i386/go32.h, i386/linux.h, i386/lynx.h, i386/mach.h,
	i386/next.h, i386/osfelf.h, i386/osfrose.h, i386/sco.h, i386/sco4.h,
	i386/sco4dbx.h, i386/scodbx.h, i386/sequent.h, i386/sun.h,
	i386/sysv3.h, i386/sysv4.h, i860/fx2800.h, i860/i860.h, i860/mach.h,
	i860/sysv3.h, i860/sysv4.h, i960/i960.h, m68k/3b1.h, m68k/3b1g.h,
	m68k/altos3068.h, m68k/apollo68.h, m68k/crds.h, m68k/ctix.h,
	m68k/dpx2.h, m68k/hp2bsd.h, m68k/hp320.h, m68k/hp3bsd.h,
	m68k/hp3bsd44.h, m68k/isi.h, m68k/lynx.h, m68k/m68kv4.h,
	m68k/mot3300.h, m68k/news.h, m68k/next.h, m68k/pbb.h, m68k/plexus.h,
	m68k/sun2.h, m68k/sun3.h, m68k/sun3mach.h, m68k/tower-as.h,
	m68k/tower.h, m88k/dgux.h, m88k/luna.h, m88k/m88k.h, m88k/sysv3.h,
	m88k/sysv4.h, mips/bsd-4.h, mips/bsd-5.h, mips/dec-osf1.h,
	mips/iris3.h, mips/mips.h, mips/news4.h, mips/news5.h,
	mips/nws3250v4.h, mips/osfrose.h, mips/svr3-4.h, mips/svr3-5.h,
	mips/svr4-4.h, mips/svr4-5.h, mips/ultrix.h, ns32k/encore.h,
	ns32k/merlin.h, ns32k/ns32k.h, ns32k/pc532-mach.h, ns32k/pc532.h,
	ns32k/sequent.h, ns32k/tek6000.h, ns32k/tek6100.h, ns32k/tek6200.h,
	pa/pa-ghpux.h, pa/pa-gux7.h, pa/pa-hpux.h, pa/pa-hpux7.h,
	pa/pa-utahmach.h, pa/pa.h, pa/pa1-utahmach.h, pyr/pyr.h, romp/romp.h,
	rs6000/aix31.h, rs6000/mach.h, rs6000/rs6000.h, sh/sh.h, sparc/lite.h,
	sparc/lynx.h, sparc/pbd.h, sparc/sol2.h, sparc/sparc.h, sparc/sysv4.h,
	spur/spur.h, tahoe/harris.h, tahoe/tahoe.h, vax/ultrix.h, vax/vax.h,
	vax/vaxv.h, vax/vms.h, we32k/we32k.h
	(CPP_PREDEFINES): Add system/cpu/machine assertions where missing.

Fri Oct  1 22:11:17 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* gvarargs.h: Test __sequent__ like __BSD_NET2__.

Fri Oct  1 17:19:54 1993  Torbjorn Granlund  (tege@adder.cygnus.com)

	* cse.c (insert_regs): Always return something.
	(simplify_unary_operation): Remove unused variable.
	(cse_process_notes): Likewise.
	(invalidate_skipped_block): Likewise.
	(cse_set_around_loop): Likewise.

	* pa-ghpux.h (LINK_SPEC): Pass "-a -archive" when
	debugging.
	* pa-hpux.h (LINK_SPEC): Likewise.
	* pa-ghpux.h (LIB_SPEC): Make sure to add space between flags.
	* pa-gux7.h (LIB_SPEC): Likewise.
	* pa-hpux.h (LIB_SPEC): Likewise.
	* pa-hpux7.h (LIB_SPEC): Likewise.

Fri Oct 1  22:17:12 1993  Eric Youngdale  (eric@kafka)

	* vmsconfig.com: Write out the definitions from Makefile.in for
	the symbols BC_ALL and BI_OBJ into files BC_ALL.OPT and
	BI_ALL.opt.  Remove "bytecode " from compiler options files so
	compiler will link correctly.

	* make-cc1.com (bc_generate): New VMS DCL function.  Takes a BC
	header file that needs to be generated, and builds it.

	* make-cc1.com:  Compile entries listed in BI_ALL.OPT, and then call
	bc_generate for every header file listed in BC_ALL.OPT

Fri Oct 1  21:13:17 1993  H.J. Lu  (hjl@nynexst.com)

	* config/i386/linux.h (LIB_SPEC): Handle -p anmd -pg outermost.

Fri Oct  1 18:23:57 1993  Jim Wilson  (wilson@cygnus.com)

	* reload1.c (gen_input_reload): Handle PLUS with MEM operand
	exactly the same as a PLUS with a REG operand.
	* reload.c (form_sum): Undo Sep 28 change.

	* Makefile.in (cc1, cc1plus, cc1obj): Delete superfluous
	dependencies on bytecode.
	(stamp-bcarity, stamp-bcopcode, stamp-bcopname): Create stamp files.

Fri Oct  1 18:17:56 1993  Doug Evans  (dje@canuck.cygnus.com)

	* configure (cpp_md_flags): New variable.
	(links): Build link from md.pre-cpp if cpp_md_flags defined.
	(CPP_MD, CPP_MD_FLAGS, MD_FILE): New macros for Makefile.
	* Makefile.in (md): New dependency.
	(MD_FILE): New macro.
	(clean): Remove file md if md.pre-cpp exists.
	(distclean): Remove md.pre-cpp.

Fri Oct  1 15:44:48 1993  Michael Meissner  (meissner@osf.org)

	* halfpic.h (toplevel): Enclose the whole file inside a #ifndef
	NO_HALF_PIC conditional.

	* i386/x-osfrose (CCLIBFLAGS, GCC_CFLAGS): Define NO_HALF_PIC so
	that the two common variables in halfpic.h don't get created.

	* mips/x-osfrose (CCLIBFLAGS, GCC_CFLAGS): Ditto.

Fri Oct  1 10:46:15 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* a29k.h (R_KR): New macro.
	(FIRST_PSEUDO_REGISTER, FIXED_REGISTERS, CALL_USED_REGISTERS):
	Adjust for more registers present.
	(REG_ALLOC_ORDER, REG_CLASS_CONTENTS, REGISTER_NAMES): Likewise.
	(HARD_REGNO_NREGS, HARD_REGNO_MODE_OK, REGNO_REG_CLASS): Likewise.
	(CONDITIONAL_REGISTER_USAGE): Swap names rather than replacing them.
	* a29k.c (gpc_reg_operand): Include kernel registers.

	* a29k.h (TARGET_LARGE_MEMORY): New flag; change value for
	all others.
	(ENCODE_SECTION_INFO): New macro.
	(TARGET_SWITCHES): Add "normal" and change values.

	* a29k.c (call_operand, case SYMBOL_REF): Handle TARGET_LARGE_MEMORY
	and SYMBOL_REF_FLAG.

Thu Sep 30 23:25:13 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* reorg.c (optimize_skip): Do not thread a jump to a new target if
	doing so would invalidate the insn in the jump's delay slot.

Thu Sep 30 14:21:03 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* bi-lexer.c (scan_string): Do xmalloc if buffer is null and
	xrealloc if it's not, not the other way around.

Thu Sep 30 10:57:30 1993  Jan Brittenson  (bson@nutrimat.gnu.ai.mit.edu)

	* bc-emit.c (bc_end_function, seg_data): Use bcopy instead of memcpy. 

Thu Sep 30 05:53:58 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fold-const.c (fold, case PLUS_EXPR, MINUS_EXPR): Properly handle
	case when ARG1 splits and VARSIGN is -1.

Wed Sep 29 19:41:18 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (build_modify_expr): Check whether recursive calls
	return error_mark_node.

Wed Sep 29 18:35:30 1993  Leonid Baraz  (lbaraz@iil.intel.com)

	* rtl.h (GEN_INT): Add missing cast to HOST_WIDE_INT.
	* jump.c (rtx_renumbered_equal_p, case CONST_INT): Use INTVAL,
	not XINT.

Wed Sep 29 17:32:03 1993  Doug Evans  (dje@canuck.cygnus.com)

	* glimits.h (UINT_MAX, ULONG_MAX, ULONG_LONG_MAX): 
	redefine in a simpler way.

Wed Sep 29 17:25:17 1993  david d `zoo' zuhn  (zoo@rtl.cygnus.com)

	* fixincludes (sys/spinlock.h): change references of
	"../machine/*.h" to <machine/*.h>

Wed Sep 29 07:09:50 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.c (reg_or_short_operand): Remove redundant test.

	* sched.c: Add prototypes for static function.
	(add_dependence, remove_dependence, regno_use_in): Now static.
	(schedule_insns): Have dummy version also take FILE * parameter.

Wed Sep 29 01:29:31 1993  Paul Eggert  (eggert@twinsun.com)

	* cccp.c (quote_string): New function.
	(special_symbol, write_output, output_line_command): Use it to escape
	special characters in file names when outputting #line directives.
	(do_line): Parse escape sequences in #line directives' file names.
	* c-lex.c, cp-lex.c (check_newline, yylex, real_yylex): Likewise.
	(ignore_escape_flag): Remove var.

Tue Sep 28 21:27:26 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu

	* function.c (push_temp_slots, pop_temp_slots): Always change level.
	* cp-expr.c (cplus_expand_expr): Push and pop temp slots around
	making new temp slots and freeing them.
	* expr.c (expand_assignment, expand_expr, do_jumps): Likewise.
	* integrate.c (expand_inline_function): Likewise.

Tue Sep 28 18:50:57 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* reload.c (find_reloads): Don't call find_reloads_toplev
	(or anything like that)	for match_operator operands.

	* config/ns32k/ns32k.c (output_move_double): Special code for
	pushing from an address that uses the sp.  Use PUSHOP for pushes,
	not POPOP.

	* config/ns32k/ns32k.h (FUNCTION_EPILOGUE, FUNCTION_PROLOGUE): 
	Add %$ in adjspb/adjspd insns.
	* config/ns32k/ns32k.md (recognizer for subtracting const from reg 17):
	Add %$ in adjspb/adjspd insns.

	* bytetypes.h (QItype, HItype, SItype, DItype): Use __signed__.

	* Makefile.in (stamp-bcopname, stamp-bcopcode): 
	Use shorter names for temporary files.
	(bc-emit.o): Depend on bc-arity.h.

	* bi-opname.c, bi-arity.c, bi-opcode.c (xmalloc): New function.
	* bi-opname.c, bi-arity.c: Include stdio.h.

	* function.c (expand_main_function): Put back accidentally
	deleted previous change to use NAME__MAIN.

	* glimits.h (INT_MAX, LONG_MAX, LONG_LONG_MAX): Delete parens.
	(__glimits__evconcat__, __glimits__concat__): New macros.
	(UINT_MAX, ULONG_MAX, ULONG_LONG_MAX): Use them.

	* cccp.c (output_dots): New function.
	(do_include): Call it (to indent output for print_include_names).

Tue Sep 28 18:22:31 1993  Jim Wilson  (wilson@cygnus.com)

	* reload1.c (eliminate_regs): All recursive calls now pass INSN
	instead of NULL_RTX.  Second assignment to ref_outside_mem changed
	to be same as first assignment.

	* combine.c (force_to_mode, LSHIFTRT case): Avoid shifts larger
	than HOST_BITS_PER_WIDE_INT.

	* sched.c (schedule_insns): Don't zero reg_n_calls_crossed for
	pseudos live across multiple blocks.

	* fixincludes ({sparc,sun3,sun3x,sun4,sun4c,sun4m}/asm_linkage.h,
	{sun4c,sun4m}/debug/asm_linkage.h: Replace /**/ with ##.

	* reorg.c (mark_target_live_regs): When scanning insns, ignore
	CLOBBERs in addition to USEs.

	* life.h: Comment that this is for sparclite w/o FPU.
	* sparc.h (CPP_SPEC): Handle -mf930 and -mf934.
	(TARGET_SWITCHES): Add -mf930 and -mf934 options.  -msparclite no
	longer does -mno-fpu.

	* fixinc.svr4, fixincludes (math.h): Put #ifndef around HUGE_VAL
	define.
	* math-68881.h, math-3300.h (HUGE_VAL): Add #undef before HUGE_VAL
	define, instead of surrounding it with #ifndef/#endif.

	* sparc/bsd.h: New file.
	* configure (sparc-*-bsd*): New configuration.

	* reload.c (form_sum): Change the way that form_sum canonicalizes
	addresses, so that it never creates (PLUS (PLUS MEM CONST_INT) REG)
	but instead canonicallizes this to (PLUS (PLUS REG CONST_INT) MEM).

Tue Sep 28 16:00:25 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* bc-emit.c: Include gvarargs.h, not varargs.h.
	Don't include string.h.
	(seg_align): Use bzero, not memset.

Mon Sep 27 20:53:01 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (pop_init_level): Add special case for nonincremental
	scalar initializers.

	* protoize.c: Declare rindex unconditionally.

	* c-decl.c (init_decl_processing): Use signed_type and unsigned_type
	to set signed_wchar_type_node and unsigned_wchar_type_node.

Mon Sep 27 20:31:01 1993  Paul Eggert  (eggert@twinsun.com)

	* dbxout.c (dbxout_init, dbxout_source_file): Quote special
	characters when outputting source file names.
	* config/a29k/a29k.h, config/a29k/unix.h, config/alpha/alpha.h,
	config/i386/aix386ng.h, config/i386/bsd.h, config/i386/gas.h,
	config/i386/sun386.h (ASM_FILE_START): Likewise.
	* config/elxsi/elxsi.h, config/m68k/3b1.h, config/m68k/crds.h,
	config/m68k/mot3300.h, config/m68k/tower-as.h, config/m88k/m88k.h,
	dwarfout.c (ASM_OUTPUT_SOURCE_FILENAME): Likewise.
	* xcoffout.h, config/i386/i386iscgas.h, config/i860/fx2800.h
	(DBX_OUTPUT_MAIN_SOURCE_DIRECTORY, DBX_OUTPUT_MAIN_SOURCE_FILENAME):
	Likewise.
	* xcoffout.h (DBX_OUTPUT_MAIN_SOURCE_FILE_END): Likewise.
	* config/mips/mips.c (mips_output_filename): Likewise.
	* toplev.c (output_file_directive): Likewise.
	(output_quoted_string): New function.

Mon Sep 27 19:31:57 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* bi-lexer.c (xrealloc): Handle 0 passed as BLOCK.

	* Makefile.in (stamp-bcopname, stamp-bcopcode, stamp-bcarity):
	Renamed from stamp-bc-... to fit in 14 chars.
	Don't rm the .h files.
	(STAGESTUFF): Add some bc and bi files.

	* c-lex.c (yylex): Handle i together with f or l in float constant.

Mon Sep 27 19:00:18 1993  Ian Lance Taylor  (ian@cygnus.com)

	* cccp.c (special_symbol, initialize_builtins): If
	NO_BUILTIN_SIZE_TYPE is defined, never refer to SIZE_TYPE.
	Likewise for NO_BUILTIN_PTRDIFF_TYPE and PTRDIFF_TYPE.

Mon Sep 27 18:59:09 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* reload1.c (eliminate_regs, SET case): Check for INSN_LIST
	along with EXPR_LIST.

Mon Sep 27 14:29:17 1993  Kresten Krab Thorup  (krab@iesd.auc.dk)

	* objc/typedstream.h (objc_read_object): Add declaration.

Mon Sep 27 17:00:38 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* configure: Handle option --with-elf.
	(i[34]86-*-linux*): Use linuxelf.h if --with-elf.
	(i[34]86-*-osfelf): Config deleted.
	(i[34]86-*-osfrose): Handle --with-elf.
	* config/i386/linuxelf.h: New file.

Mon Sep 27 14:19:33 1993  Jan Brittenson  (bson@nutrimat.gnu.ai.mit.edu)

	* expr.c (bc_expand_constructor): Delete cast of argument to
	bc_emit_instruction to HOST_WIDE_INT. Move assignment of ptroffs
	to separate line.

Mon Sep 27 10:32:28 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* Makefile.in (stmt.o, expr.o, emit-rtl.o): Add missing dependency
	on bc-typecd.def.
	(bi-run.o): Fix formatting.

Mon Sep 27 10:26:43 1993  Jan Brittenson  (bson@nutrimat.gnu.ai.mit.edu)

	* Makefile.in (bi-arity.h, bc-opcode.h, bc-opname.h): Use
	move-if-changed. 
	(stamp-bc-arity, stamp-bc-opcode, stamp-bc-opname): New targets.

Sun Sep 26 23:11:34 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.h (ASM_FILE_START): Remove last change for $LIT$ subspace,
	not all HPUX linkers handle it correctly.

Sun Sep 26 20:51:36 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* stmt.c (expand_exit_loop_if_false, bc_expand_start_cond):
	Use xjumpifnot, not jumpifnot.

	* Makefile.in (bi-arity, bi-opcode, bi-opname): Delete $(LEXLIB).

	* varasm.c (assemble_string): Put braces around ASM_OUTPUT_ASCII.

Sat Sep 25 08:30:16 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (expand_expr, case COND_EXPR): Set MEM_IN_STRUCT_P
	properly for TEMP.

	* combine.c (BYTE_LOADS_EXTEND, LOAD_EXTEND): Deleted.
	(subst, force_to_mode, nonzero_bits, num_sign_bit_copies):
	Use new macros LOAD_EXTEND_OP and WORD_REGISTER_OPERATION instead
	of BYTE_LOADS_*_EXTEND and LOAD_EXTEND.
	* expr.c (do_store_flag): Likewise.
	* reload.c (push_reload, find_reloads): Likewise.
	* reload1.c (eliminate_regs): Likewise.
	* a29k.h, alpha.h, clipper.h, arm.h, i960.h, m88k.h, mips.h:
	Use WORD_REGISTER_OPERATION and LOAD_EXTEND_OP and delete
	BYTE_LOADS_{SIGN,ZERO}_EXTEND.
	* pa.h, romp.h, rs6000.h, sh.h, sparc.h: Likewise.

Sat Sep 25 06:19:20 1993  Jan Brittenson  (bson@nutrimat.gnu.ai.mit.edu)

	* bi-lexer.l: Deleted.

	* bi-lexer.c: New file.

	* Makefile.in (bi-lexer): Deleted.
	(bi-lexer.l): Deleted.

Fri Sep 24 16:59:03 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Cygnus<->FSF C++ front-end merge.

	Tue Sep 21 19:17:29 1993  Mike Stump  (mrs@cygnus.com)

	* cp-decl.c (build_ptrmemfunc_type): Set CLASSTYPE_GOT_SEMICOLON
	  just in case.
	* cp-decl.c (start_function): Exclude pointer to member functions in
	  IS_AGGR_TYPE test.
	* cp-method.c (dump_type_prefix, dump_type_suffix, dump_type):
	  Handle pointer to member functions.

	Tue Sep 21 10:47:10 1993  Mike Stump  (mrs@cygnus.com)

	* cp-tree.c (finish_struct): Since we know which base class we want
	  the binfo for, get it directly, instead of searching for it.  Cures
	  a compiler_error in binfo_value.

	Thu Sep 16 20:33:25 1993  Mike Stump  (mrs@cygnus.com)

	* cp-cvt.c (convert_pointer_to): Make error more specific and more
	  readable.

	Thu Sep 16 20:14:18 1993  Mike Stump  (mrs@cygnus.com)

	* cp-lex.c (consume_string): Add second argument so that we can use
	  this routine for character constants too.  Also, handle eof inside
	  the string or character constant better.  Make static, as it isn't
	  used anyplace else.

	* cp-lex.c (reinit_parse_for_block): Add second argument to
	  consume_string.  Add support for character constants.

	* cp-tree.h (consume_string): Remove declaration, not used any place
	  else.

	Wed Sep 15 12:44:13 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* cp-gc.c (build_t_desc):  Make sure finish_table is called
	for the methods and ivars tables.

	Mon Sep 13 14:40:23 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-pt.c (unify): Use the referent type if necessary.

	Fri Sep 10 16:34:37 1993  Mike Stump  (mrs@cygnus.com)

	* cp-typeck.c (build_binary_op_nodefault): Add missing fourth
	  argument to build_binary_op calls, and eliminate bogus delta2
	  check.

	Fri Sep 10 14:52:59 1993  Mike Stump  (mrs@cygnus.com)

	* cp-typeck.c (build_binary_op_nodefault): Make sure delta2's match
	  when comparing pointers to _virtual_ member functions.

	Fri Sep 10 14:27:45 1993  Mike Stump  (mrs@cygnus.com)

	* cp-typeck.c (convert_for_assignment): Revert a cast.
	* cp-typeck.c (build_binary_op_nodefault): Add missing fourth
	  argument to build_binary_op calls.

	Thu Sep  9 21:22:40 1993  Mike Stump  (mrs@cygnus.com)

	Complete re-vamp of pointer to member functions.  Implements
	complete semantics.  Cures problems on CONVEX, i960 and alpha.

	* cp-tree.h (get_member_function_from_ptrfunc, build_ptrmemfunc):
	  New routines.
	* cp-decl.c (build_ptrmemfunc_type): New routine, builds canonical
	  pointer to member function types.
	* cp-decl.c (grokdeclarator): Use new type for POINTER_TYPE to
	  METHOD_TYPEs.
	* cp-method.c (build_overload_name): Make the old mangling to show
	  through when mangling the new pointer to member function type.

	* cp-tree.h (TYPE_PTRMEMFUNC_P, TYPE_PTRMEMFUNC_FN_TYPE,
	  TYPE_GET_PTRMEMFUNC_TYPE, TYPE_SET_PTRMEMFUNC_TYPE): New macros
	  for pointer to member function code.
	* cp-init.c (resolve_offset_ref): Handle pointer to member functions
	  specially.
	* cp-type2.c (store_init_value): Make new pointer to member
	  functions initializable.
	* cp-typeck.c (convert_for_assignment): Make new pointer to member
	  functions assignable.
	* cp-type2.c (build_m_component_ref): Make new pointer to member
	  functions work.
	* cp-typeck.c (build_x_function_call, build_function_call_real,
	  build_binary_op): Ditto.
	* cp-class.c (add_virtual_function): Don't set the high bit on
	  DECL_VINDEXs.

	* cp-typeck.c (get_member_function_from_ptrfunc): New routine to
	  resolve a pointer to member function.
	* cp-typeck.c (build_ptrmemfunc): New routine to build CONSTRUCTORs
	  for new pointer to member functions.  Used by to generate
	  initialization and assignment expressions.
	* cp-typeck.c (build_binary_op_nodefault): Implement == and != for
	  new pointer to member functions.
	* cp-typeck.c (unary_complex_lvalue): Handle & in more reasonable
	  ways to make new pointer to member functions work.

	* cp-parse.y (expr_no_commas): Don't dereference the second
	  argument, this is now done in build_m_component_ref as needed.
	* cp-typeck.c (build_x_binary_op): Ditto.

	Other misc work.

	* cp-call.c (build_field_call, build_scoped_method_call,
	  build_method_call): Second arg to build_indirect_ref should be
	  NULL_PTR, not NULL or 0.
	* cp-class.c (build_vbase_path, build_vfn_ref, popclass): Ditto.
	* cp-cvt.c (convert_from_reference): Ditto.
	* cp-decl2.c (setup_vtbl_ptr, finish_file): Ditto.
	* cp-init.c (emit_base_init, build_virtual_init,
	  expand_aggr_vbase_init_1, expand_recursive_init_1,
	  get_member_function, resolve_offset_ref, build_new, build_delete,
	  build_vec_delete): Ditto. 
	* cp-search.c (dfs_init_vbase_pointers, init_vbase_pointers,
	  build_vbase_vtables_init): Ditto.
	* cp-type2.c (build_x_arrow, build_functional_cast): Ditto.
	* cp-typeck.c (build_modify_expr): Ditto.

	Instead of calling get_identifier with the same value all the time,
	call it once, and re-use the cached value.

	* cp-decl.c (pfn_identifier, index_identifier, delta_identifier,
	  delta2_identifier): New cached calls to get_identifier.
	* cp-tree.h (this_identifier, pfn_identifier, index_identifier,
	  delta_identifier, delta2_identifier): Allow them to be accessed
	  everywhere.
	* cp-decl.c (init_decl_processing): Initialize pfn_identifier,
	  index_identifier, delta_identifier and delta2_identifier and
	  use a cached get_identifier call.
	* cp-class.c (delta_name, pfn_name): Removed, use delta_identifier
	  and pfn_identifier instead.
	* cp-class.c (popclass): Use a cached get_identifier call for `this'.

	Tue Sep  7 16:01:14 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-search.c (immediately_derived): New function.
	(get_binfo): Use it.
	(compute_visibility): Rewrite how private inheritance is handled, so
	it actually works.  Use the new immediately_derived fn.

	Mon Sep  6 14:44:46 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* cp-decl.c (grokfndecl): Add empty statement after foundaggr label.

	Sat Sep  4 16:12:27 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-decl.c (grokfndecl): Require class or enum argument to
	operators.

	* cp-init.c (build_member_call): Make destructor without object
	error more useful, don't complain of missing destructor.

	Thu Sep  2 15:51:54 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (globalize_nested_type): Make sure the type in question
	has a lang_specific area before trying to clear DECL_CLASS_CONTEXT.

	Wed Sep  1 13:40:30 1993  Chip Salzenberg  (chip@fin)

	* cp-decl.c (start_function): Call duplicate_decls when user
	redefines a builtin function.

	Thu Sep  2 15:38:43 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-pt.c (instantiate_class_template): Only kick back the local
	value if we're setting things up for the parser.

	Wed Sep  1 12:54:38 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-init.c (emit_base_init): Don't complain if the base has no
	constructor; we should try to use the default constructor instead.

	Wed Sep  1 11:57:00 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-call.c (find_scoped_type): Undo the sorry for now, it's hitting
	a lot of code that it shouldn't be.

	Mon Aug 30 13:08:48 1993  Mike Stump  (mrs@cygnus.com)

	* cp-typeck.c (build_x_unary_op): unary & on an expression of
	RECORD_TYPE that has an incomplete type gives the simple address of
	the object, and should not give an error about method not found.

	Mon Aug 30 11:06:26 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-pt.c (instantiate_class_template): Don't try to instantiate a
	template that's already being worked on.

	* cp-init.c (perform_member_init): Make an uninitialized reference
	be a pedwarn, not a warning.

	* cp-class.c (finish_struct): Make declaration of a negative width
	for a bit-field be an error, not a warning.

	Sat Aug 28 09:40:47 1993  Michael Tiemann  (tiemann@blues.cygnus.com)

	* cp-call.c (find_scoped_type): Add a `sorry' call if we hit an
	uninstantiated type.

	Thu Aug 26 13:53:23 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-call.c (build_scoped_method_call): Don't produce an error
	if the type has no destructor.

	* cp-decl.c (record_builtin_type): Don't set TYPE_HAS_DESTRUCTOR
	after all.

	Wed Aug 25 19:10:24 1993  Jason Merrill  (jason@deneb.cygnus.com)

	* cp-call.c (build_method_call): Check for class type value as
	well

	* cp-tree.h (IDENTIFIER_CLASS_TYPE_VALUE): Create macro
	(IDENTIFIER_HAS_CLASS_TYPE_VALUE): Ditto

	* cp-init.c (is_aggr_typedef): Check for class type value as well
	(for template destructors)
	(build_delete): Don't assert aggregate type, don't check
	TREE_GETS_DELETE if built-in type.

Fri Sep 24 15:57:14 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* rtl.h: (HARD_FRAME_POINTER_REGNUM): New macro.
	(hard_frame_pointer_rtx): New variable
	* combine.c: (combinable_i3_pat): Don't add REG_DEAD notes for
	HARD_FRAME_POINTER_REGNUM.
	(subst, case SUBREG): Don't change register number or mode if it
	is HARD_FRAME_POINTER_REGNUM.
	* cse.c: (FIXED_REGNO_P): HARD_FRAME_POINTER_REGNUM is fixed.
	(CHEAP_REG): HARD_FRAME_POINTER_REGNUM is cheap.
	(FIXED_BASE_PLUS): Allow hard frame pointer as base.
	(NONZERO_BASE_PLUS_P): Likewise.
	(cannon_hash, case REG): Add HARD_FRAME_POINTER_REGNUM to list of
	special registers for SMALL_REGISTER_CLASSES.
	(find_best_addr): Addresses containing HARD_FRAME_POINTER_REGNUM
	cannot be replaced.
	(cse_main): value in HARD_FRAME_POINTER_REGNUM is preserved across
	calls.
	* dbxout.c: (dbxout_symbol): FRAME_POINTER_REGNUM has been eliminated
	by now, use HARD_FRAME_POINTER_REGNUM.
	* emit-rtl.c: (hard_frame_pointer_rtx): New variable.
	(gen_rtx): return hard_frame_pointer_rtx if generating rtl
	for HARD_FRAME_POINTER_REGNUM.
	(enit_emit_once): Generate initial rtl for hard_frame_pointer_rtx.
	* explow.c: (copy_all_regs): Don't copy HARD_FRAME_POINTER_REGNUM.
	* flow.c: (life_analysis): Mark HARD_FRAME_POINTER_REGNUM as live at
	the end of the function.
	(insn_dead_p): Don't delete insns that set the hard frame pointer.
	(mark_set_1): Don't add death information about
	HARD_FRAME_POINTER_REGNUM.
	(mark_used_regs, case REG): Don't put HARD_FRAME_POINTER_REGNUM in
	regs_ever_live.  Don't mark it as needed either.
	* function.c: (instantiate_virtual_regs_1, case MEM): references to
	MEM via the hard frame pointer shouldn't be copied.
	* genattrtab.c: (hard_frame_pointer_rtx): New Dummy definition.
	* global.c: (global_alloc): Make sure that it is always possible to
	eliminate FRAME_POINTER_REGNUM into HARD_FRAME_POINTER_REGNUM.
	* jump.c: (thread_jumps): Value in HARD_FRAME_POINTER_REGNUM is never
	modified by a call.
	* local-alloc.c: (find_free_reg): Make sure we will always be able
	to eliminate FRAME_POINTER_REGNUM into HARD_FRAME_POINTER_REGNUM.
	* loop.c: (invariant_p, case REG): hard_frame_pointer_rtx is 
	invariant.
	* reload.c: (immune_p): Constants never overlap hard frame pointer
	references.
	(find_reloads_address): Compute invalid references to the hard 
	frame pointer in a register; also (reg + const)
	and (reg + reg + const).

	* reload1.c: (init_reload): use HARD_FRAME_POINTER_REGNUM instead of
	FRAME_POINTER_REGNUM.
	(reload): Only prohibit elimination of HARD_FRAME_POINTER_REGNUM, not
	FRAME_POINTER_REGNUM if frame_pointer_needed.  Never prohibit
	elimination of FRAME_POINTER_REGNUM into HARD_FRAME_POINTER_REGNUM.
	Mark HARD_FRAME_POINTER_REGNUM as live at the start of a block if
	it is still needed after elimination.
	(eliminate_regs): For non-local goto's, don't delete stores into the
	hard frame pointer.
	(eliminate_regs_in_insn): adjust comment.
	(mark_not_eliminable): if frame_pointer_rtx and hard_frame_pointer_rtx
	are not the same, then frame_pointer_rtx is eliminable; 
	hard_frame_pointer_rtx never is if it is set..
	(order_regs_for_reload): HARD_FRAME_POINTER_REGNUM is a bad spill reg.
	(choose_reload_regs): HARD_FRAME_POINTER_REGNUM is a bad choice.
	* reorg.c: (mark_referenced_resource): if frame_pointer_needed, 
	HARD_FRAME_POINTER_REGNUM is also a referenced resource.
	(mark_target_live_regs): value in HARD_FRAME_POINTER_REGNUM is not
	call-clobbered.
	(dbr_schedule): HARD_FRAME_POINTER_REGNUM should be valid at the
	end of a function.
	* rtlanal.c: (rtx_unstable_p): HARD_FRAME_POINTER_REGNUM is not
	an unstable register.
	(rtx_varies_p, case REG): hard_frame_pointer_rtx is invariant.
	(rtx_addr_can_trap_p, case REG): hard_frame_pointer_rtx won't trap.
	* sched.c: (memrefs_conflict_p): We can work out whether references
	via hard_frame_pointer_rtx are likely to conflict.
	(attach_deaths, case REG): Don't add death notes for
	HARD_FRAME_POINTER_REGNUM.
	* sdbout.c: (sdbout_symbol): Use HARD_FRAME_POINTER_REGNUM instead of
	FRAME_POINTER_REGNUM.
	* stmt.c: (expand_goto): Set hard_frame_pointer_rtx when restoring
	the frame.  Use it when restoring other registers.
	(expand_end_bindings): ARG_POINTER_REGNUM will be eliminated into
	HARD_FRAME_POINTER_REGNUM, not FRAME_POINTER_REGNUM; adjust code 
	accordingly.
	* stupid.c: (stupid_find_reg): never use HARD_FRAME_POINTER_REGNUM.

Fri Sep 24 15:05:14 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* reload1.c (eliminate_regs): Specially handle the case where INSN
	is a note (an EXPR_LIST or INSN_LIST).
	(eliminate_regs_in_insn): Pass the notes as INSN,
	when calling eliminate_insn to process the notes.

Fri Sep 24 11:29:26 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h (SET_ASM_OP): Define.

Fri Sep 24 04:47:33 1993  Jan Brittenson  (bson@nutrimat.gnu.ai.mit.edu)

	* Makefile.in (toplev.o): Add bytecode.h and bc-emit.h to list
	of dependencies.
	(stmt.o): Add bytecode.h, bc-typecd.h, bc-opcode.h, bc-optab.h,	
	and bc-emit.h to list of dependencies.
	(expr.o): Add bytecode.h, bc-opcode.h, bc-typecd.h, bc-optab.h,
	bc-emit.h, and modemap.def to list of dependencies.
	(emit-rtl.o): Add bytecode.h, bc-opcode.h, bc-typecd.h,
	bc-optab.h, bc-emit.h, bc-opname.h to list of dependencies.
	(integrate.o, regclass.o, varasm.o, function.o): Add bytecode.h to
	list of dependencies.

Thu Sep 23 23:58:58 1993  James Van Artsdalen  (james@bigtex.cactus.org)

	* att.h (ASM_OUTPUT_ASCII): Enclose macro in "do { .. } while (0)".
	* sun386.h (ASM_OUTPUT_ASCII): Likewise.

Thu Sep 23 11:55:47 1993  Ted Lemon  (mellon@ncd.com)

	* toplev.c (lang_options): Add -fallow-single-precision.

Thu Sep 23 00:40:28 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (bi-parser.c): Supply explicit rule.
	Add bi-parser.h as target.
	Put these files in srcdir.

	* bc-emit.c (bc_gen_rtx): Call gen_rtx.
	(bc_print_rtl): #if 0 the contents.

	* Makefile.in (bc-optab.o, bc-emit.o): Add missing deps.
	(bi-parser.c, bi-lexer.c): Don't depend on .h files here.

	* varasm.c (handle_pragma_weak): Test HANDLE_PRAGMA_WEAK
	and WEAK_ASM_OP and SET_ASM_OP.

	* Makefile.in (stmt.o): Fix typo.

	* emit-rtl.c (gen_label_rtx): If output_bytecode, make a CODE_LABEL
	but with different contents.

	* rtl.h (BYTECODE_LABEL, BYTECODE_OFFSET, BYTECODE_BC_LABEL): 
	(BYTECODE_UID): New macros.
	(struct rtx_def): Delete elements label, offset, bc_label, uid.

	* Makefile.in (bc-arity.h, bc-opcode.h, bc-opname.h): Use `./'.
	(bi-arity, bi-opcode, bi-opname, bi-lexer): Use host compiler.
	Link with HOST_LIBS and depend on HOST_LIBDEPS.
	(bi-unparse): Deleted.
	(bytecode.distclean): Don't do anything with bi-unparse
	(bi-arity.o, bi-opcode.o, bi-opname.o, bi-parser.o, bi-reverse.o)
	(bi-lexer.o): Use host compiler.

	* expr.c (expand_increment): Don't store directly ito a subreg
	that is narrower than a word.

Wed Sep 22 22:18:35 1993  Chip Salzenberg  (chip@fin.uucp)

	* combine.c (init_reg_last_arrays): New function.
	(combine_instructions): Use it.
	(force_to_mode): Narrow mask to fit mode (except VOIDmode).
	(record_value_for_reg): When zeroing reg_last_set_value, also
	zero reg_last_set_{mode,nonzero_bits,sign_bit_copies}.
	(record_dead_and_set_regs): Likewise.

Wed Sep 22 22:13:07 1993  James Van Artsdalen  (james@bigtex.cactus.org)

	* bc-emit.c (bc_initialize): Add MODE arg to REAL_VALUE_ATOF calls.

	* Makefile.in (bi-lexer.c): File is in $(srcdir).

	* reg-stack.c (record_label_references): Don't follow a null label
	reference chain.

Wed Sep 22 15:56:27 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (bi-arity, bi-opcode, bi-opname, bi-unparse, bi-lexer): 
	Make the rules explicit.  Don't use $^.
	(bi-run.o, bi-parser.o, bi-lexer.o): Eliminate $<.
	(bc-arity.h, bc-opcode.h, bc-opname.h): Eliminate $< and $@.

	* c-typeck.c (set_init_index): Handle and allow CONST_DECL.
	(build_c_cast): When making a CONSTRUCTOR for a union cast,
	specify its type.

	* Makefile.in (bi-lexer.o, bi-parser.o): Use ALL_CFLAGS.

	* bi-arity.c (main): Make sure there's some value within
	each pair of braces.

	* expr.c (bc_adjust_stack): Use VALIDATE_STACK_FOR_BC,
	not VALIDATE_STACK.
	* bc-emit.c (bc_emit_bytecode): Likewise.
	(bc_emit_instruction) [! __GNUC__]: Don't really use bc-typecd.def.

	* varasm.c (bc_assemble_integer): Make definition static.

	* expr.c (bc_strdup): Don't use strcpy's value.

	* bytetypes.h: New file.  Typedefs moved from bytecode.h.
	(union stacktype): Moved here.
	* bytecode.h: Typedefs deleted.
	* bi-run.h: (union stacktype): Deleted.
	(BI_PARAMS): Don't continue the parmlist.
	* bc-emit.c: Include bytetypes.h, if __GNUC__.

Wed Sep 22 15:49:47 1993  Ted Lemon (mellon@ncd.com)

	* c-decl.c (flag_allow_single_precision): New variable.
	(c_decode_option): Handle -fallow-single-precision.
	* c-tree.h (flag_allow_single_precision): Declared.
	* c-typeck.c (default_conversion): Implement -fallow-single-precision.

Wed Sep 22 11:18:24 1993  Mike Stump  (mrs@cygnus.com)

	* cp-class.c (finish_struct): Move special C++ only code that
	  handles anonymous unions inside structures here.
	* stor-layout.c (layout_record): From here.

Wed Sep 22 14:14:55 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* enquire.c (FPROP): Recognize 80387 or 68881 XFmode format.

	* c-typeck.c (build_component_ref): For a field in an anonymous union,
	make two nested COMPONENT_REFs.
	(lookup_field): Additional arg INDIRECT.

Wed Sep 22 14:45:42 1993  Kresten Krab Thorup  (krab@iesd.auc.dk)

        * tm.texi (CLEAR_INSN_CACHE): New macro. 
        * libgcc2.c (__clear_cache): add case for new CLEAR_INSN_CACHE.

        * libgcc2.c (__enable_execute_stack): Add case for NeXT/__MACH__. 
        * config/m68k/next.h (INITIALIZE_TRAMPOLINE): Append call to
        __enable_execute_stack.  
        (CLEAR_INSN_CACHE): New macro.

        * varasm.c (output_constructor): Use the type given
        by the constructor expression only if available.  Otherwise
        use the type of the declared type.

Tue Sep 21 19:51:26 1993  Andrew McCallum  (mccallum@vein.cs.rochester.edu)

        * objc/Object.[hm] (-compare:, -shouldNotImplement:): Added.

        * objc/archive.c (objc_write_type, objc_write_types): Take
        take char** args for writing strings in stead of char* to
        match NeXT.  Also correct some typos in error messages.

Tue Sep 21 18:35:04 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* c-typeck.c (push_member_name):  Take a decl instead of a string.
	Allow DECL_NAME to be NULL (anonymous fields).
	* c-typeck.c (push_init_level, process_init_element):  Change
	callers appropriately.

Tue Sep 21 16:44:17 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* libgcc2.c (L_bb): Test inhibit_libc.

	* Makefile.in (ENQUIRE, CROSS_TEST): New variables.
	(all.cross): Use them.

	* mips-tfile.c, mips-tdump.c [CROSS_COMPILE]: Include mips/a.out.h.

	* arm.h, clipper.h, i386.h, i860.h, pyr.h, spur.h:
	(INIT_CUMULATIVE_ARGS): Pass just the return value type
	to aggregate_value_p.

Tue Sep 21 10:50:19 1993  Jan Brittenson  (bson@nutrimat.gnu.ai.mit.edu)

	* emit-rtl.c (gen_label_rtx, emit_line_note): add conditional for
	bytecode.

	* expr.c (mode_to_const_map, mode_to_load_map, mode_to_store_map):
	new variable.
	(bc_init_mode_to_opcode_maps): new function; initialize maps.
	(expand_assignment, expand_expr, expand_increment): add
	conditional for bytecode.
	(bc_expand_expr, bc_load_memory, bc_store_memory,
	bc_allocate_local, bc_allocate_variable_array, bc_load_externaddr,
	bc_strdup, bc_load_externaddr_id, bc_load_localaddr,
	bc_load_parmaddr, bc_canonicalize_array_ref,
	bc_expand_component_address, bc_push_offset_and_size,
	bc_expand_address, bc_runtime_type_code, bc_gen_constr_label,
	bc_expand_constructor, bc_store_field, bc_store_bit_field,
	bc_load_bit_field, bc_adjust_stack): new function.

	* function.c (put_var_into_stack, expand_main_function): do
	nothing for bytecode.
	(bc_build_calldesc): new function.
	(init_function_start): use it if outputting bytecode.
	(expand_function_start, expand_function_end): add conditional for
	bytecode.
	(bc_expand_function_start, bc_expand_function_end): new function.

	* integrate.c (output_inline_function): signal error for bytecode.

	* regclass.c (fix_register): signal error for bytecode.

	* stmt.c (struct nesting): new members bc_stack_level, skip_label).
	(struct goto_fixup): new members bc_target, label, bc_handled,
	bc_stack_level.
	(emit_nop, expand_computed_goto, expand_label, expand_goto,
	expand_goto_internal, fixup_gotos, expand_asm,
	expand_asm_operands, expand_expr_stmt, expand_start_expr_stmt,
	expand_end_expr_stmt, expand_start_cond, expand_start_else,
	expand_end_cond, expand_start_loop, expand_loop_continue_here,
	expand_end_loop, expand_exit_loop_if_false, expand_null_return,
	expand_return, expand_start_bindings, expand_end_bindings,
	expand_decl, expand_start_case, pushcase,
	check_for_full_enumeration, expand_end_case): add conditional for
	bytecode.
	(bc_expand_goto_internal, bc_expand_fixup, bc_fixup_gotos,
	bc_expand_start_cond, bc_expand_end_cond, bc_expand_start_else,
	bc_expand_end_bindings, bc_expand_decl,
	bc_expand_variable_local_init, bc_expand_decl_init,
	bc_expand_start_case, bc_pushcase,
	bc_check_for_full_enumeration_handling, bc_expand_end_case,
	bc_new_uid): new function.

	* toplev.c (output_bytecode): new variable.
	(f_options): add entry for -fbytecode.
	(fatal_insn_not_found, compile_file, rest_of_decl_compilation,
	rest_of_compilation, main): add conditional for bytecode.
	
	* config/m68k/m68k.c config/m68k/m68k.h: add bytecode specific
	definitions.

	* varasm.c (text_section, data_section, make_function_rtl,
	make_decl_rtl, assemble_asm, assemble_start_function,
	assemble_zeros, assemble_string, assemble_variable,
	assemble_external, assemble_external_libcall, assemble_label,
	assemble_name, assemble_static_space,
	assemble_trampoline_template, assemble_integer, assemble_real,
	decode_addr_const, output_constant_def, output_constant_pool,
	output_constant, output_constructor): add conditional for
	bytecode. 
	(bc_output_constructor, output_byte_asm, bc_make_rtl,
	bc_output_data_constructor, bc_assemble_integer): 
	new function. 
	(handle_pragma_weak): break out asm writing code from
	handle_pragma_token, move to varasm.c, so bytecode-specific
	macros can access static varasm data and functions.

	* c-pragma.c (handle_pragma_token): use handle_pragma_weak.

	* function.h (enum pragma_state): moved from c-pragma.c

	* bc-config.h, bc-emit.c, bc-optab.c, bc-optab.h, bc-trans.h,
	bc-typecd.def, modemap.def, bytecode.def, bc-emit.h, bc-typecd.h,
	bi-arity.c, bi-defs.h, bi-lexer.c, bi-opcode.c, bi-opname.c,
	bi-parser.c, bi-parser.h, bi-reverse.c, bi-run.c, bi-run.h,
	bi-unparse.c: new file. bc-* are exclusively compiler files, bi-*
	are interpreter files.

	* Makefile.in: add rules and/or dependencies for bc-emit.o,
	bc-optab.o, bytecode, bi-arity, bi-opcode, bi-opname, bi-lexer,
	bi-run.o, bi-parser.c, bi-parser.o, bi-lexer.o bi-arity.o,
	bi-opcode.o, bi-opname.o, bi-reverse.o, bc-arity.h, bc-opcode.h,
	bc-opname.h, bytecode.mostlyclean, bytecode.distclean, 
	bytecode.realclean


Tue Sep 21 10:20:55 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* jump.c (jump_optimize): Try putting RETURN at end of function
	both at start and at end of our optimization.

Mon Sep 20 17:22:13 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (expand_expr): Handle flag_volatile here.
	* c-typeck.c (build_indirect_ref): TREE_THIS_VOLATILE no longer
	depends on flag_volatile.

Mon Sep 20 15:21:31 1993  Doug Evans  (dje@cygnus.com)

	* gstddef.h: Back out change of Sep 15 (handles Sun lossage).
	Prevented bootstrapping.

Mon Sep 20 12:21:56 1993  Kresten Krab Thorup  (krab@iesd.auc.dk)

        * objc/archive.c (objc_read_string): Allocate n+1 chars instead of
        just n.

Sun Sep 19 13:06:37 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* function.c (combine_temp_slots): Handle deletion properly.
	Free the RTL that is allocated.
	* rtl.c (rtx_free): New function.

	* config/m68k/m68k.c (output_move_double): Handle register overlap
	case that occur in soft-float XFmode.  Code basically copied from
	i386.c.

Sun Sep 19 14:40:08 JDT 1993  Michael Ben-Gershon (mybg@cs.huji.ac.il)

	* cse.c (simplify_unary_operation): If REAL_ARITHMETIC is defined,
	and a FIX operation is applied to convert a CONST_DOUBLE to an INT,
	the CONST_DOUBLE must first be rounded to zero.

Sun Sep 19 12:49:05 1993  James Van Artsdalen  (james@bigtex.cactus.org)

	* Makefile.in (objc-headers): Depend on stmp-fixinc to build the
	include/ subdirectory first.

Sun Sep 19 09:45:16 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* gstddef.h (size_t): Acorn RISCiX requires __size_t defined.

Sun Sep 19 09:08:09 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* genrecog.c (preds): Correct typo in name of `comparison_operator'.
	(add_to_sequence): If PREDICATE_CODES specified, warn if we find a
	predicate not in that list.

	* reload.c (find_reloads): Reject an alternative if two operands
	match the same output and we have to do a reload.

	* rs6000.c (rs6000_override_options): Change processor type to
	"rios1"; allow "rios" as synonym.
	Add synonyms for "mpc6xx".
	* rs6000.h (enum processor_type): Change from RIOS to RIOS1.
	(PROCESSOR_DEFAULT): Likewise.
	* rs6000.md (attribute "cpu"): Change from "rios" to "rios1"; all
	uses changed.

	* xm-alpha.h: Add extern declaration for alloca.

	* a29k.h (PREDICATE_CODES): Fix typos and add missing entries.
	* alpha.h, i860.h i960.h, m88k.h, mips.h, rs6000.h: Likewise.

Sat Sep 18 09:27:03 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (convert_move): Use emit_library_call_value.

Sat Sep 18 08:01:44 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* alpha.h (REG_ALLOC_ORDER): Add missing entries.

	* combine.c (recog_for_combine): Fix typos in previous change.

	* reload.c (earlyclobber_operand_p): New function.
	(combine_reloads): Use it.
	(find_reloads): Set reload_earlyclobbers earlier.
	(refers_to_regno_for_reload_p): Count something being stored into
	if it is an earlyclobber operand.

Fri Sep 17 21:40:02 1993  Per Bothner  (bothner@cygnus.com)

	* fold-const.c (invert_truthvalue):  Instead of aborting,
	build a TRUTH_NOT_EXPR when unable to optimize.
	(The aborts were not a problem for C, which always first
	calls truthvalue_conversion, but that should not be
	necessary for a language with real Booleans.)

Fri Sep 17 20:38:53 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (output_init_element): Update constructor_bit_index
	for union types.

	* libgcc2.c: Declare __fixunsxfdi only if really have XFmode.
	Likewise for __fixunstfdi.

Fri Sep 17 18:08:37 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (recog_for_combine): Always reject a PARALLEL containing
	our special CLOBBER.

	* cse.c (fold_rtx, case MINUS): Copy result obtained from
	hash table.

	* cse.c (fold_rtx, case SUBREG): If paradoxical SUBREG of a 
	constant, return the constant.

	* c-typeck.c (lookup_field): Use HOST_WIDE_INT instead of long or
	int when we want integer wide enough to hold a pointer difference.

Fri Sep 17 16:03:22 1993  Per Bothner  (bothner@cygnus.com)

	* dbxout.c (dbxout_type):  For CHAR_TYPE and BOOLEAN_TYPE (in
	languages that have them - not C), adopt an AIX convention
	to distinguish these from other types.

Fri Sep 17 09:02:06 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.h (emit_library_call_value): Fix declaration.

Thu Sep 16 12:05:44 1993  Ian Lance Taylor  (ian@cygnus.com)

	* Makefile.in (fixinc.ready): New target, like libgcc2.ready,
	depending on xgcc and cpp.
	(stmp-fixinc): Depend on fixinc.ready instead of xgcc and cpp.
	(clean): Remove fixinc.ready.

Thu Sep 16 10:22:17 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* reload.c (find_reloads): For PLUS operand, call find_reloads_toplev.

	* optabs.c (expand_complex_abs): Fix typo in prev change.

Thu Sep 16 02:06:11 1993  Jim Wilson  (wilson@cygnus.com)

	* flags.h (current_function_has_nonlocal_goto): Declare.
	* function.h (struct function): New field has_nonlocal_goto.
	* function.c (current_function_has_nonlocal_goto): New var.
	(push_function_context): Save it.
	(pop_function_context): Restore it.
	(init_function_start): Init it.
	* integrate.c (function_cannot_inline_p): Don't inline if it's set.
	* stmt.c (expand_goto): Set it.

	* reorg.c (mark_set_resources): For CALL_INSN, if followed by a
	NOTE_INSN_SETJMP note, then assume that all registers are clobbered.
	Handle case where CALL_INSN is in a sequence.

Wed Sep 15 17:38:38 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* gstddef.h: Delete the conditional that used to semi-avoid
	interference with sys/stdtypes.h on Sun.  (fixincludes makes
	it ok.)

Wed Sep 15 16:17:09 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.h (ASM_FILE_START): Fix access information for $LIT$
	subspace.

Wed Sep 15 14:53:49 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/ns32k/ns32k.md: Add peepholes for stack adjust plus pushes.

Wed Sep 15 13:38:24 1993  Doug Evans  (dje@canuck.cygnus.com)

        * c-typeck.c (lookup_field): New function (for chill).
	(build_component_ref): Call it.

Wed Sep 15 08:12:32 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* libgcc2.c: Declare __fixunsxfdi and __fixunstfdi.

	* integrate.c (copy_for_inline, copy_rtx_and_substitute):
	Always preserve the volatil flag when copying ASM_OPERANDS.

Tue Sep 14 21:56:20 1993  Jim Wilson  (wilson@cygnus.com)

	* c-typeck.c (valid_compound_expr_initializer): New function.
	(digest_init): Handle compound expressions as initializers when
	pedantic.

	* varasm.c (immed_double_const, immed_real_const_1): Don't touch
	const_double_chain if not inside a function.

Tue Sep 14 16:22:03 1993  Per Bothner  (bothner@wombat.gnu.ai.mit.edu)

	* c-typeck.c (digest_init):  Compare types using comptypes
	instead of comparing pointers.  (Helps Chill front end.)

Tue Sep 14 12:16:52 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* calls.c (emit_library_call_value): Finish making it work.
	* optabs.c (expand_float): Use emit_library_call_value.
	(expand_unop, expand_binop): Likewise.
	(expand_complex_abs): Likewise.
	Also pass SUBMODE as output mode to emit_library_call_value.
	* function.c (aggregate_value_p): Allow type node as argument.

	* config/ns32k/ns32k.h (FUNCTION_PROLOGUE, FUNCTION_EPILOGUE):
	If omitting frame pointer, output an adjspd if necessary.
	Use movd to save registers if four or less need saving.
	Set DEPTH properly.

	* reload.c (find_dummy_reload): New args inmode, outmode.
	(find_reloads): Pass new args.
	(push_reload): Likewise.

Mon Sep 13 12:52:03 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (set_init_index): Don't allow variable indices.

	* c-decl.c (complete_array_type): Handle TREE_PURPOSE
	of array constructor elements.

	* expr.c (store_constructor): Handle TREE_PURPOSE of array constructor.
	(expand_expr, ARRAY_REF case): Likewise.

	* varasm.c (output_constructor): Handle index value in
	the TREE_PURPOSE, for array constructors.

	* c-typeck.c (output_init_element): When putting an elt into a
	CONSTRUCTOR, always set the TREE_PURPOSE (even for arrays).
	Copy the node if it's an INTEGER_CST.
	(output_pending_init_elements): If have gap and not incremental,
	advance constructor_unfilled_fields or constructor_unfilled_index.

Sun Sep 12 23:00:25 1993  Per Bothner  (bothner@wombat.gnu.ai.mit.edu)

	* expr.c (expand_expr, case ARRAY_REF):  Coerce lower bound (if
	non-zero) to sizetype before subtraction.

Sun Sep 12 16:18:18 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (push_init_level): Pop any implicit levels
	that have been filled up.
	Don't die if constructor_type is 0.
	(process_init_element): If VALUE is 0 for union type,
	update constructor_bit_index.

Sun Sep 12 10:59:08 1993  Bill Cox  (bill@cygnus.com)

	* c-typeck.c (digest_init): Remove obsolete comments on args
	TAIL, OF_WHAT.

Sun Sep 12 08:45:36 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* loop.c (basic_induction_var): New arg MODE.
	Use it to call convert_modes.
	(strength_reduce): Supply the new arg to basic_induction_var.

	* expmed.c (expand_shift): Use convert_modes.
	(emit_store_flag): Likewise.

Sat Sep 11 16:44:15 1993  Doug Evans  (dje@canuck.cygnus.com)

	* collect2.c (main): Provide upward compatibility with old version
	of collect (avoids infinite mutual recursion between the two).

Sat Sep 11 13:05:07 1993  Per Bothner  (bothner@wombat.gnu.ai.mit.edu)

	* c-typeck.c (constructor_no_implicit):  New variable.
	If set, dis-allows eliding of braces in initializers.
	(Set by Chill front-end.)
	* c-typeck.c (process_init_element):  Use it.

Sat Sep 11 15:55:25 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* stor-layout.c (layout_record): Turn off PCC_BITFIELD_TYPE_MATTERS
	rounding of field bitpos, if maximum_field_alignment is nonzero.

Fri Sep 10 08:52:01 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (check_init_type_bitfields): Check for mismatch
	between field's mode and its type's mode.

	* expr.c (protect_from_queue): Don't alter an existing MEM.
	(convert_modes): Use X's mode (not OLDMODE) unless it is VOIDmode.

Fri Sep 10 01:01:32 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)

	* config.sub: Recognize operating system `netbsd*'.

Thu Sep  9 18:09:14 1993  Per Bothner  (bothner@wombat.gnu.ai.mit.edu)

	* c-typeck.c (really_start_incremental_init, push_init_level):
	Add support for arrays with non-zero lower bounds. (Used by Chill.)

Thu Sep  9 19:20:59 1993  Jim Wilson  (wilson@cygnus.com)

	* tree.c (make_node): Put PARM_DECLs of nested functions onto
	parent's saveable obstack.

Thu Sep  9 14:17:00 1993  Ian Lance Taylor  (ian@cygnus.com)

	* Makefile.in (CROSS_LIBGCC1): New variable.  Rule to use when
	building libgcc1.a for a cross compiler.  Defaults to
	libgcc1.cross.
	* cross-make (LIBGCC1): Default to $(CROSS_LIBGCC1) rather than
	libgcc1.cross.
	* config/i386/t-next, config/i386/t-sol2, config/m88k/t-dgux,
	config/m88k/t-luna, config/m88k/t-dgux-gas,
	config/m88k/t-luna-gas, config/m88k/t-m88k,
	config/m88k/t-m88k-gas, config/m88k/t-sysv4,
	config/m68k/t-next, config/mips/t-bsd, config/mips/t-bsd-gas,
	config/mips/t-mips, config/mips/t-mips-gas,
	config/mips/t-osfrose, config/mips/t-svr3,
	config/mips/t-svr3-gas, config/mips/t-svr4,
	config/mips/t-svr4-gas, config/mips/t-ultrix, config/pa/t-pa,
	config/sparc/t-sol2, config/h8300/t-h8300, config/sh/t-sh,
	config/t-libc-ok (CROSS_LIBGCC1): Defined to be libgcc1.null.

Thu Sep  9 09:48:54 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (expand_expr): Set ignore for COND_EXPR with VOID_TYPE.

	* expr.c (convert_modes): New function.
	(convert_to_mode): Use that.
	* expr.h (convert_modes): Declared.
	* optabs.c (expand_twoval_binop): Use convert_modes.
	(expand_complex_abs): Likewise.
	(emit_cmp_insn): Likewise.
	(expand_inline_function): Likewise.
	* expmed.c (expand_divmod): Likewise.
	(emit_store_flag): Likewise.
	* loop.c (basic_induction_var): Likewise.
	* integrate.c (expand_inline_function): Likewise.

	* optabs.c (widen_operand): New arg OLDMODE.
	(expand_binop, expand_unop): Fix calls to widen_operand.

Wed Sep  8 18:25:50 1993  Doug Evans  (dje@cygnus.com)

	* sparc.c, sparc.h, sparc.md: Cosmetic changes only.  Just
	reordered code a little.

Wed Sep  8 14:49:59 1993  Jim Wilson  (wilson@cygnus.com)

	* dbxout.c (dbxout_parms): For parameters in registers, if use
	DECL_RTL, then must use TREE_TYPE instead of DECL_ARG_TYPE.

	* mips.md (fix_truncdfsi2, fixtruncsfsi2): Mark SImode scratch
	register as early clobbered when dest is in memory.

	* fixincludes (sbusdev/audiovar.h): Fix wrongly edited // comments
	nested within /* */ comments.

	* gcc.c (process_command): Don't warn for -x after last input file
	if spec_lang is zero.

	* fixinc.mips (bsd43/bsd43.h): Change /**/ to ##.

	* expr.c (convert_move): When truncating, call force_reg first if
	it is something that gen_lowpart won't understand.

	* sys-protos.h (getrlimit, getrusage, setrlimit): Return int not void.

Wed Sep  8 11:28:41 1993  John Hassey  (hassey@dg-rtp.dg.com)

	* m88k.c (output_call): Avoid use of jsr.n r1, this loses on
	the 88110.

Wed Sep  8 10:51:07 1993  David Edelsohn  (edelsohn@npac.syr.edu)

	* rs6000.h: (MASK_*, TARGET_*): Add target masks and tests.
	(TARGET_SWITCHES): Add target switches for various architectures
	and mnemonics options.
	(TARGET_OPTIONS): Add cpu type as special target option.
	(OVERRIDE_OPTIONS): Call rs6000_override_options to decipher.

	* rs6000.c (rs6000_cpu, rs6000_cpu_string): New variables.
	(rs6000_override_options): New function.

	* rs6000.md (define_attr): Expand list of instruction attributes.
	(define_function_unit): Compute delay information based
	upon processor type and expand functional unit types.
	(mulsi3, divsi3, divmodsi4, divsf3, divdf3, muldf3, movsf):
	Use expanded attributes.
	(load with update): Likewise.

Wed Sep  8 06:34:32 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (output_init_element): When adding to
	constructor_pending_elts, copy field.

Wed Sep  8 06:15:58 1993  David Gershovich  (dgirsh@iil.intel.com)

	* expmed.c (make_tree, case CONST_INT): Properly set high part if
	unsigned.

	* optabs.c (expand_binop): Must always widen second operand
	of shift.

Wed Sep  8 05:16:59 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (push_init_level): Diagnose extra brace group at end
	of record.  Set constructor_type to 0.
	(pop_init_level): Don't output anything if constructor_type is 0.
	(process_init_element): Do nothing if constructor_type is 0.

Tue Sep  7 19:11:20 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* c-common.c (c_build_type_variant): Allocate new type in same
	obstack as old one.

Tue Sep  7 17:45:50 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (digest_init): Fix error message text.

Tue Sep  7 14:32:51 1993  Leonid Baraz  (lbaraz@iil.intel.com)

	* sched.c (schedule_block): Correct type of BIT.

	* fold-const.c (fold): Don't try to process an RTL_EXPR.

Tue Sep  7 06:18:50 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* dbxout.c (dbxout_type): Handle enum constants bigger than one word.
	Don't print big unsigned values as negative.
	* c-decl.c (build_enumerator): Choose type properly for wide constants.
	(finish_enum): Always set type of the enumerators to the enum type.
	* c-typeck.c (default_conversion): For enum that's unsigned,
	if it's at least as wide as int, convert to an unsigned type.

	* config/i386/sol2.h (LIB_SPEC, LINK_SPEC, SWITCH_TAKES_ARG):
	Definitions copied from sparc/sol2.h.
	(CPP_SPEC): Copied from sparc/sol2.h, but deleted -msparclite.

Mon Sep  6 14:43:20 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* genextract.c (insn_name_ptr): Define for debugging.
	(walk_rtx, case MATCH_OP_DUP): Expand recog_dup_loc using XEXP not
	XVECEXP.

Mon Sep  6 13:28:03 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rtlanal.c (modified_between_p): Handle vectors.
	(modified_in_p): New function.
	(refers_to_regno_p): If setting AP, FP, or SP, we clobber the
	virtual registers.
	* optabs.c (emit_libcall_block): Don't move insns that reference
	things set in previous insns.

Mon Sep  6 08:35:34 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/mips/mips.h: Don't declare abort.

Mon Sep  6 01:03:58 1993  Jim Wilson  (wilson@cygnus.com)

	* protoize (abort): Correct volatile function declaration.

Sun Sep  5 18:23:09 1993  Doug Evans  (dje@canuck.cygnus.com)

	* Makefile.in (USER_H): Add va-h8300.h.

	* collect2.c (our_file_name, last_file_name): deleted.
	(our_file_names): New variable.
	(is_in_prefix_list): New function.
	(find_a_file): Call is_in_prefix_list.
	(main): Make COLLECT_NAMES a list of our invocations.
	If we've invoked ourselves, try again with ld_file_name.

Sun Sep  5 16:00:47 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* function.c (assign_parms): When parm needs conversion on entry,
	don't store it back in the slot where it was passed.

Sun Sep  5 14:51:14 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* c-decl.c (grokdeclarator): For PARM_DECLs, only call
	c_build_type_variant is constp or volatilep is true.

Sun Sep  5 06:44:09 1993  David Edelsohn  (edelsohn@npac.syr.edu)

        * rs6000.c: (print_operand): Convert fprintf of single letters
	to putc and convert fprintf of constant strings to fputs.
	Output '%u' operand as hexadecimal.

Sat Sep  4 11:16:18 1993  Craig Burley  (burley@gnu.ai.mit.edu)

	* c-common.c (truthvalue_conversion): A complex value is nonzero
	if either part is nonzero, not if both parts are nonzero.

Fri Sep  3 19:02:41 1993  Paul Eggert  (eggert@twinsun.com)

	* c-decl.c (build_enumerator): Apply default conversion to
	constant-expression.

Fri Sep  3 18:03:47 1993  Chris Lang  (chrisl@mirc00.ncms.org)

        * cccp.c (skip_if_group): Check for traditional mode when
        skipping ahead to next #, ignore unless at beginning of line.

Fri Sep  3 18:00:15 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h, i386/osfelf.h (LINK_SPEC): Pass -v and -dn on to
	the ELF linker, which now accepts these switches.

Fri Sep  3 13:34:22 1993  Doug Evans  (dje@cygnus.com)

	* i386/x-linux: Add -Iinclude to BOOT_CFLAGS.

Fri Sep  3 01:54:19 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.h (READONLY_DATA_ASM_OP): Define.
	(READONLY_DATA_SECTION): Define.
	(EXTRA_SECTIONS): Add in_readonly_data.
	(EXTRA_SECTION_FUNCTIONS): Add readonly_data.

Thu Sep  2 19:19:14 1993  Holger Teutsch  (holger@hotbso.rhein-main.de)

	* clipper.h : Improve generated code for C400 Clipper.
	(TARGET_SWITCHES): New options `c300' `c400'.
	(TARGET_C300, TARGET_C400): New defines.
	(TARGET_DEFAULT): Define as TARGET_C300.
	(CONDITIONAL_REGISTER_USAGE): New define.

Thu Sep  2 17:47:57 1993  Doug Evans  (dje@canuck.cygnus.com)

	* glimits.h (__INT_MAX__, __LONG_MAX__, __LONG_LONG_MAX__): New macros.
	(INT_MAX, LONG_MAX, LONG_LONG_MAX): Use them.
	(UINT_MAX, ULONG_MAX, ULONG_LONG_MAX): Ditto.

Thu Sep  2 14:26:28 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h (YES_UNDERSCORES): Delete macro, since we have
	redefined all of the macros that are based on using it.
	(CPP_SPEC, CC1_SPEC): Remove #ifndef NO_UNDERSCORE version.
	OSF/ELF will now omit the leading underscore by default.
	(LINK_SPEC): Pass -dy through to ELF linker.  Do not pass -v to
	ELF linker.

	* i386/osfelf.h (CPP_SPEC, CC1_SPEC): Remove #ifndef NO_UNDERSCORE
	version.  OSF/ELF will now omit the leading underscore by default.
	(LINK_SPEC): Pass -dy through to ELF linker.  Do not pass -v to
	ELF linker.


	* final.c (tree.h): Include tree.h to get the declaration for
	decl_printable_name.
	(last_filename): Global to hold last filename encountered in a
	NOTE.
	(add_bb): New function to do common code for emitting a basic
	block profiling increment.  Remember the current function, and if
	debugging, line number and filename for each basic block.
	(add_bb_string): New function to remember strings for profiling
	basic blocks.
	(end_final): Bump name array size to 20.  Use BSS to store profile
	block count array unless -fno-common.  Eliminate redefining name
	within for loop block.  Add a length field and three new parallel
	arrays for basic blocks to hold function name, and if debugging,
	line number and file name for basic block profiling.
	(final_start_function): Save a printable version of the current
	function name away if profiling basic blocks.
	(final_end_function): Forget the current printable version of the
	current function name if profiling basic blocks.
	(final): Move basic block profiling support to just call add_bb.
	(final_scan_insn): Ditto.
	(output_source_line): Save filename in last_filename.  If the file
	name was changed and profiling basic blocks, remember the new file
	name for the next call to add_bb.

	* libgcc2.c (L_bb): If BLOCK_PROFILER_CODE is defined, expand it
	here directly.  If BLOCK_PROFILER_CODE is not defined, add code
	that appends basic block profile information into a text file
	bb.out.  Move sun3 specific block profiling code to m68k/sun3.h.

	* Makefile.in (final.o): Final.c now includes tree.h.

	* m68k/sun3.h (BLOCK_PROFILER_CODE): Move the sun3 specific basic
	block profiling code here from libgcc2.c.

Wed Sep  1 19:00:06 1993  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)

	* rs6000.md (truncdfsf2): Round to single instead of doing nothing.

	* jump.c (jump_optimize): When optimize conditional jump around
	unconditional jump, handle case where prev_label can be zero.

	* c-decl.c (finish_decl): For static const variables, preserve
	initializers instead of discarding them.

Wed Sep  1 18:43:01 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* reload.c (find_reloads): Bump REJECT for a hard register; just
	not for a pseudo.

	* rs6000.md: Clean up hex constants a bit in emitted insns.

	* rs6000.c (input_operand): Allow "easy" FP constants.
	* rs6000.h (SECONDARY_MEMORY_NEEDED): New macro.
	* rs6000.md (movdf): Simplify by taking advantage of
	having SECONDARY_MEMORY_NEEDED.
	Fix bugs relating to order in which moves are done.

Wed Sep  1 18:08:36 1993  Jim Wilson  (wilson@cygnus.com)

	* reload.c (find_reloads_address_1): Handle SUBREGs same as REGs.

Wed Sep  1 18:03:45 1993  Mike Stump  (mrs@mole.gnu.ai.mit.edu)

	* collect2.c (is_ctor_dtor): Make sizeof argument match the
	string.

Wed Sep  1 15:01:48 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* Makefile.in (start.encap): Build g++ here also.

Tue Aug 31 16:30:53 1993  Jim Wilson  (wilson@cygnus.com)

	* combine.c (make_compound_operation): Handle the case
	(and (xor/ior (lshift...) (lshift...)) ...).
	(make_field_assignment): In get_pos_from_mask call, only invert
	bits in mode mask.

	* reload.c (push_reload): Abort is secondary_reload wants same
	class as an input reload.

	* Makefile.in (libgcc1.a, libgcc2.a): Don't use set -e.
	* configure (i[34]86-*-lynxos, m68k-*-lynxos, sparc-*-lynxos): Use
	xm-lynx.h, x-lynx.  Don't run fixincludes.
	* x-lynx, xm-lynx.h: New files.

	* Makefile.in (xsys-protos.h): Use fixtmp.c not tmp.c, and delete
	it afterwards.

	* function.c (assign_stack_temp): When allocate a slot too large,
	split extra off into a slot of its own.
	(combine_temp_slots): New function.
	(free_temp_slots, pop_temp_slots): Call combine_temp_slots.

Tue Aug 31 06:35:37 1993  David Edelsohn  (edelsohn@npac.syr.edu)

	* rs6000.md: (zero_extendqisi2, zero_extendqihi2): Change anonymous
	patterns to use 16-bit and 32-bit hexadecimal values and masks
	instead of bit ranges if constant.
	(rotlsi3, lshrsi3, move condition codes, scc insns): Likewise.

Tue Aug 31 06:25:52 1993  Paul Eggert  (eggert@twinsun.com)

	* c-decl.c (struct c_function): Remove unneeded enum_next_value.
	(push_c_function_context, pop_c_function_context): Don't save it.

Mon Aug 30 16:16:56 1993  Paul Eggert  (eggert@twinsun.com)

	* c-decl.c (get_parm_info, store_parm_decls): If PROMOTE_PROTOTYPE,
	promote all integral types shorter than int, including short enums.
	* c-typeck.c (convert_arguments): Likewise.
	* cp-decl.c (grokparms): Likewise.
	* cp-except.c (finish_exception_decl): Likewise.
	* cp-typeck.c (convert_arguments): Likewise.

Sun Aug 29 18:34:25 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.h (TARGET_NO_FP_IN_TOC): New; deleted TARGET_FP_IN_TOC.
	(TARGET_SWITCHES): Rearrange to have three TOC choices.
	(ASM_OUTPUT_SPECIAL_POOL_ENTRY): Use TARGET_NO_FP_IN_TOC.
	* rs6000.c (output_toc): Likewise.

Sat Aug 28 15:04:35 1993  Jim Wilson  (wilson@cygnus.com)

	* mips.h (SELECT_SECTION): Simplify sdata_section test.

	* lynx.h (CPP_SPEC): Use include_v not include-v.
	(LINK_SPEC): Add missing `-' before `k' option.
	(PREFERRED_DEBUGGING_TYPE): Define to DBX_DEBUG.
	(SDB_DEBUGGING_INFO): Define.
	(MD_EXEC_PREFIX): Define to /usr/local/lib/gcc-.
	(LINK_LIBGCC_SPECIAL_1): Define.
	(NAME__MAIN, SYMBOL__MAIN): Define.

	* sparc.h (EXTRA_CONSTRAINT): Delete 'S'.
	* sparc.md (call+1, call+2, call_value+1, untyped_call+1): Split
	into two patterns, one using address_operand and 'p', the other
	immediate_operand and 'i'.

Fri Aug 27 15:43:19 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (nonzero_bits): Fix reversed test for when we
	need to insert extra bits when sizes differ.
	(nonzero_bits, case EQ): Always return STORE_FLAG_VALUE when returning
	integer mode; remove now-redundant test.

	* rs6000.h (LINK_SPEC): Add -bexport:/usr/lib/libg.exp when -g.

Fri Aug 27 13:17:28 1993  Jim Wilson  (wilson@cygnus.com)

	* rs6000.c (print_operand_address): When TARGET_MINIMAL_TOC, use
	r30 instead of r2 for TOC references.
	(output_prologue): If TARGET_MINIMAL_TOC, and the constant pool
	is needed, then setup r30.
	(output_toc): When TARGET_MINIMAL_TOC, use .long instead of .tc.
	* rs6000.h (TARGET_MINIMAL_TOC): New macro.
	(TARGET_SWITCHES): Add -mminimal-toc and -mno-minimal-toc.
	(ELIMINABLE_REGS): Add elimination for r30.
	(CAN_ELIMINATE): Add case for r30.
	(INITIAL_ELIMINATION_OFFSET): Add case for r30.
	(toc_section): When TARET_MINIMAL_TOC, initialize toc_table.

Thu Aug 26 17:59:38 1993  Doug Evans  (dje@cygnus.com)

	* gstdarg.h, gvarargs.h: Add support for H8/300H.
	* va-h8300.h: New file.

Thu Aug 26 15:15:27 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Cygnus<->FSF C++ front-end merge.
	Wed Aug 25 17:55:58 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-class.c (alter_visibility): Properly grok protected visibility.

	Wed Aug 25 12:55:17 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-typeck.c (c_sizeof): If we're given an OFFSET_TYPE, work with
	the type it refers to.

	* cp-decl.c (finish_function): Properly handle inline functions,
	don't just call rest_of_compilation.

	* cp-decl2.c (flag_inline_debug): Deleted, never used.
	(lang_f_options): Deleted -finline-debug.
	* toplev.c (lang_options): Likewise.

	Tue Aug 24 16:06:23 1993  Mike Stump  (mrs@poseidon.cygnus.com)

	* cp-dem.c: Deleted.  See demangler in the binutils distribution.

	Tue Aug 24 14:24:34 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (start_function): Don't get ready to complain about a
	built-in C-linkage function against a C++-linkage function.

	Tue Aug 24 13:54:43 1993  david d `zoo' zuhn  (zoo@rtl.cygnus.com)

	* g++.c: also include <sys/types.h>

	Tue Aug 24 05:39:57 1993  Michael Tiemann  (tiemann@blues.cygnus.com)

	* cp-parse.y (id_scope): Renamed from scoped_id.  Also added handler
	for case when rule appears after `dont_see_typename' action.  Now
	handles pointer-to-member syntax.

	Mon Aug 23 14:04:34 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-parse.y (datadef): Disallow forward declaration of an enum.

	* cp-class.c (finish_struct): Set LAST_X to X, so we keep the chain
	in some semblance of sanity.  Makes more than one nested typedef
	work properly.
	* cp-decl.c (grokdeclarator): Rewrite how class-local typedefs are
	handled to generate a TYPE_DECL that's useful.

	* cp-decl.c (start_function): Don't error out if it's a static
	function; don't return 0, which can cause other problems.

	Sun Aug 22 18:00:57 1993  Michael Tiemann  (tiemann@blues.cygnus.com)

	* cp-decl.c (duplicate_decls): Set DECL_OVERLOADED flag on "C"
	functions so that they are treated properly when "C++" functions of
	the same name are declared before they are.

	Sun Aug 22 13:31:44 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Fix how we handle binding levels, and tweak Niklas's new scoping
	code to work 100%.  This work should significantly improve how
	g++ handles the use of nested classes.
	* cp-tree.h (NEW_CLASS_SCOPING): Default to 1 now!
	* cp-decl.c (pop_binding_level): Set current_binding_level to be
	class_binding_level if it's non-NULL.  Change code that looks for
	our method of climbing back up the binding levels when we're
	dealing with a parm.
	(pushlevel_class): Call push_binding_level, not pushlevel.
	(poplevel_class): Don't weird out if level is 0.  DO NOT set
	class_binding_level to the level_chain, this was the biggest bug
	that made the pushes and pops to end up being unbalanced.
	Call pop_binding_level instead of manually putting the level on
	the free_binding_level chain.
	(pop_from_top_level): Don't call poplevel if previous_class is
	non-NULL.
	(finish_function): Call expand_start_bindings and
	expand_end_bindings in a balanced way.
	(finish_function): Don't flail around screwing with the RTL for
	the function in a very special case, just always call
	rest_of_compilation as we normally would.
	(finish_method): Call poplevel, not pop_binding_level.
	* cp-class.c (pushclass): Don't call unuse_fields.
	* cp-tree.c (break_out_calls): Always call copy_node, not just
	when changed++ == 0.
	* cp-search.c (bridge_obstack): Deleted.
	(push_class_decls): Use search_obstack, not bridge_obstack.
	(init_search_processing): Don't init bridge_obstack anymore.

	* cp-init.c (build_new): Don't clear LOOKUP_COMPLAIN on flags, since
	we need to honor the visibility of what we find.

	Sat Aug 21 12:07:26 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (grokdeclarator): Give an error about an array of
	offset types and method types, in addition to reference types.
	Also make sure to set `type' to be error_mark_node for each.

	* cp-parse.y (primary, PLUSPLUS/MINUSMINUS): Resolve the OFFSET_REF
	here.
	* cp-typeck.c (build_x_unary_op): Not here.

	* cp-class.c (finish_struct): Set DECL_CLASS_CONTEXT only if it's
	a virtual function.
	* cp-decl.c (grokfndecl): Communicate the virtual bit to function
	decls that overload a virtual function from a base class.
	* cp-search.c (dfs_pushdecls): Look at DECL_CLASS_CONTEXT if it's
	a virtual function.

	Fri Aug 20 13:35:54 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Make the g++ driver work with MS-DOS.
	* g++.c (P_tmpdir, {R,W,X}_OK) [__MSDOS__]: Defined.
	(choose_temp_base_try, choose_temp_base, perror_exec,
	run_dos) [__MSDOS__]: New functions for the g++ program to operate
	correctly under MS-DOS.
	(temp_filename, temp_filename_length) [__MSDOS__]: New variables.
	(main): Fix off-by-one error in allocation of arglist.  When
	running the main GCC program, handle running it under OS/2, MS-DOS,
	as well as on a system that has execvp(2).  Only find the location
	of the GCC executable if we're not using DOS.

	* cp-decl.c (poplevel): Only call remember_end_note if we haven't
	already created the block.  Set TREE_USED on the block.
	(duplicate_decls): If the type of either the old or new decl is an
	error_mark_node, we've already issued an error so set types_match
	to be 1 now.
	(xref_defn_tag): Mark the TYPE_DECL as ignored if doing dwarf
	debugging.

	* cp-parse.y (base_init, nodecls): Call keep_next_level to make
	sure the BLOCK node is kept with the outermost curly braces of a
	function.
	(compstmt): For `{ }', insert a .pushlevel and do all of the other
	stuff we need in every other compstmt situation, to generate proper
	debugging for such things and handle the binding levels properly for
	them.

	Thu Aug 19 18:24:25 1993  Mike Stump  (mrs@cygnus.com)

	* cp-init.c (build_vec_delete): Wrap void COND_EXPR in NOP_EXPR, so
	that the backend does not abort when trying to use the void mode
	expression.  Fixes make check (tString.o) in libg++.

	Thu Aug 19 12:21:12 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-typeck.c (build_x_unary_op): When we receive an OFFSET_REF,
	resolve it before looking for a way to handle the operation.

	* cp-method.c: Include ctype.h.

	Thu Aug 19 12:00:08 1993  Mike Stump  (mrs@cygnus.com)

	* cp-class.c, cp-search.c (NEW_SEARCH, NEW_CONVERT,
	CHECK_convert_pointer_to_single_level): Remove ability to revert to
	old code, and remove checks.  Cleans-up the code a little.

	Thu Aug 19 00:41:55 1993  Mike Stump  (mrs@cygnus.com)

	* cp-init.c (expand_aggr_init): Avoid faulting, give error instead.

	Wed Aug 18 22:43:25 1993  Mike Stump  (mrs@cygnus.com)

	* cp-lex.h (RID_BIT_TYPE, RIDBIT_SETP, RIDBIT_NOTSETP, RIDBIT_SET,
	RIDBIT_RESET, RIDBIT_RESET_ALL, RIDBIT_ANY_SET): New RID macros,
	replaces RIDBIT macro.  The new macros allow us to easily expand
	past 32 RIDs.
	* cp-decl.c (grokvardecl, grokdeclarator): Use them.

	* cp-decl.c (grokdeclarator): Implement `mutable' keyword.
	* cp-lex.c (init_lex, ): Ditto.
	* cp-lex.h (enum rid): Ditto.
	* cp-ptree.c (print_lang_decl): Ditto.
	* cp-tree.h (struct lang_decl_flags, DECL_MUTABLE_P): Ditto.
	* cp-typeck.c (build_component_ref_1, build_component_ref): Ditto.
	* gplus.gperf (mutable): Ditto.
	* cp-hash.h: Regenerate.

	* cp-tree.h (struct lang_type): Fill out type_flags to multiple of 4
	bytes for MIPS.

	Fri Aug 13 16:07:46 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-lex.c (DEBUG_DEFAULT_FUNCTIONS): Take out the #undef, so we can
	use the command line to turn this on.

	* cp-decl.c (grokdeclarator): Look for IDENTIFIER_TEMPLATE in the
	name of current_class_type, not in current_class_type itself.

	* cp-decl.c (pushdecl): Change to also check TREE_PUBLIC on the decl
	in question, and do a pedwarn_with_decl instead of
	warning_with_decl for conflicting extern declarations.

	Fri Aug 13 12:26:41 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-tree.h: Delete all the old PARANOID stuff, it's suffered
	serious bit rot.
	(PRINT_LANG_DECL, PRINT_LANG_TYPE): Deleted, not used anymore.
	(LANG_ID_FIELD, SET_LANG_ID): New macros.
	({,SET_}IDENTIFIER_{LABEL_VALUE, IMPLICIT_DECL, AS_DESC, AS_LIST,
	ERROR_LOCUS}): Redefine these macros to use the new LANG_ID_FIELD
	and SET_LANG_ID ones, so everything is much cleaner and readable.

	* cp-decl.c (pushtag) [NEW_CLASS_SCOPING]: Push into the template's
	class scope before trying to push the decl, and then pop back out.
	(globalize_nested_type) [NEW_CLASS_SCOPING]: Asserts 348 and 349
	aren't correct, shadow can come out to be null in some situations.

	Thu Aug 12 10:56:50 1993  Mike Stump  (mrs@cygnus.com)

	* cp-method.c (build_overload_name): Allow the debugger to
	deterministically demangle names with more than 9 nested class
	levels.

	Thu Aug 12 00:46:54 1993  Mike Stump  (mrs@cygnus.com)

	* cp-search.c (pushd_stack_level): Fix memory corruption problem.
	Don't assume that the obstack won't move, because they will.  Among
	other things, the fix allows one to nest classes upto 240 levels
	deep, instead of 60 or so.

	Thu Aug 12 00:38:05 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* cp-decl2.c (finish_file):  Use new get_file_function_name().
	* cp-tree.h (FILE_FUNCTION_FORMAT):  No longer needed.

	Fri Aug  6 11:37:08 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (pop_binding_level) [DEBUG_CP_BINDING_LEVELS]: Don't
	call abort, since we need to see where things end up.

	Fri Aug  6 11:13:57 1993  Mike Stump  (mrs@cygnus.com)

	* cp-class.c (finish_struct): Blast away old DECL_SIZE on
	base_layout_decl so that the old value is not reused, but rather the
	new value in the TREE_TYPE (TYPE_SIZE ()) will be.

	Thu Aug  5 18:45:26 1993  Mike Stump  (mrs@cygnus.com)

	* cp-init.c (emit_base_init): Move vbase vtable pointer init to very
	end of base initialization code.  Completes July 30 change.  The
	dynamic type of a virtual base should not be the type of the current
	constructor, until after all bases are initialized.

Thu Aug 26 06:00:09 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c: (apply_args_register_offset): Don't use ANSI-style
	definition.

Wed Aug 25 19:37:26 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* expmed.c (store_bit_field): Do not use bitfield instructions for
	STRICT_ALIGNMENT machines if the MEM's alignment isn't as big as
	the MEM's mode.

Wed Aug 25 19:17:13 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* c-typeck.c (format_char_info_print_table, "p"): Allow width.

Tue Aug 24 18:36:31 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.c (output_{pro,epi}log): Don't need no-ops after calls
	to functions to save and restore FP regs.

Tue Aug 24 15:43:43 1993  Michael Meissner  (meissner@osf.org)

	* osfrose.h (SUBTARGET_SWITCHES): Add -mlarge-align and
	-mword-align to control whether alignments of > 4 are honored.
	(ASM_OUTPUT_ALIGN_CODE): If -mlarge-align allow alignments > 4.
	(ASM_OUTPUT_ALIGN): Ditto.
	(ASM_OUTPUT_LOOP_ALIGN): Always do a .align 2.
	(FUNCTION_BLOCK_PROFILER): Define.
	(BLOCK_PROFILER): Define.

Tue Aug 24 14:04:11 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.c (compute_frame_size): Always align stack to 64 byte
	boundary.

	* pa.h (STACK_BOUNDARY): Stack pointer is 512 bit (64 byte)
	aligned.

	* pa.c (output_call): Use ASM_OUTPUT_INTERNAL_LABEL instead of
	output_asm_label.

Tue Aug 24 11:24:27 1993  Kresten Krab Thorup  (krab@iesd.auc.dk)
 
        * Merge of Objective C related changes since June 1.
 
        * objc/xforward.c, objc/mutex.h: Files removed.
        * objc/encoding.[ch]: New files.
	* objc/todo: File removed.
 
        Tue Jun  1 00:05:12 1993  Kresten Krab Thorup  (krab@iesd.auc.dk)
 
        * expr.c (apply_args_register_offset): New function
        (apply_args_reg_offset): New variable
        (apply_args_size): Added initialization of apply_args_reg_offset. 
 
        * objc-act.c (offset_is_register): New variable
        (forwarding_offset): Use apply_args_register_offset to get
        register offset.
        (encode_method_def, encode_method_prototype): Prepend argument
        offset by '+' if passed in register. 
        (apply_args_register_offset): Added declaration.
        
        Sun Jun  6 20:57:03 1993  Kresten Krab Thorup  (krab@iesd.auc.dk)
 
        * objc/encoding.h, objc/encoding.c: New files.
        * objc/Object.m (-performv): Use new objc_msg_sendv.
        * objc/sendmsg.c (objc_msg_sendv): Use new encoding facilities.
        * objc/objc.h (arglist_t): Data-definition changed.
        * objc/xforward.c: File removed.
        * objc/Makefile (sendmsg.c, fflags, xforward): Targets removed;
        (OBJC_O): Added encoding.o;
        (OBJC_H): Added encoding.h, removed mutex.h.
 
        * objc/objc.h (nil_method): Don't define it, import it from sendmsg.c.
 
        Wed Jun 16 17:39:56 1993  Kresten Krab Thorup  (krab@iesd.auc.dk)
 
        * objc/objc-api.h: (CLS_SETNUMBER): Clear old number
        * objc/sendmsg.c (__objc_update_dispatch_table_for_class): 
        Don't free dtable... (memory leak to make posing work)
        * objc/class.c (class_pose_as): lazy copy dtables.
        #include sarray.h
 
        Tue Jun 22 21:39:11 1993  Kresten Krab Thorup  (krab@xiv)
 
        * objc/class.c (class_pose_as): Rewritten
        * objc/sendmsg.c (__objc_update_dispatch_table_for_class): 
        Free old dispatch table and install a new.
 
        Tue Aug 24 00:41:35 1993  Kresten Krab Thorup  (krab@iesd.auc.dk)
 
        * objc-act.c (generate_method_descriptors, generate_ivar_lists,
        generate_dispatch_tables): Reorganized use of constructors.
        (build_descriptor_table_initializer, build_ivar_list_initializer,
        build_dispatch_table_initializer): Removed argument `int *size'.  
 
        Tue Aug 24 00:52:04 1993  Kresten Krab Thorup  (krab@iesd.auc.dk)
 
        * objc/sendmsg.c (__objc_install_dispatch_table_for_class):
        Dynamically expand dispatch table when full.

Mon Aug 23 19:37:33 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.h (TARGET_TRAILING_COLON): Delete switch.  TARGET_GAS now
	controls the use of trailing colons.

Mon Aug 23 18:46:14 1993  Frederic Pierresteguy (F.Pierresteguy@frcl.bull.fr)

	* config/m68k/dpx2g.h (ASM_LONG): Move from dpx2.h.

	* configure (m68k-bull-sysv): Add support for working with native 
	assembler.
	* config/m68k/dpx2.h (MOTOROLA): Define this.
	(VERSADOS): This the name of the DPX2 assembler. Define this in case.
	(USG): Define this.
	(SGS_NO_LI): define this to suppress jump table usage.
	(TARGET_DEFAULT): Define this to 3 inside the conditional USE_GAS 
	since bitfields do not work a clean way on DPX2. 
	(EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION,
	SELECT_RTX_SECTION): #undef these.
	(READONLY_DATA_SECTION): Define to data_section.
	(*_ASM_OP, ASM_OUTPUT_*): Define these accordingly to the native 
	assembler syntax.
	(LONG_DOUBLE_TYPE_SIZE): Set to 64 to not use XFmode.
	(REAL_ARITHMETIC): Define this to use the software floating point 
	emulator.
	(JUMP_TABLES_IN_TEXT_SECTION): Define this to 1.
	(FUNCTION_PROLOGUE, FUNCTION_EPILOGUE): Override m68k.h default.
	(ASM_OUTPUT_ASCII): add a new variable to take care of the lentgh of
	the operand field which must be < 80 chars.
	(PRINT_OPERAND_ADDRESS): Override m68k.h default. 
	(PUT_SDB_TYPE): Output type in decimal.
	(PUT_SDB_FUNCTION_[START|END]): Override sdbout.c default. 
	(PUT_SDB_BLOCK_[START|END]): Override sdbout.c default. 

Mon Aug 23 18:33:26 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fold-const.c (twoval_comparison_p): Add new arg, SAVE_P; all
	callers changed.
	(fold, case EQ_EXPR): If SAVE_P is true after call to 
	twoval_comparison_p, call save_expr on the expression we make.

Mon Aug 23 07:57:41 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h (CC1_SPEC, CPP_SPEC): If NO_UNDERSCORE is
	defined, the ELF compiler defaults to -mno-underscores to remove
	leading underscores.  Clean up ROSE -pic options so that they are
	never passed when building ELF objects.
	* i386/osfelf.h: Likewise.

Sun Aug 22 23:36:24 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* expr.c (expand_builtin_apply): Fix typo.

	* pa.md (untyped_call): New define_expand.

Fri Aug 20 12:24:50 1993  Ian Lance Taylor  (ian@spiff.gnu.ai.mit.edu)

	* gcc.c (main): Correct August 6 change.

Thu Aug 19 19:19:19 1993  Jim Wilson  (wilson@cygnus.com)

	* combine.c (simplify_shift_const, XOR case): When applying
	distributive law, use shift_mode and GET_MODE (varop) instead of
	result_mode.

Thu Aug 19 08:28:50 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.md (scc): Fix typo in scc with compare and set.

	* combine.c (can_combine_p): Don't reject SUBREG assignments here.
	(subst): Instead, do it here, but also allow it in as a 
	nested SUBREG since the inner one will be eliminated.
	(simplify_and_const_int): Convert (and (neg X) (const_int 1))
	to a shift when X is known to be either 0 or 1.

	* fold-const.c (fold): Handle EQ_EXPR and NE_EXPR where both
	args are comparisons or BIT_AND_EXPR with constant 1.

Wed Aug 18 23:37:05 1993  Jim Wilson  (wilson@cygnus.com)

	* mips.h (SELECT_SECTION): Put object in sdata only if size is
	known, i.e. greater than 0.

Wed Aug 18 17:48:51 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (try_combine): Don't split a PARALLEL of a SIGN_EXTEND
	and the object being sign extended if we have made assumptions
	about the form the I2DEST.

	* combine.c (nonzero_bits): Handle case when BYTE_LOADS_EXTEND is
	not on and we are asked for something in a mode wider than it.

Wed Aug 18 02:21:35 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.md (movdf insn): Distinguish between offsettable and
	nonoffsettable memory locations when loading/storing a GR.
	(movdi insn): Likewise.  Loading a DImode constant can take as
	many as 4 insns (length of 16 bytes).

	* pa.md (zero_extendqihi2): No need to explicitly set a length;
	the defaults are correct.
	(zero_extendqisi2, floatsisf2, floatsidf2): Likewise.
	(fix_truncdfsi2, fix_truncsfdi2, fix_truncdfdi2): Likewise.

	* pa.c (emit_move_sequence): Check both reload_in_progress and
	reload_completed when choosing a scratch/temporary register.

	* pa.h (TARGET_KERNEL): Delete switch and all references to it.
	* pa.c (emit_move_sequence): Always handle secondary reloads for
	symbolic addresses.
	(secondary_reload_class): Symbolic operands always need a secondary 
	reload from R1_REGS if their target class is not R1_REGS.
	* pa.md (HIGH for symbolic operands): TARGET_KERNEL version is now
	the only choice.  Delete ! TARGET_KERNEL version.

	* pa.h (DEFAULT_GDB_EXTENSIONS): GDB extensiosn are on by default.
	* pa-hpux.h (DEFAULT_GDB_EXTENSIONS): Turn GDB extensions off.
	* pa-hpux7.h (DEFAULT_GDB_EXTENSIONS): Likewise.

	* pa.h (TARGET_GAS): New target flag to control use of GAS
	specific assembler directives.
	(TARGET_SWITCHES): Support -mgas and -mno-gas.
	(ASM_DECLARE_FUNCTION_NAME): If TARGET_GAS then emit .PARAM
	directives for static functions so argument relocations work.
	* pa-ghpux.h (TARGET_DEFAULT): Enable TARGET_GAS.
	* pa-gux7.h, pa-utahmach.h, pa.h (TARGET_DEFAULT): Likewise.
	* pa1-ghpux.h, pa1-utahmach.h, pa1.h (TARGET_DEFAULT): Likewise.

	* pa.c (hppa_legitimize_address): Rework address computation for
	x[n - m] so that problems with implicit space register selection
	are avoided.

	* pa.h (EXTRA_CONSTRAINT): Delete unused 'S' constraint.
	* pa.md (call_internal_symref): Make pattern unavailable if
	TARGET_LONG_CALLS.
	(call_value_internal_symref): Likewise.

Mon Aug 16 18:47:56 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	From parkes@uiuc.edu:
	* encore.h, ns32k.h (ASM_OUTPUT_ADDR_DIFF_ELT): Use .double instead
	of .word.
	* ns32k.h (CASE_VECTOR_MODE): Now SImode; was HImode.
	* ns32k.md (tablejump): Now SImode and uses cased.

	* fold-const.c (fold, case EQ_EXPR): Re-enable converting
	signed MOD operations to unsigned when inside comparisons
	against zero, but only when the second operand of the MOD
	is an integral power of two.

Mon Aug 16 12:38:28 1993  John Hassey  (hassey@dg-rtp.dg.com)

	* fixinc.dgux: Fixed va_list problem in _int_varargs.h

Mon Aug 16 11:26:57 1993  Kevin Buettner  (kev@spuds.geg.mot.com)

	* configure (m88k-mot-sysv4*): Added new configuration for m88k
	delta machines running svr4.

	* config/m88k/mot-sysv4.h: New file.

Mon Aug 16 11:16:32 1993  Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* combine.c: (use_crosses_set_p): Check for partially overlapping
	hard regs.

Sun Aug 15 20:17:20 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* reorg.c (find_end_label): If a suitable RETURN insn exists at
	the end of the current function, place a label in front of it for
	the end_of_function_label.

Fri Aug 13 16:40:03 1993  Pat Rankin  (rankin@eql.caltech.edu)

	* c-typeck.c (check_format): For scan of "%[", skip over scan set
        til closing ']' to avoid processing it as ordinary format characters.

Fri Aug 13 16:02:23 1993  Chip Salzenberg  (chip@fin.uucp)

	* c-common.c (declare_hidden_char_array): New function to
	factor out duplicate code in declare_function_name.
	Don't set DECL_EXTERNAL (which is illegal without TREE_PUBLIC)
	to prevent output; instead, set TREE_ASM_WRITTEN.
	(declare_function_name): Use declare_hidden_char_array.

Fri Aug 13 14:58:52 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/ns32k/encore.h (ASM_OUTPUT_ALIGN_CODE): Override as no-op.

Fri Aug 13 14:29:17 1993  Stephen Moshier  (moshier@world.std.com)

	* sparc.h (LONG_DOUBLE_TYPE_SIZE): Define to 128.

	* real.c (GET_REAL, PUT_REAL): Add TFmode versions.
	(MAXDECEXP, MINDECEXP): New decimal exponent limits
	that vary with definition of LONG_DOUBLE_TYPE_SIZE.
	(endian, ereal_atof, real_value_truncate, einfin, emdnorm, asctoeg):
	Add cases for TFmode.
	(etartdouble): New function converts REAL_VALUE_TYPE to TFmode
	for use by ASM_OUTPUT_LONG_DOUBLE.
	(edivm, emulm): Ifdef out, replace by faster multiply and divide.
	(etoe113, toe113, e113toe): New type conversions for TFmode.
	(asctoe113, e113toasc): New TFmode binary <-> decimal conversions.
	(at top level): Define constants ezero, eone, emtens, etens, ...
	in a new 20-byte format when LONG_DOUBLE_TYPE_SIZE = 128 and
	set NE to 10.  Otherwise, the internal format remains 12 bytes wide.
	(etoudi, etodi, ditoe, uditoe): New functions, signed and unsigned
	DImode float and fix, for real.c used in a libgcc-of-last-resort.
	(esqrt): New function, correctly rounded square root for libgcc.
	(etodec): Delete ifdef'd version.
	(eroundi, eroundui): Rename to efixi, efixui and always
	round towards zero.

	From frank@atom.ansto.gov.au (Frank Crawford):
	(etoibm, toibm, ibmtoe): New conversions for IBM 370 float format.
	(e53toe, e64toe, toe64, etoe53, toe53, etoe24, toe24, asctoe53,
	asctoeg, make_nan): Ifdef for IBM.

	* real.h (REAL_VALUE_TYPE): Define array at least 20 bytes wide
	if LONG_DOUBLE_TYPE_SIZE is 128 bits.
	(etartdouble): Declare and use for REAL_VALUE_TO_TARGET_LONG_DOUBLE
	when long double is TFmode.
	(REAL_VALUE_FIX, REAL_VALUE_UNSIGNED_FIX): Must always round
	towards zero.

Fri Aug 13 07:50:42 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (expand_expr, case SAVE_EXPR): Set MEM_IN_STRUCT_P
	appropriately when the result is a MEM.

	* integrate.c (expand_inline_function): Copy args that are in
	hard regs instead of substituting them directly into insns.

	* rs6000.md (subsi3): Merge alternatives.
	(comparison patterns): Eliminate generation of "sfi."; no such
	instruction exists.

Thu Aug 12 21:24:01 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/m68k/sun3.h (CPP_PREDEFINES): Define _CROSS_TARGET_ARCH.

Thu Aug 12 19:02:47 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.md (attribute "type"): Add new type, "branch".
	(attribute "length"): New attribute; put on all insns that don't
	have default length.
	(branch patterns): If conditional branch won't reach, take
	conditional branch around an unconditional branch.

	* rs6000.md (plus): Split (plus (COMPARISON FOO ...) ...) at FOO.

Thu Aug 12 14:04:40 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h (SUBTARGET_SWITCHES): Add -munderscores and
	-mno-underscores.
	(CPP_SPEC): If -mno-underscores, define __NO_UNDERSCORES__.
	(LPREFIX): Redefine, to take -m{,no-}underscores into account.
	(ASM_GENERATE_INTERNAL_LABEL): Ditto.
	(ASM_OUTPUT_INTERNAL_LABEL): Ditto.
	(ASM_OUTPUT_LABELREF): Ditto.

	* i386/osfelf.h (CPP_SPEC): If -mno-underscores, define
	__NO_UNDERSCORES__.

	* c-decl.c (pushdecl): Don't give nested warning messages if
	DECL_IN_SYSTEM_HEADER is set in order not to give warnings when
	defining new instances of __FUNCTION__ and __PRETTY_FUNCTION__.

Thu Aug 12 13:42:04 1993  Jim Wilson  (wilson@wookumz.gnu.ai.mit.edu)

	* sparc.c (legitimize_pic_address): Delete 4th arg SCRATCH.
	Fix all callers.
	(emit_move_sequence): Delete 3rd arg SCRATCH_REG.  Fix all
	callers.  If operand1 is an invalid PIC address, then legitimize
	it before doing anything else.
	* sparc.h (SECONDARY_INPUT_RELOAD_CLASS): Delete case for invalid
	PIC addresses.
	(CONSTANT_ADDRESS_P): Reject invalid PIC addresses.
	(LEGITIMATE_PIC_OPERAND_P): New macro.
	(GO_IF_LEGITIMATE_ADDRESS): Reject invalid PIC addresses.
	(LEGITIMIZE_ADDRESS): Fix call to legitimize_pic_address.
	* sparc.md (reload_insi): Delete.
	(*): Fix all callers of legitimize_pic_address and emit_move_sequence.

	* sched.c (sched_analyze_insn): Handle USE before a JUMP_INSN just
	like a USE before a CALL_INSN.
	* function.c (thread_prologue_and_epilogue_insns): For the
	epilogue, put USE insns immediately before the return insn.

	* sparc.h (ASM_OUTPUT_DOUBLE): Always use REAL_VALUE_TO_TARGET_DOUBLE.
	(ASM_OUTPUT_FLOAT): Always use REAL_VALUE_TO_TARGET_SINGLE.

Wed Aug 11 19:48:24 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* tree.c (get_file_function_name):  New function
	for language-independent constructor name generation.
	* objc-act.c (build_module_descriptor):  Use it.
	* tree.h (CONSTRUCTOR_NAME_FORMAT): Removed.

Wed Aug 11 19:50:05 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* reorg.c (try_merge_delay_insns): Fix typo.
	(fill_simple_delay_slots): Only access the JUMP_LABEL field
	if the INSN needing delay slots is a JUMP_INSN.

Wed Aug 11 15:09:52 1993  Michael Meissner  (meissner@osf.org)

	* c-typeck.c (output_init_element): Don't call default_conversion
	for a STRING_CST if type is directly suitable for it.
	(digest_init): Eliminate a lot of code that checks the variable
	'element', since element is always 0 in these code paths.

Wed Aug 11 17:59:28 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (combine_instructions): Fix typo on test of basic block
	number.

Wed Aug 11 17:44:38 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* configure (m68k-hp-bsd4.4*): Add missing *;
	move before m68k-hp-bsd*.

Wed Aug 11 09:21:56 1993  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: Get SIZE_TYPE by invoking gcc rather than cc; gcc
	location is passed in as fourth argument.
	* Makefile.in (stmp-fixinc): Depend upon xgcc and cpp; pass
	objdir/xgcc -Bobjdir/ as fourth argument to $(FIXINCLUDES).

Tue Aug 10 15:12:11 1993  Jim Wilson  (wilson@cygnus.com)

	* cse.c (cse_insn): After inserting src_eqv, check to see if it is
	identical to any uninserted SET_SRCs, and if so, set their src_elt
	to src_eqv_elt.

Tue Aug 10 12:56:46 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.h (DOLLARS_IN_IDENTIFIERS): Define as 2.

Mon Aug  9 19:02:49 1993  Per Bothner  (bothner@wombat.gnu.ai.mit.edu)

	Merged fixproto stuff from Cygnus.

	Fri Aug  6 12:23:04 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* fixproto, Makefile.in:  Rename tmp.[ci] -> fixtmp.[ci].

	Tue Aug  3 22:24:58 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* fixproto:  Find not only nested directories, but also
	links to directories.

	Mon Aug  2 18:58:35 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* fixproto:  Add kludge to getting hit by double globbing.
	* scan-types.sh:  Fix to emit #define, not a typedef.
	* patch-header.c (main):  Make sure to print a space after
	a function name when we didn't see a '('.
	* Makefile.in (stmp-fixproto): Fix so (/*...*/) becomes ().

	Fri Jul 30 17:18:22 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* fixproto:  Append seen files to fixproto.list file,
	instead of done_files variable (which could become too long).
	* fixproto:  Don't generate a huge rel_souce_files variable
	(which might become too long);  instead loop over directories.
	* fixproto:  Remove signal() from list of required functions
	for signal.h, because we can't grok its complicted prototype.
	* Makefile.in (mostlyclean):  Also delete fixproto.list.

	Thu Jul 29 12:43:53 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* scan-decls.c (skip_to_enclosing_brace):  New function.
	* scan-decls.c (main):  After a parameter list, skip
	any following function body (usually for inline functions).

	* fixproto:  Fix to make sure stdlib.h and unistd.h get
	the proper required_list, even when they need to be created.
	* fixproto:  Direct cpp error messages to /dev/null.
	* patch-header.c:  Make less verbose.

	Wed Jul 28 16:12:39 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* fixproto:  Rewrite to use a case statement instead of eval to
	set required_list and extra_check_list.
	* fixproto:  Simplify remaining call to tr improving portability.

	* scan-decl:  Recognize inline functions, emitting typecode 'I'.
	* patch-header (read_scan_file):  Handle inline functions.
	* patch-header (read_scan_file):  Fix thinko.  Rename variable.

Mon Aug  9 17:47:48 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (build_c_cast): For (void *) (FOO *) 0, return a nop_expr
	so it doesn't count as a null pointer constant.
	(convert_for_assignment, build_binary_op): Pedantically warn about
	that case if looking for a null_pointer_constant.
	(build_conditional_expr): Likewise.

	* ns32k.c (output_move_double): Fix typos in last change.

	* expr.c (store_expr): Don't return TEMP if it's a MEM.

Mon Aug  9 15:26:27 1993  Jim Wilson  (wilson@cygnus.com)

	* varasm.c (assembler_variable): For XCOFF_DEBUG, restore section
	if dbxout_symbol call changes it.

	* sched.c (schedule_insns): Don't emit a NOTE at the end of the last
	basic block if that would put it between a JUMP_INSN and a BARRIER.

	* mips.h (OPTIMIZATION_OPTIONS): Use |=, not &= to set -mpgopt.
	* mips.c (function_arg, DFmode case): Set regbase to GP_ARG_FIRST
	if cum->arg_number greater than or equal to 2.

Mon Aug  9 07:31:07 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* optabs.c (widen_operand): New function.
	(expand_binop, expand_unop): Call it.

Sun Aug  8 17:32:04 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (num_sign_bit_copies): Properly handle case when MODE is
	narrower than that of X.
	(simplify_shift_const): Remove change of July 26.

Sun Aug  8 17:26:57 1993  Jim Wilson  (wilson@cygnus.com)

	* sparc.c (sparc_type_code): Support range types.

	* expr.c (expand_increment): Call save_expr on inner expression if
	it is itself an increment expression.

	* configure (*-*-riscos*): Set broken_install.
	(mips-*-riscos[56789]sysv4): Use xm-sysv4.h.
	* mips/xm-sysv4.h: New file.
	* mips/svr3-5.h, mips/svr4-5.h (_SC_PAGE_SIZE): Define to
	_SC_PAGESIZE if that exists.

	* sparc.h (CONST_DOUBLE_OK_FOR_LETTER_P): Use fp_zero_operand.
	* sparc.c (reg_or_0_operand): Use fp_zero_operand.
	(fp_zero_operand): New function.

	* c-typeck.c (build_array_ref): Force array to be allocated on the
	stack if it is accessed by out-of-bound constant integer subscript.

	* configure (mips-*): Standardize indentation.
	(mips-*-*bsd*): Use t-bsd and t-bsd-gas.
	(mips-*-*sysv4*): Use t-svr4 and t-svr4-gas.
	(mips-*-*sysv*): Use t-svr3 and t-svr3-gas.
	* mips/t-bsd, mips/t-bsd-gas, mips/t-svr3, mips/t-svr3-gas,
	mips/t-svr4, mips/t-svr4-gas: New files.

Sun Aug  8 11:33:51 1993  John F Carr  (jfc@Athena.mit.edu)

	* expmed.c (SLOW_UNALIGNED_ACCESS): Define, but allow override.
	(store_bit_field): Test that instead of STRICT_ALIGNMENT.
	Also, allow fetching as non-bitfield if memory is aligned enough.
	(extract_bit_field): Install code here like that in store_bit_field.

Sun Aug  8 04:26:21 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (expand_assignment): If WANT_VALUE is 0, return NULL.
	(store_expr): Likewise.
	Rename arg SUGGEST_REG to WANT_VALUE.
	Never return TARGET if WANT_VALUE unless BLKmode.
	Instead, return TEMP or a value copied from TARGET.
	Pass 0 for WANT_VALUE in recursive calls that ignore value.

	* varasm.c (contains_pointers_p): New function.
	(assemble_variable): Use that.

	* toplev.c (rest_of_decl_compilation): Don't look at DECL_IGNORED_P.
	Don't output a read-only initialized extern variable.

	* c-common.c (declare_function_name): Set DECL_EXTERNAL in the decls.

Sat Aug  7 22:25:42 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (process_init_element): Don't call clear_momentary
	if value is 0.

Sat Aug  7 15:53:06 1993  Doug Evans  (dje@canuck.cygnus.com)

	* caller-save.c (MAX_MOVE_MAX, MAX_UNITS_PER_WORD): New macros.
        (regno_save_mode, regno_save_mem): Use them.
        * tm.texi (MAX_MOVE_MAX, MAX_UNITS_PER_WORD): Document them.

	* c-decl.c (init_decl_processing): Make long long available to
	use for SIZE_TYPE and PTRDIFF_TYPE.

Sat Aug  7 14:47:12 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/ns32k/ns32k.md (strict_low_part add/subtract recognizers):
	Use %2, not %1, in template.

Sat Aug  7 07:40:28 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* reload.c (find_reloads): Don't combine two reloads if their
	reload_reg_rtx values differ.

	* alpha.c (add_long_const): New function.
	(output_{pro,epi}log): Use it.
	If register save area is more than 32768 from SP, compute its
	address into a register.

	* expmed.c (expand_divmod): Clean up code and documentation,
	especially in areas related to when copies are made.

	* reload.c (push_reload, find_reloads): Treat (subreg (pseudo))
	and (subreg (mem)) the same.
	If we have (subreg:M1 (mem:M2 ...) ...), never do anything
	special if M1 and M2 are the same size.

	* tree.c (print_obstack_name): New function; derived from
	original debug_obstack.
	(debug_obstack): Call print_obstack_name.
	* print-tree.c (print_node): Print obstack node is contained in.

Sat Aug  7 04:47:43 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-decl.c (finish_decl): Allow file-scope static incomplete array.

Fri Aug  6 13:03:27 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* expr.c (expand_expr, case PLUS_EXPR): Goto binop2 not
	both_summands if we should not be returning a plus.

Fri Aug  6 16:35:50 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/m68k/m68k.md (call and call_value pic recognizers) [HPUX_ASM]:
	Output plain bsr, without `@PLTPC'.

Fri Aug  6 16:12:08 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* alpha.c (reg_or_6bit_operand): New function.
	* alpha.h (PREDICATE_CODES): Add reg_or_6bit_operand to list.
	* alpha.md (shifts): Use reg_or_6bit_operand for shift counts.

Fri Aug  6 15:57:58 1993  Ian Lance Taylor  (ian@cygnus.com)

	* gcc.c (main): If standard_startfile_prefix is a relative path,
	prepend standard_exec_prefix/MACHINE/VERSION and, if
	GCC_EXEC_PREFIX is defined, GCC_EXEC_PREFIX/MACHINE/VERSION.

	* configure: If config.status did not change, don't update its
	modification time.

Fri Aug  6 15:23:49 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (output_init_element): Fix backward test in last change.
	Use TYPE_MAIN_VARIANT.

Fri Aug  6 06:43:09 1993  Michael Meissner  (meissner@osf.org)

	* g++.c (fancy_abort): Provide function in case user does
	#define abort fancy_abort when building GCC.

Fri Aug  6 00:15:21 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cccp.c (main): If -v, print header search dir list.

	* c-typeck.c (output_init_element): Call default_conversion here.
	Set constructor_erroneous, etc., here.
	(process_init_element): Not here.

Thu Aug  5 20:55:47 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Cygnus<->FSF merge.

	Thu Aug  5 17:07:20 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-class.c (build_vtable, prepare_fresh_vtable): Turn on
	WRITABLE_VTABLES stuff that I disabled July 30th.
	* cp-pt.c: Include flags.h to get write_symbols.

	Thu Aug  5 15:50:25 1993  Mike Stump  (mrs@cygnus.com)

	* cp-class.c (finish_struct): Make DWARF conditional code, really
	DWARF conditional (write_symbols == DWARF_DEBUG).
	* cp-decl.c (pushtag): Ditto.
	* cp-decl2.c (finish_vtable_vardecl): Ditto.
	* cp-pt.c (end_template_instantiation): Ditto.
	* cp-search.c (dfs_debug_mark): Ditto.

	Wed Aug  4 15:42:19 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-typeck.c (build_object_ref): Pass the original basetype, not
	the type value of it, into build_scoped_ref (completes change of
	Jul 1).

	Wed Aug  4 14:40:35 1993  Mike Stump  (mrs@cygnus.com)

	* cp-class.c (related_vslot): Additional check to make sure vslots
	are related.
	* cp-class.c (modify_vtable_entries): Use DECL_CONTEXT, not
	DECL_CLASS_CONTEXT when finding the vtable to put the virtual
	function in, as otherwise we might not be able to find secondary
	vtables.  Ensures that the virtual function pointer will be put in
	the correct vtable, instead of the wrong one.
	* cp-class.c (modify_vtable_entry): Delete unused argument context.
	* cp-class.c (modify_vtable_entries): Ditto.

	Tue Aug  3 08:24:50 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-init.c (nc_nelts_field_id): New variable to cache the value of
	the "nelts" identifier, to avoid unnecessary calls to get_identifier.
	(init_init_processing): Use it.
	(build_new): Likewise.
	(build_vec_delete): Likewise.

	* cp-decl2.c (walk_vtables): Make sure the type of VARS isn't an
	error_mark_node when we're running down the list.

	* cp-decl.c (grokdeclarator): Give an error and return an
	error_mark_node, instead of saying sorry, when we're dealing with a
	structure that's not yet been defined.   Make sure type isn't an
	error_mark_node when looking for an anonymous type.

	* cp-pt.c (end_template_instantiation): If we're supplying dwarf
	debug info, set up the TYPE_STUB_DECL and output the rest of the
	debug output for the decl.

	* cp-search.c (pop_search_level): Change from a macro into a
	function, so we can more easily debug it.

	* cp-search.c (dfs_debug_mark): Only mark the type name as ignored
	if we aren't doing dwarf debugging.

	* cp-typeck.c (build_unary_op): Only allow the prefix operators to
	be lvalues, not the postfix ones.

	* cp-decl.c (duplicate_decls): Delete the code that saved and
	restored the UID of a decl, it's no longer necessary.

	* cp-call.c (compute_conversion_costs_ansi): Avoid generating
	warnings when we call build_type_conversion.

	Mon Aug  2 17:56:36 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (start_function): Complain about redeclaration of a
	template function, being careful to only deal with pre-parsed
	declarations that *are* in fact from templates.

	Fri Jul 30 18:03:10 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-class.c, cp-decl.c, cp-pt.c, cp-tree.h: Delete all of the old
	code for DEBUG_CP_BINDING_LEVELS, and replace it with a new, cleaner,
	and more usable format.

	Fri Jul 30 17:06:24 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-class.c (build_vtable, prepare_fresh_vtable): Temporarily
	disable the change of June 20th making vtables readonly by default.

	Fri Jul 30 14:47:09 1993  Mike Stump  (mrs@cygnus.com)

	* cp-init.c (emit_base_init): Make sure we initialize the pointer to
	vtables even when we are not in charge.  Fixes virtual calls to derived
	objects that have a static base type, so that they call derived
	functions, not base functions.
	* cp-search.c (build_vbase_vtables_init): Change comments to reflect
	uses of last argument more accurately.  Also rename last argument to
	a better name.

	Wed Jul 28 16:23:52 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-search.c (build_type_pathname): Deleted fn.
	* cp-class.c (build_type_pathname): Moved to here and made static,
	since prepare_fresh_vtable is the only fn that ever uses it.
	* cp-tree.h (build_type_pathname): Deleted prototype.

	* g++.c (error) [!HAVE_VFPRINTF]: Move before fatal to avoid an
	implicit declaration.

	Wed Jul 28 13:49:58 1993  david d `zoo' zuhn  (zoo@rtl.cygnus.com)

	* Makefile.in (g++-cross): Add an explicit $(srcdir) for g++.c, pass
	the quotes as part of GCC_NAME

	* g++.c: only define GCC_NAME if it's already undefined

	Tue Jul 27 10:48:30 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (finish_decl): Don't error on uninitialized const
	arrays.  Use error, not error_with_decl, so we know what really
	brought about the problems.

	* g++.c: New file, written in C so we don't do so many exec's, as we
	did with the shell script.
	* g++, c++: Deleted.
	* Makefile.in (STAGESTUFF): Added g++ and g++-cross.
	(all.cross): Added g++-cross.
	(all.build): Depend upon g++.
	(g++, g++-cross): New rules.
	(install-common): Depend upon g++.  Changed installation of g++/c++
	to install the g++ program, and link c++ to it.  Likewise for
	g++-cross and c++-cross.

	Mon Jul 26 09:40:37 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-typeck.c (build_unary_op) [case ADDR_EXPR]: When taking the
	address of an increment/decrement operation, act on the thing
	being incremented, not the ..._EXPR itself.

	Fri Jul 23 08:33:32 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-call.c (build_method_call): Check DECL_STATIC_FUNCTION_P, not
	TREE_STATIC, when validating a method call in a static call context.

Thu Aug  5 19:18:00 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* tree.h (TYPE_OBSTACK): New macro.
	(struct tree_type): Add new field obstack.
	* tree.c (make_node, copy_node): Set TYPE_OBSTACK.
	(build_type_variant, build_type_copy, build_pointer_type): Put
	new node in same obstack as old node; use push/pop obstacks.
	* stor-layout.c (layout_type): Put size-related nodes in same
	obstack as type.
	
	* reload.c (push_reload, find_reloads): Refine when we reload
	inside a SUBREG by respecting BYTE_LOADS_*_EXTEND; see comments
	in push_reload.

Thu Aug  5 14:17:59 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h (ASM_DECLARE_FUNCTION_SIZE): Enable setting the
	size for elf functions.

Thu Aug  5 01:44:37 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* toplev.c (rest_of_compilation): If not optimizing, turn off
	DECL_INLINE for functions declared as inline.  Avoid turning on
	DECL_INLINE when -finline-functions is used without -O.

Thu Aug  5 00:06:45 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* collect2.c (handler): Check whether c_file and o_file are 0.

Wed Aug  4 18:06:26 1993  Samuel A. Figueroa  (figueroa@cs.nyu.edu)

	* i386/gas.h (ASM_FILE_START): Write out two backslashes for each
	backslash in the filename.

Wed Aug  4 18:00:43 1993  Holger Teutsch  (holger@hotbso.rhein-main.de)

	* clipper.md (movdf+2): Allow `f' register as source operand in
	first alternative.

Wed Aug  4 07:35:03 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* reload1.c (eliminate_regs_in_insn): Always do elimination in
	REG_NOTES if we changed anything in the insn.

	* genattrtab.c: Include gvarargs.h after hconfig.h, like elsewhere.

Wed Aug  4 01:32:27 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (output_init_element): Call digest_init before
	calling output_constant.  Always pass 0, 0 for last 2 args
	to digest_init.

	* expr.c (do_tablejump) [PIC_CASE_VECTOR_ADDRESS]: If pic,
	copy INDEX to a register early, to avoid invalid address later.

Tue Aug  3 23:56:49 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* gcc.c (process_command): Don't check whether file `-' exists.

Tue Aug  3 18:52:13 1993  John Hassey  (hassey@dg-rtp.dg.com)

	* configure (m88k-dg-dgux*): Use fixinc.dgux.
	* x-dgux (INSTALL_HEADERS): Definition deleted.
	* fixinc.dgux: New file.

Tue Aug  3 17:34:53 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* calls.c (store_one_arg): Don't pass ARG->STACK as TARGET if it
	is a different mode than the expression (i.e., a promoted mode).

	* combine.c (force_to_mode): Now pass actual AND mask instead
	of number of bits; generalize appropriately.
	Move most cases from simplify_and_const_int in.
	(simplify_and_const_int): Remove most code from here; call
	force_to_mode instead.
	(subst, make_extraction, make_compound_operation): Change calls
	to force_to_mode.
	(make_field_assignment): Likewise.
	(simplify_comparison): Add call to force_to_mode when
	doing a sign bit comparison.
	* optabs.c (code_to_optab): New variable.
	(init_optab): Initialize it.
	* expr.h: Declare code_to_optab.

Tue Aug  3 15:40:16 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* gstddef.h: Test and define __INT_WCHAR_T_H.

Mon Aug  2 22:42:10 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* configure (i[34]86-sequent-sysv*): New alternative.
	* config/i386/seq-sysv3.h: New file.

	* combine.c (struct undo): Rename `rtx' fields to `r'.
	(undo_all, SUBST, gen_rtx_combine): Corresponding changes.

Mon Aug  2 18:53:23 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (subst): Move simple operations inside IF_THEN_ELSE 
	if the IF_THEN_ELSE is in the second operand as well as the first.
	(subst, case NEG): Use plus_constant to make a PLUS.
	(subst, case MINUS): Simplify (minus 1 (comparison foo bar)).
	(subst, case EQ): Add a number of missing cases where 
	comparisons may be replaced with arithmetic or logical ops.
	(subst, case IF_THEN_ELSE): Handle (if_then_else COND (OP Z C1) Z)
	in a more general manner.
	(simplify_and_const_int): Make AND with gen_binary in case we
	can simplify it.

Mon Aug  2 14:45:43 1993  Frederic Pierresteguy  (F.Pierresteguy@frcl.bull.fr)

	* genattrtab.c (substitute_address): In prototype, don't specify
	the arg types of the arg functions.

	* config/m68k/x-dpx2 (CLIB): Fix typo.

Mon Aug  2 06:36:53 1993  John F Carr  (jfc@Athena.mit.edu)

	* local-alloc.c (block_alloc):  Don't attempt to allocate a
	SCRATCH if it will not fit in scratch_list.

Mon Aug  2 00:02:54 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* calls.c (expand_call): Check properly for volatile function.

Sun Aug  1 04:18:23 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-common.c (decl_attributes): Support attributes `volatile'
	with alias `noreturn', and `const'.
	* c-parse.in (attrib): Accept those attributes.

	* c-typeck.c (build_binary_op): Warn about ordered comparison
	between pointers to complete and incomplete types.

	* c-parse.in (stmt): In an expr stmt, call default_conversion
	for arrays and for functions.

	* c-decl.c (finish_struct): No pedwarn for field with enum type
	if size matches int.
	(grokdeclarator): No error for void type for extern or global var.

	* c-typeck.c (digest_init): No error for a STRING_CST that already
	went through digest_init.
	(parser_build_binary_op): Generate a NON_LVALUE_EXPR, not NOP_EXPR,
	around a constant value.

	* config/m68k/amix.h (ASM_OUTPUT_INTERNAL_LABEL)
	(ASM_GENERATE_INTERNAL_LABEL): Definitions deleted.

	* expr.c (do_tablejump): Use PIC_CASE_VECTOR_ADDRESS if defined.
	* config/m68k/m68k.h (PIC_CASE_VECTOR_ADDRESS): Defined.
	(GO_IF_LEGITIMATE_ADDRESS): If pic, accept LABEL+INDEX.

	* c-decl.c (grokdeclarator): Warn here for volatile fn returning
	non-void type.
	(start_function): Not here.

	* c-decl.c (grokdeclarator): Don't pass on const and volatile
	fron function value type to function type.

Sat Jul 31 01:48:08 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (digest_init): Finish getting rid of tail.
	Also get rid of old_tail_contents.  Don't set free_tree_list.
	(free_tree_list): Var deleted.

	* c-typeck.c (process_init_element): Treat string constants specially
	only for arrays of integers.

Fri Jul 30 06:49:58 1993  Torbjorn Granlund  (tege@sics.se)

	* expmed.c (mult_is_very_cheap): Delete.
	(mult_cost): Delete.
	(init_expmed): Delete computation of mult_cost and mult_is_very_cheap.
	(expand_mult): Compute mult_cost here for every constant multiplier.
	(synth_mult): Return found algorithms through a struct pointer.
	
Fri Jul 30 06:45:35 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fold-const.c (fold, case NOP_EXPR): Delete a pair of conversions
	back to the original type when intermediate type is at least as wide.

	* combine.c: Remove change of July 21.
	(this_basic_block): New variable.
	(combine_instructions): Set it.
	(try_combine, distribute_links): Use it and basic_block_head
	to see if we've gone to a new basic block instead of trying
	to reproduce calculation done in flow.

	* stmt.c (expand_return): Don't use jumps for "return x == y" if
	they are expensive.

Fri Jul 30 02:03:12 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/i386/i386.md (ffssi2 and ffshi2 recognizers):
	Generate unique labels by hand.

Thu Jul 29 01:47:21 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (push_init_level): For braces around scalar, just warn.
	(process_init_element): Special handling for {"foo"}.
	(struct constructor_stack): New field `replacement_value'.
	(push_init_level, really_start_incremental_init): Clear new field.
	(pop_init_level): Return the replacement_value if any.
	At top level in initializer, output that value,
	and set the array size from it.

	* c-typeck.c (digest_init): Delete arg TAIL. Fix all calls.

	* objc-act.c (build_shared_structure_initializer):
	Call default_conversion for NAME.
	(add_objc_string): Make an ADDR_EXPR to return.
	(init_objc_symtab): Make ADDR_EXPR for UOBJC_SELECTOR_TABLE_decl.

	* objc-act.c: Build all CONSTRUCTORs with types.
	(build_constructor): New function.  All CONSTRUCTOR builds changed.
	(init_def_list, init_objc_symtab): New arg TYPE.
	(init_module_descriptor): Likewise.
	(init_objc_symtab): Pass TYPE arg to init_def_list.
	(generate_objc_symtab_decl): Pass TYPE arg to init_objc_symtab.
	(build_module_descriptor): Pass TYPE arg to init_module_descriptor.
	(build_descriptor_table_initializer): New arg TYPE.
	(generate_method_descriptors): Pass TYPE arg to
	build_descriptor_table_initializer.
	(generate_protocols): Pass TYPE arg to build_protocol_initializer.
	(uild_protocol_initializer): New arg TYPE.
	(build_ivar_list_initializer): New arg TYPE.
	(generate_ivar_lists): Pass TYPE arg to build_ivar_list_initializer.
	(build_dispatch_table_initializer): New arg TYPE.
	(generate_dispatch_tables): Pass TYPE arg to
	build_dispatch_table_initializer.
	(build_category_initializer): New arg TYPE.
	(build_shared_structure_initializer): New arg TYPE.
	(generate_category): Pass TYPE arg to build_category_initializer.
	(generate_shared_structures): Pass TYPE arg to
	build_shared_structure_initializer.

	* config/i386/x-ncr3000 (CC, OLDCC): Deleted.
	* config/i386/xm-sysv4.h [__HIGHC__]: Include alloca.h.

	* convert.c (convert_to_integer): Don't pass truncate into ABS_EXPR.

	* configure: Ignore -enable... and --enable... options.

Wed Jul 28 20:15:05 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (compare): Add ./ in tail command.

Wed Jul 28 15:36:11 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* integrate.c (copy_rtx_and_substitute, case LABEL_REF): If
	we turn off LABEL_REF_NONLOCAL_P, increment function_call_count.

	* integrate.c (copy_for_inline, case LABEL_REF): Properly copy
	LABEL_REF with LABEL_REF_NONLOCAL_P set.
	Copy LABEL_OUTSIDE_LOOP_P flag.
	(copy_rtx_and_substitute, case LABEL_REF): Likewise.
	(copy_rtx_and_substitute, case CONST): Make recursive call for
	a LABEL_REF in the constant pool.

	* c-iterate.c (iterator_loop_{pro,epi}logue): Set TREE_SIDE_EFFECTS
	on the MODIFY_EXPRs we make.
	Pass const0_rtx as TARGET to expand_expr.
	* cp-cvt.c (build_up_reference): Set TREE_SIDE_EFFECTS on MODIFY_EXPR.
	* stmt.c (expand_return): Likewise.

Wed Jul 28 12:17:39 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h (SUBTARGET_OVERRIDE_OPTIONS): Use this instead of
	OVERRIDE_OPTIONS.

Wed Jul 28 13:45:13 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (expand_expr, case ADDR_EXPR): Treat CONCAT like REG.

	* c-decl.c (start_function): Warn if volatile fn returns non-void.

Wed Jul 28 13:22:15 1993  Jim Wilson  (wilson@cygnus.com)

	* c-parse.in (simple_if, if_prefix, stmt): Undo Jul 7 change.
	(if_prefix): Store stmt_count in $$ not $1.
	(stmt): Add comment explaining why empty-if warning is here.

	* sparc.c (shift_operand): New function.
	* sparc.md (ashlsi3, ashrsi3, lshrsi3): Use shift_operand.

	* loop.c (strength_reduce): Don't ignore a giv that depends on a
	reversed biv.

	* mips/x-sysv (ALLOCA): Define.
	* mips-5.h (STARTFILE_SPEC): Define.
	* x-iris3: New file.
	* configure (mips-sgi-*): Use x-iris3 instead of x-iris.
	* Makefile.in (libgcc.a): Do `chmod +w *' between two ar commands.

	* i960.h (INITIAL_FRAME_POINTER_OFFSET): Negate, and subtract 64
	bytes.

	* sched.c (schedule_block): Do not emit line number notes before
	other notes.

	* varasm.c (assemble_variable): flag_no_common applies only if
	external linkage.

	* calls.c (expand_call): For unaligned arguments on
	BYTES_BIG_ENDIAN machines, correct bitfield offset calculations.
	* expr.c (move_block_from_reg): New argument SIZE.  If SIZE less
	than word and BYTES_BIG_ENDIAN, shift block left to align it
	before storing it to memory.
	* expr.h (move_block_from_reg): Add new argument to prototype.
	* function.c (assign_parms): Pass extra argument SIZE to
	move_block_from_reg calls.
	(locate_and_pad_parm): For !ARGS_GROW_DOWNWARD case, move downward
	padding pad_below call after round_up call.
	* mips.c (function_arg): Shift all structures less than 4 bytes,
	not just those which are QImode or HImode.
	* a29k.h, alpha.h, i960.c, m88k.c, pa.c, romp.h, rs6000.h:
	Add new parameter to move_block_from_reg calls.

Wed Jul 28 12:40:06 1993  Doug Evans  (dje@canuck.cygnus.com)

	* expmed.c (store_split_bitfield): Fix handling of bitfields that
	cross word boundaries, can only handle a word at a time.
	(extract_split_bitfield): Likewise.

Wed Jul 28 06:44:50 1993  John Hassey  (hassey@dg-rtp.dg.com)

	* configure: Use m88k/x-sysv3 for m88k-*-sysv3.
	* m88k/x-sysv3: New file, use gnu alloca.

Tue Jul 27 13:53:06 1993  Per Bothner  (bothner@wombat.gnu.ai.mit.edu)

	* fixproto:  Pass '-' to tr as the 1-character range '---'.
	* cross-make:  Define STMP_FIXPROTO to empty for cross.
	* patch-header.c (read_scan_file):  Minor re-write to avoid
	obstack_copy0, since that uses the non-portable bcopy().
	* Makefile.in (patch-header):  Use $(HOST_OBSTACK).
	* gen-protos.c (main):  Disable obnoxious warning message.

Tue Jul 27 16:42:44 1993  John F Carr  (jfc@Athena.mit.edu)

	* fold-const.c (optimize_bit_field_compare): Preserve volatility
	of bitfield.

Tue Jul 27 01:33:25 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (convert_for_assignment): Mismatch in signedness
	of pointer targets should not inhibit warnings for const mismatch.

	* function.c (assign_parms): Don't copy too much when extending
	parm_reg_stack_loc.

	* config/m88k/m88k.h (ASM_DECLARE_OBJECT_NAME): Don't make a .size
	if the size is not known.  Use DECL, not decl.
	* config/svr4.h, config/i386/osfrose.h: Likewise.

	* c-typeck.c (set_init_index): Add pedantic warning.
	(set_init_label): Likewise.

Tue Jul 27 14:22:48 1993  Frederic Pierresteguy  (F.Pierresteguy@frcl.bull.fr)

	* gstddef.h (_WCHAR_T_H): Test this and define this. 

	* configure (m68k-bull-sysv): Test for --stabs;
	generate either native coff or dbx-in-coff debugging information.

	* config/m68k/dpx2.h (CPP_PREDEFINES): added -D_POSIX_SOURCE 
 	-D_XOPEN_SOURCE -D_BULL_SOURCE to the list.
 	(CPP_SPEC): removed ansi definition.
 	* config/m68k/dpx2g.h (DBX_DEBUGGING_INFO): Remove this to let gcc 
	deals with gas and coff.
	* config/m68k/dpx2cdbx.h: New file for gas and dbx-in-coff.
 	* config/x-dpx2 (CLIB): removed -lc_s and added -lmalloc.
 	(X_CFLAGS): removed -D_SYSV and added -D_POSIX_SOURCE -D_XOPEN_SOURCE 
 	-D_BULL_SOURCE to deal with the posix stuff.

Mon Jul 26 17:42:22 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (digest_init): Add `static' to definition.

	* combine.c (simplify_shift_const): Inhibit hacks based on
	num_sign_bit_copies if shift_mode differs from the mode of varop.

	* toplev.c (main): When -W sets warn_uninitialized, avoid later warning
	if warn_uninitialized is not supported.

Mon Jul 26 14:14:02 BST 1993	Richard Earnshaw (rwe11@cl.cam.ac.uk)

	* collect2.c (NAME__MAIN, SYMBOL__MAIN): Add default definitions.
	(write_c_file, scan_prog_file [OBJECT_FORMAT_ROSE]):
	Use macros instead of explicitly __main.

	* function.c (expand_main_function): Likewise.

	* libgcc2.c (__main): Use macro SYMBOL__MAIN instead of invoking
	directly.

Mon Jul 26 16:03:33 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fold-const.c (fold, case EQ_EXPR): Remove code that converts
	mod to unsigned mod; it isn't correct for negative operands.

	* toplev.c (strip_off_ending): Allow .ad* for Ada.

Mon Jul 26 14:06:04 1993  Bill Cox  (bill@majipoor.cygnus.com)

	* c-decl.c (print_lang_decl, print_lang_type): Correct function
	  headers to match prototype, and calls.

Sun Jul 25 17:01:34 1993  Per Bothner (bothner@kalessin.cygnus.com)

        * fixproto:  New script to add prototypes and otherwise clean up
        system include files (especially for C++ and also gcc -Wimplicit).
        * scan-decl.c:  New program used by fixproto to analyze header
        files (it extracts declarations from cpp output).
        * patch-header.c:  New program used by fixproto to analyze and
        patch header files.
        * scan.c:  New file.  Routines used by scan-decls and
	patch-header.
        * scan.h:  New file.  Common declarations.
        * gen-protos.c:  New file.  Massages a list of prototypes.
	* Makefile.in:  Add fixproto support.
	* populate:  Deleted.  Superseded by fixproto.

Sun Jul 25 03:56:18 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (start_init): Fill in p->next.

	* config/i386/i386.md (movstrictqi): Change q<-g alternative to q<-m.

Sat Jul 24 18:17:55 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (emit_move_insn_1): For complex stack push,
	don't use change_address.

Sat Jul 24 15:05:50 1993  Per Bothner  (bothner@kalessin.cygnus.com)

	* fixincludes (unistd.h):  Generalize AIX fix (for using
	C++ keyword new) to unistd.h as well as stdio.h.
	* fixincludes (sys/wait.h):  Fix NeXT problem with
	a 'wait(union wait*)' prototype that breaks Posix.1.
	* fixincludes (math.h):  For C++, patch AIX's use of
	'class' as function name.

Sat Jul 24 02:48:31 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* function.c (put_reg_into_stack): New subroutine.
	(put_var_into_stack): Use that; handle CONCAT.

	* varasm.c (assemble_variable): For array whose size comes from
	the initializer, determine proper alignment here.
	(assemble_align): New function.

	* c-typeck.c: Handle gaps in record initializers.
	(constructor_bit_index): New variable.
	(constructor_stack): New field bit_index.
	(really_start_incremental_init, push_init_level): Save and init it.
	(pop_init_level): Restore it.
	(output_init_element): Update constructor_bit_index.
	Use it to output gaps.
	(pop_init_level): Speed up by using constructor_bit_index.

	* c-typeck.c (process_init_element): Accept STRING_CST for subarray.

	* loop.c (mark_loop_jump): Handle weird cases like jumping to
	a symbol_ref.

Fri Jul 23 15:55:14 1993  Doug Evans  (dje@canuck.cygnus.com)

	* c-tree.h: Fix prototypes for print_lang_decl, print_lang_type.

Fri Jul 23 15:06:05 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (start_init): Second arg is now a tree.

Fri Jul 23 08:26:43 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Cygnus<->FSF merge.
	Thu Jul 22 09:54:05 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (push_overloaded_decl): Fix typo in warning msg.

	Tue Jul 20 13:13:18 1993  Mike Stump  (mrs@cygnus.com)

	* cp-class.c (build_vtable, prepare_fresh_vtable): Make the vtables
	readonly by default.

	Mon Jul 19 13:16:58 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-tree.h (NEW_CLASS_SCOPING): Turn this off for now.

	Mon Jul 19 11:04:51 1993  Jason Merrill  (jason@rtl.cygnus.com)

	* cp-class.c (build_vfn_ref): Rename `index' to `idx'.

	Fri Jul 16 07:44:49 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-class.c (finish_struct): Check both if the type has a default
	constructor, and if it has a non-const copy constructor, so we'll know
	not to generate a const copy constructor for the type we're working on.
	* cp-lex.c (cons_up_default_function): Add other front-end debugging
	info.
	(default_copy_constructor_body): And take it out of here.

	* cp-expr.c (cplus_expand_expr): Add missing arguments to expand_expr.

	Thu Jul 15 16:54:33 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-lex.c (default_copy_constructor_body): Also check to copy
	anonymous unions, since they don't show up as FIELD_DECLs.
	(largest_union_member): New function.

	Thu Jul 15 16:23:18 1993  Mike Stump  (mrs@cygnus.com)

	* cp-expr.c (cplus_expand_expr): Use resolve_offset_ref to handle
	OFFSET_REFs, as anything else would be wrong.
	
	Thu Jul 15 13:23:40 1993  Mike Stump  (mrs@cygnus.com)

	* cp-tree.h (CLASSTYPE_INTERFACE_KNOWN,
	SET_CLASSTYPE_INTERFACE_UNKNOWN_X, SET_CLASSTYPE_INTERFACE_UNKNOWN,
	SET_CLASSTYPE_INTERFACE_KNOWN): New access methods.
	* cp-class.c (import_export_vtable, duplicate_tag_error,
	finish_struct): Use new access method.
	* cp-decl.c: (grokfndecl, grokdeclarator, xref_tag): Ditto.
	* cp-gc.c (build_t_desc): Ditto.
	* cp-lex.c (set_vardecl_interface_info, make_lang_type): Ditto.
	* cp-pt.c (end_template_instantiation, do_pending_expansions):
	Ditto.
	* cp-search.c (dfs_debug_mark): Ditto.

	* cp-decl.c (grok_reference_init): Reword error message.

	Wed Jul 14 09:17:18 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-cvt.c (convert_to_reference): Adjust change of May 30th to
	accept more things (and still handle ARM p308 properly).  Disable
	the old way, but leave it to be properly fixed later.

	Tue Jul 13 22:43:38 1993  Mike Stump  (mrs@cygnus.com)

	* cp-decl.c (get_binfo_from_vfield): New function.
	* cp-decl.c (finish_function): Use get_binfo_from_vfield to get the
	binfo used to find the vtable for this vfields.  Corrects problem
	with vtable pointers being wrong during called member functions,
	called from destructors.

	Tue Jul 13 11:52:37 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (grokdeclarator): Don't pedwarn about a duplicate long
	for `long long', until we figure out how we really want to handle it.

	Sat Jul 10 14:54:36 1993  Chip Salzenberg  (chip@fin.uucp)

	* cp-tree.h (warn_redundant_decls, warn_missing_braces): Declared.
	* cp-decl.c (warn_redundant_decls): Not declared here.
	* cp-decl2.c (warn_missing_braces): Defined.
	(lang_decode_option): Handle -Wmissing-braces.
	* cp-type2.c (process_init_constructor): Test warn_missing_braces.

	* cp-typeck.c (build_binary_op_nodefault): Make warning
	message distinguish between right/left and shift/rotate.

	* cp-decl.c (init_decl_processing): When making SIZETYPE,
	start with name in SIZE_TYPE.  If -traditional, use a signed
	version of that type, if it is unsigned.

	* cp-typeck.c (c_sizeof, build_c_cast): Set TREE_OVERFLOW in
	addition to TREE_CONSTANT_OVERFLOW.

	* cp-decl.c (finish_enum): Store layout results into variant types.

	* cp-typeck.c (internal_build_compound_expr): When pedantic, don't
	simplify a COMPOUND_EXPR, so that it won't be mistaken for an
	lvalue or an integer constant expression.

	* cp-parse.y (program): After extdefs, pop any unpopped binding lvls.

	* cp-decl.c (grokdeclarator, ARRAY_REF case): Build array type,
	and then build the variant array type.

	* cp-lex.c (real_yylex): Avoid invalid shift for erroneous empty
	char const.

	* cp-decl.c (complete_array_type): Make maxindex -1 for empty
	constructor.

	* cp-type2.c (initializer_constant_valid_p): Allow cast of ptr to
	wider integer.

	* cp-decl.c (pushdecl): Copy DECL_FRAME_SIZE for inline function decls.

	* cp-decl.c (finish_decl): Do not allocate static var of
	unknown size.
	(complete_array_type): Use 0 as default maxindex.

Fri Jul 23 07:18:20 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* function.c (aggregate_value_p): An ARRAY_TYPE is also an aggregate.

Fri Jul 23 01:54:28 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* gcc.c (main): Improve "No input files" error message.

Thu Jul 22 23:00:11 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* reorg.c (relax_delay_slots): Do not redirect a jump if doing so
	invalidates insns in the jump's delay slots.
	(redirect_with_delay_slots_safe_p): New function.

Thu Jul 22 18:01:29 1993  John Hassey  (hassey@dg-rtp.dg.com)

	* invoke.texi, m88k.h, m88k.c: Changed serialize-volatile 
	to use tb1 instead of fldcr, fldcr has problems on 88110.
	Made serialize-volatile the default behavior for all models.

Thu Jul 22 11:19:28 PDT 1993  Ron Guilmette (rfg@netcom.com)

	* fixinc.svr4 (making LIB absolute): Just concat with $ORIG_DIR.

	* configure:  Use `sed' rather than `cat' to put `MAYBE_TARGET_DEFAULT'
	definition in.  (This is a work-around for an NFS bug.)

Thu Jul 22 14:59:38 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c: Output most constructors an element at a time.
	(digest_init): Deleted code for raw constructors.
	(process_init_constructor): Function deleted.
	(start_init, finish_init): New functions.
	(really_start_incremental_init)
	(push_init_level, check_init_type_bitfields, pop_init_level)
	(set_init_index, set_init_label, process_init_element)
	(output_init_element, output_pending_init_elements): New functions.
	* c-tree.h: Declare most of those functions.

	* c-parse.in (cast_expr): Use new initializer parsing functions.
	(initdcl, notype_initdcl): Likewise.
	(init): Likewise.
	(initlist_maybe_comma, initlist1): These replace initlist.
	(initelt): New nonterminal.
	Change specified index syntax to `[INDEX]='.
	Change specified field syntax to `.NAME='.

	* varasm.c (output_constant_def_contents): New function.
	(output_constant_def): Use it.
	(deferred_constants): New list of constants not yet output.
	(defer_addressed_constants): New function.
	(output_deferred_addressed_constants): New function.
	(make_decl_rtl): Don't ever replace old rtl;
	instead, change its mode if necessary.

Wed Jul 21 15:50:19 1993  Jim Wilson  (wilson@cygnus.com)

	* expr.c (expand_expr, COMPONENT_REF case): For unaligned object
	in an aligned union, set MEM_IN_STRUCT_P if create a MEM rtx.

	* sparc.c (output_move_double): Only set highest_first if first reg
	of dest overlaps memory src address.  Otherwise, if addreg1 set and
	is same as second reg of dest, suppress trailing decrement.
	
	* sparc.md (movdi+1): Delete & from r/i constraint.

	From rfg@netcom.com:
	* fixinc.svr4 (<ftw.h>):  Don't apply specialized fixes to <ftw.h>
	if we are on Solaris.  They are not needed in that case.

	* combine.c (nonlocal_label_list): New variable.
	(combine_instructions): Set it.
	(try_combine, distribute_links): CALL_INSN terminates a basic
	block if nonlocal_label_list is set.

	* config/mips/{bsd-4.h, bsd-5.h, iris3.h, mips.h, news4.h,
	news5.h, nws3250v4.h, osfrose.h, svr3-4.h, svr3-5.h, svr4-4.h,
	svr4-5.h, ultrix.h} (CPP_SPEC): Define LANGUAGE_ASSEMBLY, not
	LANGUAGE_C, when compiling a .s file.

	* m68k.h (TARGET_SWITCHES): Recognize -m68851, -mno-68851,
	-m68302, -mno-68302, -m68332, -mno-68332.

	* lynx.h, i386/lynx.h, m68k/lynx.h, sparc/lynx.h: New files.
	* i386.h (OVERRIDE_OPTIONS, SUBTARGET_OVERRIDE_OPTIONS): Define.
	* m68k.h (TARGET_SWITCHES): Add SUBTARGET_SWITCHES.
	(OVERRIDE_OPTIONS): Add SUBTARGET_OVERRIDE_OPTIONS.
	(SUBTARGET_SWITCHES, SUBTARGET_OVERRIDE_OPTIONS): Define.
	* sparc.h (TARGET_SWITCHES): Add SUBTARGET_SWITCHES.
	(OVERRIDE_OPTIONS): Add SUBTARGET_OVERRIDE_OPTIONS.
	(SUBTARGET_SWITCHES, SUBTARGET_OVERRIDE_OPTIONS): Define.

	* fixincludes (sys/types.h sys/stdtypes.h): Delete newline before
	do.
	(machine/cpu.h): Delete space in `2>& 1'.

	* config.sub (lynx): Recognize as vendor.
	(lynxos): Recognize as OS.
	* configure (i386-*-lynxos, sparc-*-lynxos, m68k-*-lynxos):
	Recognize as new configurations.

	* gcc.c (link_command_spec): Move %{T*} after %{L*} and %D.

	* optabs.c (expand_binop): Synthesize double word shifts and
	rotates from single word shifts.
	* sparc.md (ashldi3, lshrdi3): Obsolete, deleted.

Wed Jul 21 15:55:18 1993  Ian Lance Taylor  (ian@cygnus.com)

	* fixinc.svr4: When fixing ftw.h, preserve remainder of
	ftw and nftw declaration; don't just rewrite it.

Tue Jul 20 23:35:36 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* collect2.c (is_ctor_dtor): Delete leading _'s from sym names
	in `special' table, in neither-dots-nor-dollars case.

Tue Jul 20 18:49:09 1993  Michael Meissner  (meissner@osf.org)

	* i386/osfrose.h, i386/osfelf.h (CC1_SPEC): Don't turn on
	-mhalf-pic if ELF.

	* i386/osfrose.h (ASM_FILE_END): Put filename, sans directory into
	the .ident string.

Tue Jul 20 15:07:06 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c: Add prototypes for static functions.
	(subst, case IF_THEN_ELSE): Add missing arg to make_compound_operation.
	(make_compound_operation, case ASHIFTRT): Delete extra gen_unary arg.

Mon Jul 19 18:15:48 1993  John F Carr  (jfc@Athena.mit.edu)

	* rs6000.c (current_file_function_operand): New function.
	* rs6000.h (ENCODE_SECTION_INFO): New macro.
	(PREDICATE_CODES): Add current_file_function_operand.
	* rs6000.md: Add variants of call and call_value patterns for
	calls to functions defined in the same file.  Omit the TOC pointer
	reload after such calls.

Mon Jul 19 13:17:52 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* reorg.c (fill_simple_delay_slots): Try filling any insn needing
	delay slots with a JUMP_INSN.

Mon Jul 19 00:33:24 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* varasm.c (assemble_variable): New arg DONT_OUTPUT_DATA.
	* toplev.c (rest_of_decl_compilation): Pass 0 as DONT_OUTPUT_DATA.

Sun Jul 18 15:38:04 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (c_expand_return): Set TREE_SIDE_EFFECTS
	for the MODIFY_EXPR that we make.

	* stmt.c (expand_return): When expanding assignment into DECL_RESULT,
	ignore the "value"--do it for effect.

	* fold-const.c (fold): Handle CONJ_EXPR.
	* c-typeck.c (build_unary_op): Support CONJ_EXPR.
	Change BIT_NOT_EXPR to CONJ_EXPR if arg is complex.

Sun Jul 18 14:22:05 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* function.c (init_function_start): Initialize trampoline_list here.
	(expand_function_end): Not here.

Sun Jul 18 01:24:54 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* c-typeck.c (common_type): Use TYPE_MAIN_VARIANT when preferring
	long int to int (when width is the same).

	* varasm.c (assemble_variable): Move debugging output calls
	to after section has been selected.  Select the section again
	if the debugging output call changes the section.
	* dbxout.c (dbxout_symbol_location): Call in_text_section
	to decide whether to use DBX_STATIC_CONST_VAR_CODE.

	* objc-act.c (synth_module_prologue): Call layout_type for the array
	type used for _OBJC_SELECTOR_TABLE.

Sat Jul 17 00:41:52 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (expand_increment): Convert constant subtract to add
	before setting single_insn.  Compensate for this when choosing
	the tree code to pass to `build'.

	* toplev.c (rest_of_compilation): If function is extern inline,
	even if we can't inline it, don't compile it.

Fri Jul 16 21:33:50 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* dwarfout.c (dwarfout_init): Report failure of getpwd.

Fri Jul 16 15:59:07 1993  Ian Lance Taylor  (ian@cygnus.com)

	* config/m68k/hp320.h (LINK_LIBGCC_SPECIAL, SPACE_AFTER_L_OPTION)
	(LIB_SPEC): Move outside of USE_GAS conditional.

Fri Jul 16 14:26:25 1993  David d `zoo' Zuhn  (zoo@cygnus.com)

	* config.sub: if [ "$os" ] --> if [ x"$os" != x"" ]

Fri Jul 16 05:50:35 1993  Paul Eggert  (eggert@twinsun.com)

	* c-typeck.c (check_format): With -Wformat, warn about
	printf("%ld", 1) even if sizeof (int) == sizeof (long),
	since the code isn't portable.  Similarly for "%d" vs 1L.

	* c-typeck.c (convert_arguments) [PROMOTE_PROTOTYPES]:
	With -Wconversion, use unpromoted type to check for signedness changes.

Thu Jul 15 13:04:48 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* fixincludes (stdlib.h): Check carefully for definition of size_t.

Wed Jul 14 19:05:51 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* fixincludes: Fix size_t definition in stdlib.h as in types.h.
	Also a conditional to prevent repeated definition.

Wed Jul 14 14:53:26 1993  Ian Lance Taylor  (ian@cygnus.com)

	* fixincludes: Don't discard comment end characters on lines that
	look like "#endif */".  Fixes Esix 4.0.4 problem.

Wed Jul 14 12:20:13 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.c (emit_move_sequence): Use cint_ok_for_move instead of
	checking each condition ourselves.

	* pa-utahmach.h (CPP_PREDEFINES): Do not define HPUX_SOURCE, hp700
	or HP700.
	* pa1-utahmach.h (CPP_PREDEFINES): Do not define hp9000s800,
	hp9k8, HPUX_SOURCE, or hp800.

	* Allow unconditional jumps in delay slots of call and millicode
	call instructions.
	* pa.h (TARGET_JUMP_IN_DELAY): New target flag to allow/disallow
	jump instructions in call delay slots.
	(TARGET_SWITCHES): Add -mjump-in-delay and -mno-jump-in-delay.  
	Provide -mno alternatives for most options.
	(output_call): Declare.
	* pa.c (output_call): New function to output a function call or
	millicode call, possibly with a jump in the delay slot.
	(output_mul_insn): Accept additional argument, use output_call.
	(output_div_insn): Likewise.
	(output_mod_insn): Likewise.
	(jump_in_call_delay): New function to determine if the given 
	JUMP_INSN is in the delay slot of a call or millicode call.
	* pa.md (uncond_branch): New type attribute.  Explicitly disallow
	uncond_branch in most delay slots.
	(in_call_delay attribute): New test for delay slot of call insns.
	Allow uncond_branches in the delay slot if TARGET_JUMP_IN_DELAY.
	(define_delay for calls, millicode calls, branches, returns, etc):
	Broken up into two define delays.  One for calls and millicode 
	calls, a second for branches, returns, etc.
	(millicode insns): Pass the current insn down to 
	output_{mul,div,mod}_insn.
	(jump insn): Use "uncond_branch" type attribute.  Length of this
	insn varies if it is in the delay slot of a call.
	(call_internal_symref): Use output_call.
	(call_value_internal_symref): Likewise.
	(call_internal_reg): Use %r syntax instead of just register numbers.
	(call_value_internal_reg): Likewise.

Wed Jul 14 02:19:11 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* rtl.def (CONCAT): New rtx code.
	* emit-rtl.c (gen_lowpart_common, gen_highpart): Handle CONCAT.
	(operand_subword): Likewise.
	(gen_reg_rtx): For complex mode, return a CONCAT of two pseudos.
	* stmt.c (expand_decl): Make a CONCAT, for decls of complex type.
	* dbxout.c (dbxout_symbol_location): Subroutine broken out from
	dbxout_symbol.  Handle CONCAT here.
	(dbxout_symbol_name): New subroutine.  Handle anonymous decls too.
	(dbxout_reg_parms): Simplify using dbxout_symbol_location.
	Handle CONCAT.

	* c-typeck.c (build_c_cast): When casting to union, if value is array
	or function, do default_conversion.

Wed Jul 14 00:52:23 1993  Jim Blandy  (jimb@wookumz.gnu.ai.mit.edu)

	* config.sub: Add case for Bull dpx/2.

Mon Jul 12 17:26:53 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* fixincludes: When looking for #define CTRL,
	accept multiple spaces between the two words.

	* reload1.c (reload): Don't free scratch_list or scratch_block if 0.

Mon Jul 12 17:12:31 1993  Paul Eggert  (eggert@twinsun.com)

	* c-common.c (unsigned_conversion_warning): Just use `warning',
	not `pedwarn'; these diagnostics are not required by Standard C.
	* c-typeck.c (convert_for_assignment): Use `convert_and_check',
	not `convert', for converting arithmetic types, since
	`convert_and_check' no longer reports an error
	where it should just warn.

Mon Jul 12 16:44:37 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/i386/i386.md (ffssi2, ffshi2): Assume bsf produces
	garbage if input is 0.  Use jumps to load output in that case.

	* config/vax/vax.h (INITIALIZE_TRAMPOLINE): Add code to
	do an rei to clear the insn cache.

Sun Jul 11 18:13:47 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/ns32k/ns32k.c (output_move_double): Do the low reg first,
	when only the high reg has an overlap.

	* c-typeck.c (convert_arguments): Don't warn about sign change
	for an INTEGER_CST inside NOP_EXPR, if value not fits new type.
	Delete the code to check for VAL having enumeration type.

	* i860.c (output_move_double): Fix typos in Jun 28 change.

Sat Jul 10 16:05:26 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* i860.c (output_move_double): Only set highest_first if first reg
	of dest overlaps memory src address.  Otherwise, if addreg1 set and
	is same as second reg of dest, suppress trailing decrement.
	
Sat Jul 10 19:49:31 1993  Jeffrey A. Law  (law@mole.gnu.ai.mit.edu)

	* jump.c (jump_optimize): Correctly identify branches to the end
	of a function so that they may be turned into RETURN insns.

Sat Jul 10 17:37:12 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* collect2.c (main): Allocate COLLECT_NAME string with xmalloc.

Sat Jul 10 14:44:29 1992  Chip Salzenberg  (chip@fin.uucp)

	* basic-block.h (REGSET_ELT_TYPE): Make unsigned to avoid
	signed arithmetic overflow.
	* hard-reg-set.h (HARD_REG_ELT_TYPE): New unsigned type to
	avoid signed arithmetic overflow.
	(HARD_REG_SET): Define as HARD_REG_ELT_TYPE, or array thereof.
	(HARD_CONST): Always cast to HARD_REG_ELT_TYPE.
	(*_HARD_REG_*): Use unsigned HARD_CONST and HARD_REG_ELT_TYPE
	types instead of assuming HOST_WIDE_INT. 

Sat Jul 10 10:25:16 1993  Karl Berry  (karl@cs.umb.edu)

	* fixincludes: Check for symlinks being available in /tmp.

Sat Jul 10 02:01:08 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/m68k/3b1.h (MY_ISCOFF, OBJECT_FORMAT_COFF, NO_SYS_SIGLIST):
	New definitions.

Fri Jul  9 20:40:29 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.md (dbra and movb patterns): Fix constraints so that FP
	registers are never preferred.

Fri Jul  9 17:36:35 1993  Holger Teutsch  (holger@hotbso.rhein-main.de)

	* va-clipper.h: Make var/stdargs compatible with apogee's acc.
	(__gnuc_va_list): Replace __va_f and __va_r with __va_reg.
	(__va_list, _SYS_INT_STDARG_H): New defines.
	(va_arg): Corresponding changes.

	* config/clipper/clipper.c (clipper_builtin_saveregs) : Dito.

Fri Jul  9 13:39:08 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Cygnus<->FSF merge.
	Fri Jul  9 12:17:20 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-typeck.c (build_array_ref): Force the array to be allocated on
	the stack if it is accessed by a out-of-bound constant integer
	subscript.

	* cp-decl.c (pushdecl): Undo change to generate a new _TYPE node for
	a typedef.

	Thu Jul  8 16:25:52 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (pushtag): Don't mark the binding layer marker; for
	dwarf debugging, do mark the TYPE_DECL we created as ignored.

	* cp-tree.h (IN_CHARGE_NAME): Define to not need DOLLAR_IN_LABEL.
	(VTBL_PTR_TYPE): Likewise.
	(VTABLE_DELTA_NAME, VTABLE_INDEX_NAME, VTABLE_PFN_NAME,
	VTABLE_DELTA2_NAME): Use two leading underscores.

	Thu Jul  8 14:31:40 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-tree.h (TREE_ANON_UNION_ELEM): Deleted, it's never set.
	* cp-decl.c (build_default_constructor): Delete checking
	TREE_ANON_UNION_ELEM.
	* cp-init.c (emit_base_init): Likewise.
	* cp-type2.c (my_friendly_abort): Update count.

	* cp-type2.c (build_functional_cast): Disable assert 323 (see
	comments for explanation).

	* cp-typeck.c (comp_target_parms): Return 0 if strict is != 0, not
	just > 0.

	* cp-decl.c (init_decl_processing): Don't set WARN_RETURN_TYPE.

	Wed Jul  7 18:36:59 1993  Niklas Hallqvist  (niklas@della.appli.se)

	Add the changes to redo how we handle scoping. [Merged by bpk.]

	* cp-class.c ({pop,push}_nested_class): New functions to use
	instead of plain {push,pop}class.  These functions will see to
	that static entities of enclosing classes will be visible.
	* cp-tree.h ({pop,push}_nested_class): Declare them.
	* cp-decl.h ({finish,start}_function): Use these new functions
	instead of plain {push,pop}class calls.
	(grokdeclarator): Ditto.
	* cp-decl2.c (build_push_scope): Ditto.
	* cp-class.c (popclass): Only call pop_class_decls if MODIFY is
	set.

	* cp-decl.c (start_decl): Maybe call pushdecl_class_level instead of
	pushdecl.  This is used for nested types.
	(grokdeclarator): Remove the {push,pop}level calls around the
	indirect recursion occuring when groking class-local typedefs.
	Remove the error check of such typedefs hiding other fields in the
	same scope.  Remove the pushdecl_class_level call since start_decl
	does the work now.

	Class scoping (and type value caching) redone.  The new behaviour
	is triggered by NEW_CLASS_SCOPING being defined to 1.  The old
	behavior is accomplished by defining it to the value 0.  The entries
	below describes the effective changes when NEW_CLASS_SCOPING is set
	to non-zero.

	* cp-class.c (set_class_shadows): Add prototype.
	(previous_class_values): New variable.
	(pushclass): Adapted to not use previous_class_type & unuse_fields.
	Removed setting of IDENTIFIER_CLASS_VALUE.
	(popclass): Adapted to not use previous_class_type.  Don't reset
	IDENTIFIER_CLASS_VALUE.  Moved call of pop_class_decls.
	(maybe_push_cache_obstack): New function.
	* cp-decl.c (current_class_depth): Add extern decl.
	(previous_class_values): Add extern decl.
	(pop_decl_level): Don't reset IDENTIFIER_CLASS_VALUE.
	(set_class_shadows): New function.
	(poplevel_class): Adjust setting of IDENTIFIER_CLASS_VALUE to only
	happen if we're not leaving a toplevel class.
	(push_to_top_level): Don't use adjust_type_value.
	(set_identifier_type_value): Reverse the choice between class and
	local scope when installing the type value.
	(set_identifier_local_value): Set the type value if we're seeing a
	TYPE_DECL.
	(set_nested_typename): Added comment.
	(pushtag): Don't call set_identifier_type_value.  Leave out
	setting of IDENTIFIER_CLASS_VALUE.
	(adjust_type_value): Removed.
	(pushdecl): Don't call adjust_type_value.
	(pushdecl_class_level): Call push_class_level_binding.  Set the
	type value if we're seeing a TYPE_DECL.
	(push_class_level_binding): New function whose guts came from
	pushdecl_class_level.
	(globalize_nested_type): See to that both the class_shadowed and
	type_shadowed lists in the binding stack gets updated correctly.
	Don't call set_identifier_type_value on the DECL_NESTED_TYPENAME.
	Clear DECL_CLASS_CONTEXT as well as DECL_CONTEXT.  Install a
	correct IDENTIFIER_{CLASS,TYPE}_VALUE if needed.
	(grokdeclarator): Prefer pushdecl_class_level over pushtag when
	recording a nested typedef.
	(build_enumerator): Don't install a method-local enumerator into
	class scope.
	* cp-decl2.c (grokfield): Don't call set_identifier_type_value.
	* cp-search.c (closed_envelopes): New list containing information
	of what decls should be pushed when entering a class scope.
	(dfs_pushdecls): Build and maintain the closed_envelopes list
	instead of managing the IDENTIFIER_CLASS_VALUEs directly.
	(dfs_compress_decls): Adapted to recognize the envelopes
	dfs_pushdecls has installed in the IDENTIFIER_CLASS_VALUE slots.
	(push_class_decls): Tell overload_template_name to push the
	template decls into class scope instead of building a new level.
	Added code to open up the envelopes in closed_envelopes and
	install the class/type values in the class binding contour with
	proper shadowing.
	(dfs_popdecls): Removed.
	(pop_class_decls): Removed the actual decl-popping code, leaving
	just the obstack freeing pop_search_level call.  The popping is
	automatically handled by poplevel now.
	* cp-tree.h (NEW_CLASS_SCOPING): A new macro constant defaulted to
	the value 1.
	(adjust_type_value): Prototype removed.
	(push_class_level_binding): Added prototype.

	Wed Jul  7 11:04:09 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (pushdecl): When processing a typedef statement,
	generate a whole new ..._TYPE node.  Be careful that the type we're
	looking at isn't an error_mark_node.

	* cp-class.c (finish_struct): Set the DECL_CONTEXT on the type we've
	found.
	* cp-decl.c (pushtag): Mark the TYPE_DECL as ignored when using
	dwarf debugging; don't ignore it if it's anonymous for dwarf
	debugging.  Put the DECL_CONTEXT in the TYPE_CONTEXT of TYPE.
	(globalize_nested_type): Remember to set TYPE_CONTEXT.
	* cp-pt.c (overload_template_name): Set DECL_CONTEXT.
	* cp-search.c (compute_visibility): Set DECL_CONTEXT if the context
	is NULL.

	* cp-class.c (finish_struct): Mark the tag as ignored for dwarf
	debugging.

	* cp-except.c (EHS_type): Don't make it static.
	* cp-class.c (finish_struct): Don't create a default copy
	constructor for the EHS_type.

	* cp-class.c (get_vtable_name): Leave the numbers in the name for
	the vtable, so we're uniform with what prepare_fresh_vtable is
	doing.  Introduces a binary incompatability.

	* cp-tree.c (build_cplus_method_type): Mark the first argtype (the
	this pointer) as artificial.

	* cp-init.c (do_friend): Don't allow a friend of a class that's not
	yet been defined; instead, complain.  Make sure we mark every decl
	that comes in as being a friend of something.

	* cp-decl2.c (grokclassfn): Mark the __in_chrg parameter as
	artificial.  Don't mark it as readonly, and for destructors make
	sure the first arg in the arg_types chain has TREE_SIDE_EFFECTS set,
	so it's seen as artificial.
	(finish_vtable_vardecl): For dwarf debugging, make the vtable's
	VAR_DECL node be ignored.  

	* cp-decl.c (redeclaration_error_message): Use comptypes to see if
	OLDDECL and NEWDECL have the same type.
	* cp-typeck.c (comptypes): Compare the main variants of the types,
	after we've checked the qualifiers that could have been used on them.

	* cp-call.c (EVIL_RETURN, QUAL_RETURN, TRIVIAL_RETURN, ZERO_RETURN):
	Rewrite definitions to not use do/while(0), to avoid bogus warnings
	on compilers that can't deal with a return inside it.  Change all
	uses of them to do `return FOO_RETURN'. 

	Tue Jul  6 13:00:44 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (duplicate_decls): Set GIVE_ERROR so we know where the
	previous declaration was for empty parameter name list declarations.

	* cp-class.c (finish_struct): Clean up error message about anonymous
	classes.

	* cp-class.c (finish_struct): Don't play with TAIL when we're
	dealing with a TYPE_DECL of a RECORD_TYPE; the list continues on
	just fine, and TAIL is only used for managing FN_FIELDS.

	* cp-decl.c (pushlevel): Change cast to HOST_WIDE_INT.
	* cp-search.c (breadth_first_search): Likewise.

	Fri Jul  2 19:24:55 1993  Steve Chamberlain  (sac@rtl.cygnus.com)

	* cp-method.c: Include "cp-class.h"

	Fri Jul  2 18:16:10 1993  Michael Tiemann  (tiemann@blues.cygnus.com)

	* cp-call.c (build_overload_call_real): Don't look at a required
	template instantiation and a speculative template instantiation as
	two different functions if they are really the same function.

	Thu Jul  1 22:28:46 1993  Michael Tiemann  (tiemann@blues.cygnus.com)

	* cp-tree.h: Don't include "cp-class.h" here.
	* cp-call.c, cp-cvt.c: Include it here instead.

	Thu Jul  1 18:42:03 1993  Mike Stump  (mrs@cygnus.com)

	* cp-decl.c (duplicate_decls): Fix typo.  (olddecl->olddecls)

	Thu Jul  1 18:34:12 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	New implementation of argument matching.  This is now much cleaner
	to read, and is designed such that it should be easy to tweak
	things when incorrect decisions are made based on the candidates
	being examined.

	* cp-decl2.c (flag_ansi_overloading): New variable.
	(lang_f_options): Add -fansi-overloading.
	* toplev.c (lang_options): Add -fansi-overloading and
	-fno-ansi-overloading.

	* cp-class.h (harshness_code): New struct.
	(candidate): New members `h' and `h_len' used by new method.  New
	anonymous union `v', with ansi_harshness and old_harshness.
	Deleted member `harshness' (used by old method, now in `v').
	Change every file that uses harshness to refer to it in the union
	as appropriate.
	(EVIL_CODE, CONST_CODE, ELLIPSIS_CODE, USER_CODE, STD_CODE,
	PROMO_CODE, QUAL_CODE, TRIVIAL_CODE): New macros.

	* cp-call.c (EVIL_RETURN, QUAL_RETURN, TRIVIAL_RETURN,
	ZERO_RETURN): New macros.
	(rank_for_overload): Renamed to rank_for_overload_old.
	(rank_for_overload_ansi): New function for new method.
	(rank_for_overload): Call the appropriate fn based on the new flag.
	(rank_for_ideal): New function for new method.
	(compute_harshness): Renamed to compute_harshness_old.
	(compute_harshness_ansi): New function for new method.
	(compute_conversion_costs): Renamed to compute_conversion_costs_old.
	(compute_conversion_costs_ansi): New function for new method.
	(compute_conversion_costs): Call the appropriate fn based on the
	new flag.
	(ideal_candidate): Renamed to ideal_candidate_old.
	(ideal_candidate_ansi): New function for new method.
	(ideal_candidate): Call the appropriate fn based on the new flag.
	(strictly_better): New function for new method.
	(build_method_call): Change things to use the new method if
	-fansi-overloading is set.
	(build_overload_call_real): Likewise.
	* cp-cvt.c (convert_to_aggr): Likewise.

	* cp-call.c (build_overload_call_real): Only use the speed hack
	to trigger immediately if the OVERLOAD_NAME has a global value if we
	aren't using the new overloading scheme.

	* cp-cvt.c (build_type_conversion): Only accept using an `operator
	double' if there isn't a conflicting `operator int', if
	-fansi-overloading is on. 

	Thu Jul  1 17:54:44 1993  Mike Stump  (mrs@cygnus.com)

	* cp-decl.c (duplicate_decls): Propagate some changes from C
	front-end.  Conflicts with built-in functions are now only warnings.

	Thu Jul  1 15:43:48 1993  Mike Stump  (mrs@cygnus.com)

	* cp-call.c (build_field_call): Use real type if type is a
	REFERENCE_TYPE.
	* cp-parse.y (primary): Cleanup and move some code out into new
	function build_object_ref.
	* cp-tree.h (build_object_ref): New function.
	* cp-typeck.c (build_object_ref): Define new function.
	* cp-typeck.c (build_x_function_call): Return error_mark_node if
	first argument is, and handle when TREE_PURPOSE is a binfo and comes
	from lookup_fnfields.

	Thu Jul  1 13:48:46 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-lex.c (readescape): Don't complain for \% unless pedantic.

	Wed Jun 30 10:35:50 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl2.c (bad_specifiers): Moved to cp-decl.c.  New args
	`inlinep' and `object' (old object renamed to type), so we can see
	where the thing was declared.  Use error_with_decl instead of error.
	* cp-decl.c (grokdeclarator): Pass INLINEP and DECL down; move calls
	so we'll have a valid DECL to give it.
	* cp-tree.h (bad_specifiers): Deleted prototype.

	* cp-call.c (build_scoped_method_call): If it's a reference, work
	with the actual type.
	* cp-type2.c (build_scoped_ref): Likewise.

	Tue Jun 29 19:49:57 1993  Mike Stump  (mrs@poseidon.cygnus.com)

	* cp-lex.c (default_copy_constructor_body): Hack broken code to work
	marginally better than how it worked before, so that PlotFile3D's
	make check of libg++ works.

	Tue Jun 29 12:44:48 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-typeck.c (mark_addressable): Don't complain about taking the
	address of an object with register storage class; it's legal in C++. 

	* cp-typeck.c (convert_arguments): Only warn about passing an object
	through an ellipsis.

	* cp-parse.y (typed_declspecs): Make sure the TYPESPEC we hit
	upon is non-null.

	Tue Jun 29 11:58:03 1993  Tony Deigh  (tonyd@bostech.com)

	* cp-decl.c (grokdeclarator): Look at the decl as a FUNCTION_TYPE
	before seeing if its TYPE_MAIN_VARIANT matches or it's a friend;
	this way, we can properly detect declaration of another class's
	methods inside another class.  Solves chainon aborts.

	Tue Jun 29 09:47:36 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-class.c (finish_struct): Use pedwarn_with_decl for warnings
	about non-static const/ref in class without a ctor, so the line
	number is helpful.

	Tue Jun 29 02:46:39 1993  Mike Stump  (mrs@cygnus.com)

	* cp-cvt.c (build_up_reference): Delete unneed cast.
	* cp-typeck.c (convert_for_assignment): Likewise.

	Mon Jun 28 19:19:34 1993  Mike Stump  (mrs@rtl.cygnus.com)

	* cp-lex.c (real_yylex): Use pedwarn to warn about using catch, try
	and throw as identifiers.

	Mon Jun 28 11:13:17 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-method.c (hack_identifier): Only look for visibility if we have
	a basetype path.

	* cp-decl.c (grokdeclarator): Also forbid the subscripting operator,
	and class member access operator being declared as a non-member
	function.

	* cp-init.c (add_friend): Pedwarn on duplicate friend decls.

	* cp-init.c (is_friend_type): New function.
	(is_friend): Call it; rewrite in minor ways, to clean the code up.
	* cp-tree.h (is_friend_type): Add prototype.
	* cp-search.c (compute_visibility): Also check if the
	CURRENT_CLASS_TYPE is a friend of CONTEXT, which can buy us access
	to the field in question.

	* cp-init.c (sort_member_init): Disable assert that was wrong.

	* cp-class.c (finish_struct): Make declaration of a non-static const
	or reference member get a pedwarn if the class it's in has no
	constructor.

	* cp-decl2.c (grokfield): Fix up the error message about member
	initialization.

	* cp-typeck.c (c_expand_return): Make sure we don't set
	CURRENT_FUNCTION_RETURNS_VALUE if we set CURRENT_FUNCTION_RETURNS_NULL.

	* cp-method.c (dump_init): Don't emit digit_buffer if we're giving
	an enum's tag.

Fri Jul  9 16:45:25 1993  David d `zoo' Zuhn  (zoo@cygnus.com)

	* config.sub: Make -solaris reflect the most recent major release.

Fri Jul  9 16:18:20 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* Change length attributes to use bytes instead of instruction
	counts.
	* pa.h (CASE_VECTOR_MODE): Change to DImode.
	* pa.c (compute_movstrsi_length): Return length in bytes.
	(pa_adjust_insn_length): Return adjustment in bytes.
	(output_cbranch): Handle lengths as bytes.
	(output_bb, output_dbra, output_movb): Likewise.
	* pa.md (default length define_attr): Lengths are in bytes now.
	(asm_attributes): Likewise.
	(delay slot attributes): Deal with lengths in bytes.
	(explicit length computations): Compute length in bytes.

	* Make more dbra insns and support movb insns.
	* pa.h (output_dbra, output_movb): Declare.
	* pa.md (dbra pattern): Use output_dbra.
	(dbra pattern #2): New pattern.  Also use output_dbra.
	(movb, inverted movb): New patterns.
	* pa.c (pa_adjust_insn_length): dbra and movb insns which have
	their output in a FP register do not need adjustment.
	(output_cbranch, output_bb): Handle conditional jump to the
	following instruction.
	(output_dbra): New function extracted from dbra pattern.
	(output_movb): New function.
	(eq_neq_comparison_operator): New function.
	(movb_comparison_operator): New function.

Fri Jul  9 01:07:52 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/m68k/mot3300.h (ASM_OUTPUT_OPCODE): Don't add .w suffix
	to jump insns.

	* combine.c, cse.c: Include stdio.h before rtl.h.

Wed Jul  7 18:06:45 1993  Jim Wilson  (wilson@wookumz.gnu.ai.mit.edu)

	From moshier@world.std.com:
	* sparc.c (singlemove_string): Convert SFmode by REAL_VALUE... macros.
	* sparc.h (ASM_OUTPUT_FLOAT, ASM_OUTPUT_DOUBLE):
	Use REAL_VALUE_TO_DECIMAL to generate decimal string.
	(REAL_ARITHMETIC): Define.

	* sparc.h (SECONDARY_MEMORY_NEEDED_RTX): Use
	STARTING_FRAME_OFFSET.
	(STARTING_FRAME_OFFSET): Set to -16.

	* c-parse.in (simple_if): Save stmt_count, and print empty body
	warning here.
	(if_prefix): Don't save stmt_count here.
	(stmt): Don't print empty body warning here.

	* combine.c (simplify_comparison): Add parentheses to satify gcc.
	* sparc.c (sparc_frw_save_restore): Likewise.
	* expr.c (convert_to_mode): Move misplaced parentheses.

Wed Jul  7 16:37:26 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* Improve code for conditional branches and dbra insns on the PA.  
	* pa.c (pa_adjust_insn_length): Rewrite so that it only adjusts
	insns which really need adjustment.
	(output_cbranch): Rework so that output templates are simpler.  
	Use shorter sequence for long backwards conditional branches with
	a filled delay slot that is nullified.  More agressively use "skip"
	instructions.  More agressively nullify the delay slot if nothing
	useful could be placed there.
	(output_bb): Likewise.
	(forward_branch_p): New function.
	* pa.md (conditional branches): Use the full displacement range
	for the branch target.  Update length computations to match current
	reality.
	(branch on bit patterns): Likewise.
	(decrement_and_branch_until_zero): Re-enable pattern.  Rewrite to
	be simpler and more efficient.  Also handle case where loop counter
	is in a FP register.

Wed Jul  7 11:19:03 1993  Ian Lance Taylor  (ian@cygnus.com)

	* glimits.h (MB_LEN_MAX): Don't override the value from the system
	<limits.h>.  Just define it if it is not already defined.

	* collect2.c (main): Search for ld in the compiler directories.

Wed Jul  7 13:40:55 1993  Jim Wilson  (wilson@kropotkin.gnu.ai.mit.edu)

	* collect2.c (fork_execute, scan_prog_file): Use "fork" in error
	messages instead of "vfork" when vfork is defined to fork.

Tue Jul  6 16:38:36 1993  Jim Wilson  (wilson@wookumz.gnu.ai.mit.edu)

	* sparc.c (sparc_type_code): Recognize SET_TYPE.  For special
	Fortran/Pascal types, just return qualifiers instead of aborting.

	* c-decl.c (insert_block): Correct typo in comment.

	* combine.c (simplify_and_const_int, LSHIFTRT case): Must be at
	least as many sign bit copies as bits in mask.

	* c-typeck.c (build_conditional_expr):  All simplified results
	must go through pedantic_non_lvalue.
	* cp-typeck.c (build_conditional_expr): Likewise.
	* fold-const.c (fold, COND_EXPR case): Likewise.
	(pedantic_non_lvalue): New function.
	* tree.h (pedantic_non_lvalue): Add declaration.

	* fold-const.c (invert_truthvalue): Check for ERROR_MARK input.

	* m68k.h (LEGITIMATE_BASE_REG_P): New macro.
	(INDIRECTABLE_1_ADDRESS_P, GO_IF_INDEXABLE_BASE,
	LEGITIMATE_INDEX_REG_P): Accept SUBREG everywhere REG is accepted.

	* sparc.h (EXTRA_CONSTRAINT): For 'T', pass address not mem to
	strict_memory_address_p call.  For 'U', don't accept unallocated
	pseudo-reg when strict.

	* sparc.c (output_move_quad): Implement CNSTOP case.

	* i960.h (ASM_OUTPUT_COMMON): Use SIZE not ROUNDED.

Tue Jul  6 02:12:15 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cse.c (simplify_binary_operation, case MINUS): Fix backwards
	test added in last change.

	* config/i386/sun.h (SIZE_TYPE): Deleted.

	* c-typeck.c (convert_arguments): Don't warn for -Wconversion
	about signedness of an arg that's extended from narrower unsigned type.

	* c-decl.c (duplicate_decls): Don't warn for non-extern var decl
	following an extern one (for -Wredundant-decls).

Mon Jul  5 17:50:27 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* reload1.c (emit_reload_insns): Don't use gen_lowpart_common to
	get reload register into proper mode.
	* reload.c (subst_reloads): Likewise.

	* combine.c (subst, case PLUS): Simplify (plus (comp A B) -1), etc.

	* fold-const.c (fold, case EQ_EXPR, LE_EXPR): If comparing results
	of signed MOD with zero, use an unsigned MOD.

	* calls.c: Fix typo: had ARGS_GROW_DOWNARD.

	* configure (rs6000-ibm-aix): Use default files for aix3.2 and
	aix31.h for aix3.[01].  Add new file x-aix31.
	* rs6000.c (input_operand): Fix missing operand on a return.
	(print_operand): Add new code '.'.
	(rs6000_sa_size): Delete unused variable `i'.
	(output_prolog, output_epilog): Use new RS6000_CROR_BIT_NUMBER.
	* rs6000.h (CPP_PREDEFINES): Define _AIX32.
	(ASM_DECLARE_FUNCTION_NAME, TEXT_SECTION_ASM_OP): Use ".text[PR]" as
	csect name.
	(RS6000_CROR_BIT_NUMBER): New macro.
	(PRINT_OPERAND_PUNCT_VALID_P): Allow `.' as valid.
	* rs6000.md (call patterns): Use %. in cror.
	* x-rs6000 (CLIB): No longer need -lm.
	* aix31.h, x-aix31.h: New files.
	* aix32.h: Deleted.

Mon Jul  5 17:44:09 1993  John F Carr  (jfc@Athena.mit.edu)

	* romp.md (movhi): When storing a constant in an HImode register, use
	cal16 instead of cal so that the high bits are clear (combine
	requires this).

Mon Jul  5 17:15:27 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* objc-act.c (encode_type_qualifiers): Add casts to enums in indices.

Mon Jul  5 02:25:54 1993  Doug Evans  (dje@wookumz.gnu.ai.mit.edu)

	* Makefile.in: Parameterize libgcc.a and install-libgcc
	(LIBGCC and INSTALL_LIBGCC).

	* tree.c (get_narrower): Preserve unsignedness when bitschange == 0.

Sun Jul  4 02:55:46 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expmed.c (store_split_bit_field, extract_split_bit_field):
	Handle fields split across more than 2 aligned units.

	* expr.c (store_field): Test STRICT_ALIGNMENT at run time.
	(expand_expr, COMPONENT_REF case): Fetch unaligned field as bitfield.

	* collect2.c (error, fatal, fatal_perror): Say collect2, not collect.

	* c-parse.in (primary): In statement expression case,
	if compstmt returns something other than a BLOCK,
	return it unchanged.

Sat Jul  3 20:32:43 1993  Minh Tran-Le  (tranle@intellicorp.com)

	* fixinc.svr4: Added fixup for __STDC__ == 0 and __STDC__ == 1
	cases found in sequent PTX-2.0.x headers.

Sat Jul  3 18:54:07 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.c (call_operand_address): Do not accept registers anymore.
	* pa.md (call expanders): Emit different patterns for named calls
	and indirect calls.
	(call_internal_symref, call_internal_reg): New patterns. 
	(call_internal): Deleted.  Now handled by call_interal_{symref,reg}.
	(call_value_internal_symref, call_value_internal_reg): New patterns.
	(call_value_internal): Deleted.  Now handled by
	call_value_internal_{symref,reg).

Sat Jul  3 16:40:52 1993  Doug Evans  (dje@wookumz.gnu.ai.mit.edu)

	* collect2.c (main): Give ld_file_name an initial value.

Fri Jul  2 16:36:56 1993  Jim Wilson  (wilson@wookumz.gnu.ai.mit.edu)

	* sparc.md (ashldi3+2): Change lshift to ashift.

	* sparc.md (zero_extendhisi2, extendhisi2, extendqihi2,
	extendqisi2): Preserve the SUBREG_WORD value of subreg operands.
	(ashldi3): Delete, obsoleted by lshldi3 pattern.
	(lshldi3): Rename to ashldi3 for consistency with SImode shifts.

Fri Jul  2 01:10:56 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* Makefile.in (install-headers-tar): Ignore exit status of the
	first tar command.

Thu Jul  1 14:31:45 1993  Doug Evans  (dje@canuck.cygnus.com)

	* flow.c (find_auto_inc): In *p=expr;q=p+size case, avoid clobbering q
	if referenced in expr.

Fri Jul  2 01:26:01 1993  Paul Eggert  (eggert@twinsun.com)

	* tree.h (pushcase, pushcase_range): Add a new converter
	function argument that specifies how to convert case labels to the
	nominal type.
	* stmt.c (pushcase, pushcase_range): Likewise.
	* c-parse.in (label): Use `convert_and_check' when checking for
	overflow in case labels.
	* cp-parse.y (simple-stmt): Similar change, but use `convert' instead;
	this leaves the behavior unchanged for C++.  A C++ expert should look
	into this.

	* tree.h (TREE_OVERFLOW): New macro.
	* c-common.c (constant_expression_warning, overflow_warning,
	convert_and_check): Distinguish between TREE_OVERFLOW, which is just
	for warnings, and TREE_CONSTANT_OVERFLOW, which is for required
	pedantic diagnostics.
	* c-typeck.c (c_sizeof, build_c_cast): Set TREE_OVERFLOW in addition
	to TREE_CONSTANT_OVERFLOW.
	(store_init_value): STRIP_TYPE_NOPS is required before
	constant_expression_warning.
	* fold-const.c: (const_binop, fold_convert, fold):
	Set TREE_OVERFLOW in addition to TREE_CONSTANT_OVERFLOW.

Thu Jul  1 20:55:27 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* reload1.c (eliminate_regs): Fix typo in BYTE_LOADS_ZERO_EXTEND.

Thu Jul  1 20:00:00 1993 DJ Delorie (dj@ctron.com)

	* gcc.c (choose_temp_base): Try multiple variables.  Don't
	assume that the variable points to a valid directory.

	* gcc.c (pexecute): Handle the MS-DOS return codes correctly.
	Add .exe to file name when appropriate.

	* configure.bat: Make gcc use its own obstack.o.

	* objc/makefile.dos: New file for building with djgpp.

Thu Jul  1 18:15:17 1993  Paul Eggert  (eggert@twinsun.com)

	* fixincludes, fixinc.svr4: Don't create absolute symbolic links;
	make them relative instead.
	* fixincludes: Remove special case for IRIX 4.0.1 that was
	superseded by a more general fix to fixincludes.

	* fixinc.svr4: Remove everything after #endif, instead of trying
        to turn it into comments, which loses inside comments.
        * fixincludes: Likewise.  Remove #endif workarounds for Ultrix 4.[12]
        and SunOS 4.1, which are no longer needed because of this bug fix.

Thu Jul  1 14:56:56 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.h (OVERRIDE_OPTIONS): Define.  Give a warning if -fpic or 
	-fPIC was specified on the command line.

	* configure (hppa1.0-hp-hpux8.02): New target.
	(hppa1.1-hp-hpux8.02): Accept "--gas" in this configuration.
	* pa-oldas.h: New target for 1.0 machines running HPUX 8.02.
	* pa.c (output_arg_descriptor): Reverse polarity of test for
	HP_FP_ARG_DESCRIPTOR_REVERSED.
	* pa.h (ASM_DOUBLE_ARG_DESCRIPTORS): Likewise.
	* pa-hpux7.h (HP_FP_ARG_DESCRIPTOR_REVERSED): Define.
	* pa1-oldas.h (HP_FP_ARG_DESCRIPTOR_REVERSED): Define.
	(TARGET_DEFAULT): Clear useless bits in TARGET_DEFAULT.
	* pa-utahmach.h (HP_FP_ARG_DESCRIPTOR_REVERSED): Do not define here.
	* pa1-utahmach.h (HP_FP_ARG_DESCRIPTOR_REVERSED): Likewise.
	* pa1-ghpux.h (HP_FP_ARG_DESCRIPTOR_REVERSED): Likewise.
	* pa1-hpux.h (HP_FP_ARG_DESCRIPTOR_REVERSED): Likewise.

Thu Jul  1 09:48:23 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fold-const.c (fold, case GE_EXPR, LT_EXPR): Don't assume 
	result of comparison is integer_type_node.

Thu Jul  1 00:23:16 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)

	* config/i386/mach.h (SIZE_TYPE): Definition deleted.

Wed Jun 30 16:16:20 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/m68k/sun3.h (SIZE_TYPE): Definition deleted.

Wed Jun 30 16:55:25 1993  John F Carr  (jfc@Athena.mit.edu)

	* mips.c (gen_int_relational): For test with constant result,
	copy const0_rtx or const_true_rtx to result register instead
	of allocating a new pseudo-register.

Wed Jun 30 15:19:42 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)

	* config.sub: Recognize `gnu' as a valid operating system.  Sheesh.

Wed Jun 30 13:43:45 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.c (output_function_prologue): Emit SAVE_SP flag if a frame
	pointer is needed.

Wed Jun 30 00:52:25 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* collect2.c (main): Don't look for `gld' or `TARGET-gld'.

	* fixincludes (stdtypes.h): Verify that size_t etc. follow whitespace.

	* expr.c (expand_expr, case PLUS_EXPR): In the special case
	to return sym+integer as an expression, limit it to when
	the non-CONST_INT arg is at least a constant.
	(expand_increment): Do preinc with single insn if there's such an insn.

	* stmt.c (expand_end_case): Pass 1 as UNSIGNEDP to emit_cmp_insn
	when handling wide values.
	Save original minval in orig_minval and use for making the table.

Tue Jun 29 22:28:06 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa.c (singlemove_string): Use zdepi and ldil to load constants
	into registers when appropriate.

Tue Jun 29 11:26:35 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config.sub: Recognize -sysv* after -sysvr4.

	* config/vax/vax.h (GO_IF_NONINDEXED_ADDRESS): Declare reg_equiv_mem.

Mon Jun 28 20:12:04 1993  Steve Chamberlain  (sac@apple-gunkies.gnu.ai.mit.edu)

	* config/sh/*:  Major rework.

Mon Jun 28 02:46:47 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* fixincludes (file): When changing VA_LIST to DUMMY_VA_LIST,
	preserve _NEED___VA_LIST.

	* config/ns32k/ns32k.c (output_move_double): 
	Handle reg[n,n+1] = mem[reg[n] + reg[n+1]].
	* config/ns32k/ns32k.md (movdf, movdi): Delete `&' from constraint.

	* config/sparc/sparc.c (output_move_double): Use new local var
	highest_first to make sure addreg1 gets handled in the overlap case.
	In 2-reg-overlap case, really use proper reg in new address.

	* config/i860/i860.c (output_move_double): 
	Handle reg[n,n+1] = mem[reg[n] + reg[n+1]].  Use new local var
	highest_first to make sure addreg1 gets handled in the overlap case.
	* config/i860/i860.md (movdf, movdi): Delete `&' from load constraint.

	* config/sparc/sol2.h (CPP_SPEC): For -compat-bsd, put the ucbinclude
	dirs before, not after.

	* expr.c (store_field): Store unaligned field with bit field methods.

	* config/vax/vax.h (GO_IF_NONINDEXED_ADDRESS): If reload_in_progress,
	check a REG's reg_equiv_mem the way we would check a MEM.

	* reload.c (find_reloads_address): Be selective about what inner
	addresses to allow in an indirect mem ref.

Sun Jun 27 16:40:59 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* emit-rtl.c (copy_rtx_if_shared): Don't try to copy a 0-length vector.

	* config/m68k/x-apollo68 (TAROUTOPTS): New definition.

	* config.sub: Canonicalize -sco4 and -sco3.2.4 to -sco3.2v4.

	* gcc.c (DEFAULT_WORD_SWITCH_TAKES_ARG): Check for -iwithprefixbefore.
	(option_map): Add --include-with-prefix-before and
	--include-with-prefix-after.

Sun Jun 27 16:04:52 1993  Holger Teutsch  (holger@hotbso.rhein-main.de)

	* va-clipper.h: Use and define Macro __GNUC_VA_LIST. Define struct
	__gnuc_va_list.
 
Sun Jun 27 08:32:19 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* machmode.h (INTEGRAL_MODE_P, FLOAT_MODE_P): New macros.
	* cse.c (simplify_*_operation, fold_rtx, record_jump_cond, cse_insn):
	Use them.
	* combine.c (subst, apply_distributive_law): Likewise.
	(reversible_comparison_p): Likewise.
	Can reverse if MODE_COMPLEX_INT or MODE_PARTIAL_INT.

	* function.c (fixup_stack_1): Handle
	current_function_internal_arg_pointer. 

	* stor-layout.c: Add prototypes for layout_record and layout_union.
	(smallest_mode_for_size): New function.
	(variable_size): Allow variable sizes if global_bindings_p returns a
	negative value.
	(mode_for_size): Fix incorrect comment.
	(layout_decl): If DECL has a size already, don't copy from type.
	(layout_type, case INTEGER_TYPE, ENUMERAL_TYPE): Use smallest
	integer mode that fits, whether or not it fits exactly.
	
	* emit-rtl.c (restore_emit_status): Clear LAST_LABEL_NUM.

	* calls.c (expand_call): If function hasn't been used before,
	call assemble_external.

	* expr.c (store_constructor): Treat QUAL_UNION_TYPE just
	like UNION_TYPE.
	(safe_from_p, case ADDR_EXPR): EXP is safe from X it is is static or
	if the object whose address is being taken is safe from X.
	(expand_expr): Fix misplaced comment from last change.
	(expand_expr, case *_DECL): If not already used, assemble external.
	(expand_expr, case EXIT_EXPR): Simplify.
	(expand_expr, TRUTH_{AND,OR}IF_EXPR): Properly handle IGNORE case.

	* tree.c (array_type_nelts): Tighten up code and make more general.
	(build_function_type): Allow function to return array.
	(decl_function_context): Treat QUAL_UNION_TYPE like UNION_TYPE.

	* fold-const.c (fold, case TRUTH_XOR_EXPR): End with `return',
	not `break'.

	* dwarfout.c (output_compile_unit_die): Add support for Ada.

	* c-iterate.c (collect_iterators, case SAVE_EXPR): Simplify code
	added in previous change.

	* expr.c: Fix typo: was ARGS_GROW_DOWNARD.

	* combine.c (subst, case IF_THEN_ELSE): Install correct version of
	last change.

Sat Jun 26 15:38:33 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* cccp.c (main): For -iwithprefix, if no include_prefix,
	make a default from GCC_INCLUDE_DIR.
	Support -iwithprefixbefore.

	* reload.c (find_reloads): When merging reloads again after they have
	been changed, do check reload_reg_class and reload_nocombine.

	* config/sparc/sparc.md (movdf recognizer): Remove & from
	constraint for loading mem to cpu reg.

	* expr.c (expand_assignment): If FROM is scalar function call,
	expand_expr FROM before TO.

	* gcc.c (translate_options): `*' inhibits warning of extraneous arg.

Sat Jun 26 11:07:23 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* reload1.c (reload): Use reg_equiv_address for invalid addresses
	of the form (mem (reg)).

	* config/*/xm-*.h: Remove line that #define's alloca
	to __builtin_alloca.

	* fold-const.c (fold, case PLUS_EXPR, MINUS_EXPR): Apply
	distributive law to multiplication.
	(fold, case *_DIV_EXPR): Replace code to handle (A*C1)/C2 with
	more general code to handle addition as well.
	(fold, case *_MOD_EXPR): Add simplified version of above code.

	* integrate.c (function_cannot_inline_p): Can now inline nested
	functions.
	(expand_inline_function): Set up static chain if needed.
	(output_inline_function): Don't switch to temporary allocation
	here.
	* toplev.c (compile_file): Switch to temporary allocation when
	writing out inline function.
	* cp-decl2.c (write_vtable_entries, finish_file): Likewise.
	* c-decl.c, cp-decl.c (poplevel): Start new function context
	when writing inline function.

	* c-decl.c (init_decl_processing): When making SIZETYPE,
	start with name in SIZE_TYPE.  If -traditional, use a
	signed version of that type, if it is unsigned.

	* fold-const.c: Add prototypes for static functions.
	({l,r}{shift,rotate}_double): COUNT arg is HOST_WIDE_INT, PREC is int.
	(all_ones_mask): Remove __inline__.
	(range_test): Make static; not used elsewhere.
	* tree.h: Add more decls for functions in fold-const.c.

	* calls.c (expand_calls): Fix typo: ALLOCATE_OUTGOING_ARGS
	should be ACCUMULATE_OUTGOING_ARGS.

	* tree.def (TRUTH_{AND,OR,XOR}_EXPR): Make code class be 'e' like
	the rest of the truth operations.
	* fold-const.c (fold_truthop): Treat a BIT_AND_EXPR with a constant of
	one as if it were surrounded with an NE_EXPR.
	(fold): Don't move operation into conditional if it
	is BIT_{AND,OR}_EXPR with the constant 1; change it to TRUTH_*_EXPR
	instead.
	When moving things inside conditions, move comparisons as well as
	binary operations.
	Don't make a SAVE_EXPR when moving things inside conditionals unless
	the value would really have been used twice.

	* expr.c (do_store_flag): When computing via a shift, allow for
	an inner RSHIFT_EXPR in BITNUM.
	Sometimes do the operations as signed.

	* combine.c (subst): apply_distributive_law can also handle AND.
	(subst, case IF_THEN_ELSE): Make a shift when appropriate.
	(simplify_shift_const): If we have an outer operation and made
	a shift, see if it can be simplified.

Sat Jun 26 03:25:35 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* configure (i370-*-mvs*): New configuration.
	* config/i370/i370.md, mvs370.c, tm-mvs.h, xm-mvs.h

	* final.c, varasm.c: Include ctype.h.
	* c-lex.c: Include ctype.h.
	(isalnum, isdigit): Macros deleted.

	* config/sparc/sparc.c (output_move_double): Handle
	reg[n,n+1] = mem[reg[n] + reg[n+1]].
	* config/sparc/sparc.md (movdi): Delete the earlyclobber in load case.

Sat Jun 26 03:15:38 1993  Doug Evans  (dje@wookumz.gnu.ai.mit.edu)

	* gcc.c (option_map): Add missing comma.

Sat Jun 26 02:17:28 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config/we32k/we32k.c: Clean up formatting.

	* calls.c (calls_function_1): Add declaration.

	* config/m68k/m68k.md (fix_truncdfsi2, fix_truncdfhi2, fix_truncdfqi2):
	Require TARGET_68881 as well as TARGET_68040.

Fri Jun 25 20:13:51 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* calls.c (calls_function): Don't scan a single save_expr twice.
	(calls_function_1): New subroutine for the actual recursion.

	* c-parse.in (all_iter_stmt_simple): Add missing `else'.

Fri Jun 25 15:53:59 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	Cygnus<->FSF merge.
	Fri Jun 25 10:00:34 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c: Delete some #if 0'd code that has been there forever.

	* cp-type2.c (my_friendly_abort): Update count of aborts (added by
	emit_base_init rewrite).

	Make default copy constructors work properly.
	* cp-lex.c (cons_up_default_function): Mark the generated ctor with
	RID_INLINE, so it won't get emitted unless it's needed.
	* cp-decl.c (grok_ctor_properties): If CTYPE has virtual base
	classes, make sure we don't pay attention to the int that we
	magically added to the ctor decl.
	* cp-ptree.c (print_lang_type): Note a const copy ctor vs a normal
	copy ctor.  Say if TYPE_HAS_DEFAULT_CONSTRUCTOR.
	* cp-tree.h (cons_up_default_function): Modify prototype.
	* cp-class.c (finish_struct): Also check TYPE_HAS_CONSTRUCTOR, so
	we don't generate a default ctor if they already declared one
	(taking whatever arg types).

	Wed Feb  3 17:41:02 1993  Chip Salzenberg  (chip@tct.com)

	* cp-class.c (needs_const_ctor): Eliminate as meaningless.
	(finish_struct) Always generate default functions.
	Generate exactly one copy constructor: either "X(X&)" or
	"X(const X&)", but not both.
	* cp-lex.c (cons_up_default_function): Take list of fields
	as a new parameter.  Use default_copy_constructor_body.
	Set TREE_PUBLIC and DECL_EXTERNAL correctly for usage with
	#pragma interface.	
	(default_copy_constructor_body): New function (uses obstacks).

	Thu Jun 24 12:41:16 1993  Mike Stump  (mrs@rtl.cygnus.com)

	* cp-call.c (build_scoped_method_call, build_method_call): Remove
	maybe_adjust argument to build_delete as it is unneeded and remove all
	support for the magic cookie key in the area just before the data
	allocated by new [].
	* cp-decl.c (finish_function, maybe_build_cleanup,
	push_exception_cleanup): Likewise.
	* cp-decl2.c (delete_sanity, finish_file): Likewise.
	* cp-init.c (init_init_processing, build_new,
	maybe_adjust_addr_for_delete, build_delete, build_vbase_delete,
	build_vec_delete): Likewise.
	* cp-tree.c (build_cplus_new): Likewise.
	* cp-tree.h (build_delete): Likewise.

	Wed Jun 23 17:18:41 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (init_decl_processing): Also catch SIGBUS.
	(sigsegv): Rename to signal_catch; also reset SIGBUS.

	* cp-typeck.c (pointer_diff): Error if op1 is a pointer to an
	incomplete type.

	Wed Jun 23 16:17:43 1993  Mike Stump  (mrs@rtl.cygnus.com)

	* cp-search.c (dfs_get_vbase_types, get_vbase_types): Conform to ARM
	12.6.2 with respect to virtual bases.  Virtual bases are now
	initialized in dfs order.

	Wed Jun 23 16:04:17 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-tree.c (layout_basetypes): Disable the warning relating to a
	non-virtual dtor.

	Tue Jun 22 20:03:59 1993  Mike Stump  (mrs@cygnus.com)

	* cp-lex.c (reinit_parse_for_block): Detect EOFs inside templates.

	Tue Jun 22 16:10:46 1993  Mike Stump  (mrs@cygnus.com)

	* cp-class.c (finish_struct): Set TYPE_NONCOPIED_PARTS now that the
	right vtable can be found, so that the vtable pointers are set
	correctly when implementing default copy constructors.
	* cp-typeck.c (build_modify_expr): Use TYPE_NONCOPIED_PARTS in the
	same way the backend uses it when implementing default copy
	constructors.

	Tue Jun 22 10:50:56 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (grokdeclarator): Don't try to mangle the name of a fn
	that has C linkage.

	* cp-init.c (xref_friends): Deleted fn, since it's the same as
	xref_friend.
	(xref_friend): Make it static.
	(do_friend): Change call to xref_friend.
	* cp-tree.h (xref_friend, xref_friends): Delete extern decls.

	* cp-tree.h (lang_type): Delete `dynamic' bit.
	* gplus.gperf (dynamic): Delete reserved word.
	* cp-hash.h: Generated a new version.
	* cp-lex.c (init_lex): Delete doing an unset of `dynamic'.
	* cp-parse.y (DYNAMIC): Delete token and setting it to %right.
	(new, aggr): Delete DYNAMIC rules.
	* cp-spew.c (init_spew, struct toks_follow_types): Delete DYNAMIC.

	* cp-typeck.c (convert_for_assignment): There's no standard
	conversion from a pointer to member to a `void *'.

	* cp-decl.c (init_decl_processing): Add builtins for
	__builtin_apply_args, __builtin_apply, and __builtin_return.

	Mon Jun 21 12:05:28 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl2.c (grok_x_components): New function.  Adjust the code that
	handles ENUMERAL_TYPEs and UNION_TYPEs to make more sense. 
	* cp-parse.y (component_decl): Move a lot of code into that fn.
	* cp-tree.h (grok_x_components): Add extern decl.

	* cp-parse.y (component_decl_list): Don't warn about a semicolon
	after a component_decl_list.

	* cp-search.c (lookup_field): Be careful to handle operators
	properly when complaining about ambiguities &c.

	* cp-search.c (dfs_pushdecls): Make sure we have a context before
	seeing if it derives from TYPE.

	Fri Jun 18 08:14:11 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl2.c (finish_anon_union): Use simple_cst_equal to find the
	member that can hold all the values, instead of just doing a compare
	between the DECL_SIZEs.

	Wed Jun 16 10:57:37 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-typeck.c (build_unary_op): Make sure it's the global fn `main'
	before complaining about taking the address of it.

	* cp-decl.c (grokdeclarator): Also forbid `operator ()' as a
	non-member fn.

	* cp-decl.c (grok_reference_init): Don't allow an initializer list
	as the initializer for a reference.

	* cp-method.c (dump_init): Handle a NON_LVALUE_EXPR.

	Sun Jun 13 12:55:22 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (grokvardecl): Don't complain about duplicate
	definitions of `extern "C"' declarations (parallelize it with how
	regular `extern' decls are handled).

	* cp-decl.c (start_function): Avoid a null-reference on CTYPE.

	* cp-cvt.c (build_default_binary_type_conversion): Look deeper into
	what ARG1 and ARG2 are if they're POINTER_TYPEs.

	Thu Jun 10 12:09:17 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (grokdeclarator): Make the warning about opr-eq being a
	member function be a pedwarn.

	Thu Jun 10 00:30:08 1993  Mike Stump  (mrs@cygnus.com)

	* cp-tree.h: (previous_class_type): Add external declaration.
	* cp-class.c (prev_class_type): Rename to previous_class_type.
	* cp-decl.c (struct saved_scope): Add previous_class_type slot.
	* cp-decl.c (push_to_top_level, pop_from_top_level): Track
	previous_class_type value.  The only trick is that we have to call
	popclass(-1) when we have a previous_class_type that we are about to
	destroy, to keep things in sync.

	Tue Jun  8 16:48:49 1993  Mike Stump  (mrs@cygnus.com)

	* cp-cvt.c (build_thunk, convert_fn_ptr): New routines to handle
	thunks.
	* cp-cvt.c (cp_convert_to_pointer): Use convert_fn_ptr when
	converting non-static pointer to members.

	Tue Jun  8 16:41:59 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-lex.c (reinit_parse_for_block): Make sure not to try to use
	consume_string on an escaped double-quote. 

	Tue Jun  8 16:25:43 1993  Mike Stump  (mrs@cygnus.com)

	* cp-call.c (build_method_call): Don't search hidden functions from
	base classes, as this violates chapter 10.

	Mon Jun  7 18:46:01 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-init.c (emit_base_init): Rewrite, merging the two paths into
	one for member initialization.  Now members will be initialized in
	order of declaration, not in the order of the mem-initializer list.
	(perform_member_init, sort_member_init): New functions.

	Mon Jun  7 18:01:31 1993  Mike Stump  (mrs@cygnus.com)

	* cp-search.c (is_subobject_of_p, lookup_field, lookup_fnfields):
	Because virtual bases don't necessarily share the same binfo, use
	the binfo hierarchy of TYPE_BINFO of any virtual bases, when
	performing hiding checks.  Fixes problem introduced on Thu Mar 25
	23:09:27 1993.  The symptom is the compiler reports non ambiguous
	members as being ambiguous.

	Sun Jun  6 11:45:44 1993  Michael Tiemann  (tiemann@rtl.cygnus.com)

	* cp-call.c (EVIL,TRIVIAL): New macros.
	(convert_harshness): Use these macros.

	Sat Jun  5 19:06:13 1993  Michael Tiemann  (tiemann@rtl.cygnus.com)

	* cp-init.c (emit_base_init): Make clearing BINFO_BASEINIT_MARKED
	symmetric with its setting.  Fixes p2825.

	Thu Jun  3 16:24:30 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-parse.y (component_declarator, component_declarator0):
	Allow attribute after nameless field.

	* cp-lex.c (real_yylex): Take care to expand token_buffer before
	storing each character.

	* cp-lex.c (real_yylex): If an integer value overflows so the high
	word is negative, it's of unsigned long long type.  Integer constant
	is unsigned for purposes of int_fits_type_p so that it compares huge
	constants properly.  Warn about integers so large that they are
	unsigned.

	* cp-cvt.c (convert_from_reference): Do an or-equals on setting
	TREE_SIDE_EFFECTS for NVAL.
	* cp-tree.c (lvalue_p): For a SAVE_EXPR, check its first argument.

	Thu Jun  3 11:34:35 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl2.c (grok_alignof): New function.
	* cp-parse.y (unary_expr, ALIGNOF unary_expr rule): Move the code
	into the new function, to reduce the size of the parser.
	* cp-tree.h (grok_alignof): Add prototype.

	* cp-decl.c (grokdeclarator): Allow function-call notation for
	initialization of scalars as well as aggregates.

	* cp-decl.c (pushdecl): Don't pay attention to friends when noting a
	missing `static' decl.  Disable this code for now.

	Wed Jun  2 12:23:05 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (duplicate_decls): Do a regular error if the line number
	on NEWDECL hasn't been set yet (e.g., before finish_struct).

	* cp-class.c (finish_struct): Remove warning about a bit-field
	having a bad type in ANSI C++, it's not appropriate given the
	warning immediately above.

	* cp-typeck.c (require_instantiated_type): Don't allow an
	initializer list in an argument list.

	* cp-decl.c (pushdecl): Change shadowing of a param in outermost
	block of the fn from a pedwarn to an error, since it's a
	redeclaration.

	* cp-class.c (finish_struct): Say anonymous classes and structs are
	useless, not just classes.

	* cp-lex.c (real_yylex): Warn if catch, throw, or try are used as
	identifier names.

	* cp-decl.c (pushdecl): Make sure we have a CURRENT_FUNCTION_DECL
	before setting its public flag.

	* cp-decl.c (expand_static_init): Only complain about multiple
	initializations of a static variable if we actually have an
	initializer.
	(finish_decl): Likewise for const.

	* cp-search.c (build_mi_matrix): Fix off-by-one error in
	clearing of MI_MATRIX.
	(get_base_distance): Init NEW_BINFO to 0.

	* cp-pt.c (instantiate_member_templates): Initialize XXX to 0.

	* cp-call.c (build_method_call): Zero out candidates.
	(build_overload_call_real): Likewise.

	Wed Jun  2 11:53:24 1993  Mike Stump  (mrs@cygnus.com)

	* cp-search.c (lookup_fnfields_here): Use TYPE_MAIN_VARIANT on
	context types before comparing.  Fixes const member functions not
	being found in templates.

	Tue Jun  1 18:26:18 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-parse.y (structsp): Avoid a null-ref on ID.
	(left_curly): Likewise.

	Tue Jun  1 13:49:20 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (pushdecl): Communicate a `static' decl of a prototype
	into its definition, if they forget to take care of it.

	* cp-init.c (emit_base_init): Make error message more useful about
	insufficient initializers for a member of a class w/o a ctor.

	Sun May 30 09:45:06 1993  Michael Tiemann  (tiemann@rtl.cygnus.com)

	* cp-call.c (compute_conversion_costs): Penalise each argument that
	matches an ellipsis, not just the ellipsis itself.
	(build_method_call): Don't consider a candidate an easy match if
	cp->ellipsis is non-zero (fixes p2778).

	Sat May 29 09:34:57 1993  Michael Tiemann  (tiemann@rtl.cygnus.com)

	* cp-cvt.c (convert_to_reference): Match ARM rules more closely by:
	(1) not converting between types of different signedness, and
	(2) converting between types of different varieties if a const&
	suggests we can use a temporary (fixes p2780).

	* cp-decl.c (decls_match): Handle pseudo-match of parameter lists
	according to p308 of the ARM.
	(push_overloaded_decl): Ditto.
	* cp-typeck.c (comptypes): Rest of change (closes p2779).

	* cp-call.c (compute_conversion_costs): Count ellipses when we see
	them.
	(ideal_candidate): Gracefully handle arg lists that have ellipses
	(Fixes p2777).

	* cp-call.c (build_method_call): Delete some #ifdefs that are
	obsoleted by ANSI.

	Fri May 28 12:15:21 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (finish_decl): Don't allow overloaded operators to have
	default arguments.

	* cp-cvt.c (convert): If it's an anonymous enum, say so instead of
	giving the cryptic `._123' as the enum type.

	Thu May 27 10:52:49 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl.c (grokdeclarator): Return 0 instead of doing a 155 abort,
	so we'll get the right error message later.

	* cp-type2.c (readonly_error): Give a more useful error when the arg
	is a RESULT_DECL.

	* cp-init.c (build_new): Set LOOKUP_COMPLAIN on the flags, so we'll
	pay attention to the visibility of the constructor we're trying to
	call.

	* toplev.c (lang_options): Add warning about ctor/dtor privacy.
	* cp-decl2.c (lang_decode_option): Grok it.  Make -Wall effect it.
	(warn_ctor_dtor_privacy): New variable, default being on.
	* cp-tree.h (warn_ctor_dtor_privacy): Add extern decl.
	* cp-class.c (finish_struct_methods): Make the ctor warning
	conditionalized on the flag.
	(finish_struct): Likewise for ctors.
	* invoke.texi (Option Summary, Warning Options): Add it.
	(Options to Request or Suppress Warnings): Explain it.

	* cp-decl.c (grokdeclarator): Use a pedwarn on extern inline.

	Tue May 25 13:55:48 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-init.c (build_delete): Don't pass the size as an argument to
	builtin delete for a non-aggregate type.  Only pass it for a class
	when we'll be using its own operator delete(). (complies w/ $12.5)
	(build_x_delete): Don't pass the size down to builtin delete.

	* cp-decl2.c (delete_sanity): If it's a pointer to a type that has
	no destructor, then build a regular delete expression, instead of a
	vector one (since we didn't push any info into the BI_header_type
	area).

	* cp-decl2.c (grok_array_decl): Add a pedwarn if they do `5[a]'.

	* cp-typeck.c (comptypes): Don't warn about t2 being an
	error_mark_node.

	* cp-decl.c (finish_decl): If type is laid out, but decl is not,
	call layout_decl.

	Mon May 17 10:35:55 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-tree.h (error_not_base_type): Add prototype.

	Fri May 14 17:16:55 1993  Mike Stump  (mrs@poseidon.cygnus.com)

	* cp-class.c (finish_struct): Use get_binfo instead of binfo_value
	to find vfields.  Cures compiler_error.

	Thu May 13 14:57:51 1993  Mike Stump  (mrs@cygnus.com)

	* cp-tree.c (binfo_value): If type is the main binfo for elem,
	return it.

	Wed May 12 13:10:07 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-typeck.c (c_expand_return): Pedwarn on using return without a
	value in a function that requires one.  Clear
	CURRENT_FUNCTION_RETURNS_NULL, so we don't get a bogus warning about
	reaching the end of a non-void function.

	Tue May 11 17:51:16 1993  Mike Stump  (mrs@poseidon.cygnus.com)

	* cp-decl.c (start_decl): Allow -fexternal-templates compiled code to
	fall back to old strategy of generating static copies for templates
	that are not under the control of #pragma interface/implementation,
	but warn if this happens.
	* cp-decl2.c (warn_if_unknown_interface): Likewise.
	* cp-lex.c (reinit_parse_for_method, cons_up_default_function):
	Likewise.
	* cp-pt.c (end_template_decl, instantiate_member_templates,
	instantiate_template): Likewise.
	* cp-tree.h (warn_if_unknown_interface): Likewise.

	Sat May  8 05:53:17 1993  Michael Tiemann  (tiemann@cygnus.com)

	* cp-decl.c (finish_decl): TOPLEV should be set non-zero also if we
	are at the pseudo-global level.  Use TOPLEV instead of testing
	CURRENT_BINDING_LEVEL.

	Fri May  7 12:42:46 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-decl2.c (grok_array_decl): New function.
	* cp-parse.y (primary): Use it instead of lots of code in the
	parser.
	* cp-tree.h (grok_array_decl): Add prototype.

	* cp-parse.y (component_decl): Disable change about TYPE_DECLs going
	into the TYPE_FIELDS list for now.
	* cp-type2.c (store_init_value): Disable checks for now.

	Thu May  6 16:59:19 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-lex.c (check_newline): Use a while instead of a do-while to
	avoid reading the line after the #pragma if we're at a newline.

	Wed May  5 16:38:06 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* Makefile.in (stamp-cp-parse): Update reduce/reduce count to 13.

	* cp-decl2.c (delete_sanity): New function.
	* cp-parse.y (unary_expr): Call it, getting rid of a lot of
	repeated code in the parser.
	* cp-tree.h (delete_sanity): Add prototype.

	* cp-init.c (emit_base_init): Don't try to do anything with a member
	that lacks a DECL_NAME (e.g., types we added in component_decl from
	the parser).

	Wed May  5 12:57:33 1993  Jim Wilson  (wilson@sphagnum.cygnus.com)

	* cp-parse.y (get_current_declspecs):  Obsolete, deleted.

	Tue May  4 13:46:09 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-type2.c (process_init_constructor): Don't check for private or
	protected members; we do that in store_init_value now.

	* cp-parse.y (simple_stmt): Use expr_no_commas instead of expr for
	case labels.

	* cp-typeck.c (build_binary_op_nodefault): Add 'right' and 'left' to
	shift count warnings to distinguish them from each other.

	* cp-decl.c (finish_decl, grokdeclarator): Report overflows in
	storage sizes.
	(build_enumerator): Report overflows on enumerators.
	* cp-decl2.c (grokbitfield): Likewise.
	* cp-parse.y (unary_expr): Warn about overflows in parser-built
	unary expressions.
	* cp-typeck.c (c_sizeof): Call force_fit_type only for INTEGER_CST.
	(build_c_cast): Ignore any integer overflow caused by a cast.
	(convert_for_assignment): Warn if source had overflow in folding.
	(build_conditional_expr): Check conversions in if-then-else
	expressions.
	* cp-tree.h (convert_and_check, overflow_warning,
	unsigned_conversion_warning): Add prototypes for fns in c-common.c.

	* cp-decl.c (init_decl_processing): Make the arrays 200 long to
	leave enough room for most names.

	* cp-decl.c (lookup_label): Return a NULL_TREE if not within a
	function.
	* cp-parse.y (unary_expr, ANDAND identifier): Handle lookup_label
	returning a NULL_TREE.

	* cp-method.c (dump_init): Grok a FIELD_DECL as well.

	* cp-decl.c (finish_function): Move setting of the DECL_RESULT's
	context and calling setjmp_protect after poplevel, so we have a
	valid DECL_INITIAL for the fndecl (not an error_mark_node).

	Mon Jan 25 11:04:23 1993  Niklas Hallqvist  (niklas at della.appli.se)

	* cp-parse.y (component_decl): Handle anonymous unions as static
	class members.
	* cp-decl.c (grokdeclarator): Ditto.

	* cp-decl.c (shadow_tag): Emit error message if static or extern
	is specified as per ARM 7.1.1.
    
        * cp-decl2.c (finish_anon_union): Issue error if a global
	anonymous union is not declared static, remove old funny error
	about some optimizer failing.

        * cp-class.c (finish_struct): Corrected error message concerning
	anonymous classes.

	* cp-lex.c (check_for_missing_semicolon): Allow trailing storage
	specifiers.

	Fri Jan 29 09:39:17 1993  Niklas Hallqvist  (niklas at della)

	* cp-parse.y (component_decl): Nested unions, enums and structs
	should have their TYPE_DECLs in the TYPE_FIELDS slot of the
	containing type so the access flags eventually will get correctly
	set.

	* cp-type2.c (store_init_value): Check for the aggregate conditions
	described in ARM 8.4.1.

	Mon May  3 19:10:28 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-lex.c (real_yylex): Don't warn about floating point out of
	range if target floating-point format is IEEE.

	* cp-class.c (finish_struct): Promote unsigned bitfields to signed
	int if the field isn't as wide as an int.

	* cp-search.c (dfs_pushdecls): Use warning_with_decl, so we give the
	line number of the offending method declaration, rather than the
	line number of the curly-brace that ends the class definition.

	Mon May  3 18:04:15 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-cvt.c (convert): When doing int->enum conversions, always call
	pedwarn, even if we didn't give `-pedantic'.

	* cp-decl.c (start_function): Add extern decl of
	`flag_external_templates'.

	* cp-lex.c (check_newline): Warn if there's anything after a
	`#pragma interface'.

	Mon May  3 12:39:49 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-class.c (finish_struct_methods): Use `warning' on a class w/ a
	private dtor and no friends, so the line number comes out right.  Also
	only emit this warning when `extra_warnings' is true.

	* cp-type2.c (process_init_constructor): Don't allow use of an
	initializer list for a class with private or protected members.

	Sat May  1 15:07:24 1993  Mike Stump  (mrs@poseidon.cygnus.com)

	* cp-decl.c (start_decl, start_function): Add a new flag
	-fexternal-templates.  Use flag_external_templates to determine when
	template definitions should be made externally visible and
	accessible.  This permits non-exponential growth in object files
	that use templates.
	* cp-decl2.c (lang_f_options): Likewise.
	* cp-lex.c (reinit_parse_for_method, cons_up_default_function):
	Likewise.
	* cp-parse.y (template_instantiate_once): Likewise.
	* cp-pt.c (end_template_decl, instantiate_member_templates,
	instantiate_template, end_template_instantiation): Likewise.
	* toplev.c (lang_options): Likewise.

	Fri Apr 30 18:50:00 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* cp-spew.c (arbitrate_lookup): If the next character is a '[', then
	have the compiler assume it's an expression instead of a type.

	Fri Apr 30 14:39:28 1993  Mike Stump  (mrs@poseidon.cygnus.com)

	* cp-class.c (maybe_fixup_vptrs): Use the VF_NORMAL_VALUE of the
	vfields to get the binfo to get the vtable, so that we may pick up
	the most derived version of the vtable.

	* cp-class.c (finish_base_struct): Always set the VF_NORMAL_VALUE so
	that maybe_fixup_vptrs can get the most derived vtable.

Fri Jun 25 14:00:17 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* config.sub: Convert ...-sysvr4 into ...-sysv4.

	* config/m68k/news.h (CPP_PREDEFINES): Have two alternatives,
	one for motorola and one for not motorola.

	* config/m68k/tower-as.h, mot3300.h, m68kv4.h, hp320.h, amix.h:
	* config/m68k/3b1.h, crds.h (CPP_PREDEFINES): Add __motorola__.

	* expr.c (store_expr): If TARGET is volatile mem ref, return it.

	* toplev.c (lang_options): Add -fdollars-in-identifiers.
	* c-decl.c (c_decode_option): Handle -fdollars-in-identifiers.

Fri Jun 25 13:33:39 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* pa-hpux.h (LINK_SPEC): Search shared libraries by default; turn
	off shared library searching of -static is specified.
	* pa-ghpux.h (LINK_SPEC): Likewise.

	* pa.h (TARGET_SHARED_LIBS): Delete switch and all references to
	the switch.
	* pa.c: References to TARGET_SHARED_LIBS deleted.
	* pa.md: Likewise.

	* pa-utahmach.h (TARGET_DEFAULT): Allow indexing on Mach ports.
	* pa1-utahmach.h (TARGET_DEFAULT): Likewise.
	* pa.h (TARGET_DISABLE_INDEXING): Clean up comments.

Fri Jun 25 00:50:48 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)

	* expr.c (store_expr): Ignore SUGGEST_REG if target is volatile.

	* config/mips/mips.md (negdi2, negdi2_internal): Renamed from negdi3...

Thu Jun 24 00:31:27 1993  Richard Stallman  (rms@wookumz.gnu.ai.mit.edu)

	* gcc.c (option_map): Make --version alias for -dumpversion.

Wed Jun 23 07:50:21 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* romp.c (output_prologue): Delete unused var, INSN.
	(output_encoded_offset): New function.
	(output_epilogue): Minor changes to traceback table; call
	new output_encoded_offset.
	(romp_debugger_{auto,arg}_correction): New functions.
	* romp.h (DBX_REGPARM_STABS_LETTER, DEBUGGER_{AUTO,ARG}_OFFSET):
	New macros.

	* reorg.c (fill_slots_from_thread): When replacing a use of a
	register with what it was set to, don't do it when either the
	destination or source of the copy is set in the insn.

	* jump.c (jump_optimize): Properly make jump into store-flag
	sequence when the jump can't be reversed but the TRUE branch
	is const0_rtx. 

	* expr.c (expand_expr): Set IGNORE if target is const0_rtx or
	result type is VOID.
	Move most IGNORE processing to one place to avoid expanding things
	that don't need to be expanded.
	(expand_expr, case CONSTRUCTOR, case COND_EXPR): If IGNORE, don't
	expand anything we don't have to.
	(expand_expr, case CONVERT_EXPR): Don't deal with IGNORE here.

Wed Jun 23 07:47:32 1993  John F Carr  (jfc@Athena.mit.edu)

	* regs.h (scratch_list, scratch_block, scratch_list_length): New vars.
	* reload1.c (mark_scratch_live): New function.
	(reload): Call it on each SCRATCH.
	Free scratch list and block.
	(spill_hard_reg): Reallocate any SCRATCH whose register we want to
	spill.
	* local-alloc.c (scratch_block, scratch_list{,_length}, scratch_index):
	New variables.
	(local_alloc): Allocate and initialize them.
	(alloc_qty_for_scratch): Can allocate likely-spilled register
	classes for SCRATCH.
	(block_alloc): Likewise for regs in small register classes.
	Only allocate a SCRATCH if it can fit in the block we make.
	Don't mark regs used in SCRATCH live here; instead, make entry in
	new tables.

Tue Jun 22 19:52:08 1993  Richard Stallman  (rms@wookumz.gnu.ai.mit.edu)

	* emit-rtl.c (copy_rtx_if_shared): In `E' case, get the length
	before copying, and don't get it again after.

Tue Jun 22 10:50:56 1993  Brendan Kehoe  (brendan@lisa.cygnus.com)

	* toplev.c (report_error_function): Change format of the
	included-file stack to be more readable.
	* cccp.c (print_containing_files): Likewise.

Mon Jun 21 19:21:18 1993  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.c (print_operand, case 'J'): Write out shift count
	of 0, not 32 for bit 31 of CCR.

See ChangeLog.7 for earlier changes.

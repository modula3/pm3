% Copyright (C) 1989, 1992 Digital Equipment Corporation 
% All rights reserved.
% See the file COPYRIGHT for a full description.
% 
% Last Modified On Thu Jun 20 12:17:08 PDT 1996 By heydon  
%      Modified On Wed Oct 11 13:27:28 PDT 1995 By najork  
%      Modified On Wed Jun 14 14:07:31 PDT 1995 By kalsow  
%      Modified On Mon Jun 21 14:53:11 PDT 1993 By harrison 
%      Modified On Wed Jun  2 14:53:26 PDT 1993 By mjordan 
%      Modified On Tue Oct 27 11:12:50 PST 1992 By muller
% 
% Standard configuration file for DECstations at SRC, using the
% native-code compiler.
%

%-------------------------------------------------- compilation environment ---

readonly TARGET = "DS3100"
readonly DEFAULT_BUILD_DIR = "DS"

include ("PLATFORMS")  % get the target-dependent mappings
include (OS_TYPE)      % get the OS-dependent functions

readonly NAMING_CONVENTIONS = "0"
%                                        object files       libraries
%  0=Unix                          =>  .o   .io    .mo       libXX.a
%  1=Unix with a grumpy C compiler =>  .o   _i.o   _m.o      libXX.a
%  2=Windows/NT                    =>  .obj .io    .mo       XX.lib
%

%------------------------------------------------------------- export paths ---
% During the installation, destination directories that do not exist
% will be created.  You need the necessary permissions to do so; otherwise,
% the installation will fail, but can be restarted after you have 
% fixed the permissions.

BIN_INSTALL   = "/proj/mips/bin"            % executables
LIB_INSTALL   = "/proj/m3/lib.DS"           % libraries
DOC_INSTALL   = "/proj/doc"                 % documents
PKG_INSTALL   = "/proj/m3/pkg"              % packages
MAN_INSTALL   = "/proj/man/mips"            % man pages
EMACS_INSTALL = "/proj/generic/lib/elisp"   % emacs lisp code
HTML_INSTALL  = "/proj/www/SRC"             % public hypertext
   
WDROOT = $HOME & "/pkg/m3"  % handy-dandy default for overrides

% On some systems (e.g. AFS) you must install public files in a different
% place from where you use them.  If that is the case for your system,
% specify the "use" location here, otherwise leave them alone.
BIN_USE   = BIN_INSTALL
LIB_USE   = LIB_INSTALL
PKG_USE   = PKG_INSTALL

readonly INSTALL_IMPLS = "TRUE"
% "TRUE"
%    => save all source files during the install
%    => makes debugging easier and browsing more fruitful
% "" (i.e. FALSE)
%    => save only the exported interfaces and templates 
%    => makes the installed system slightly smaller.

readonly NEED_OBJECTS = ""
% "TRUE"
%    => accumulate a list of derived objects in COMPILE_OBJECTS
%    => for building shared libraries in the library_hooks function below
% ""
%    => don't bother

%---------------------------------------------------------------------- X11 ---
% If you have X11R4 installed and would like the X11R4 binding interfaces
% to be built, define the procedure "import_X11R4" to import the libraries
% that are needed.  Otherwise, define "import_X11R4" to be an empty procedure.
%
% If you use the MIT server with DECnet support, you need X11 and dnet,
% otherwise X11 should be enough.
% 
% Since X11R5 is an extension of X11R4, you can use the X11R5 libraries
% instead of X11R4.  However, the Modula-3 binding interfaces have not
% yet been upgraded to X11R5.
%
% "import_X11R4" is called from the X11R4 package.
% "import_Motif" is called from the motif package.
% "import_DECPEX" is called from the PEX package.
% "import_OpenGL" is called from the opengl package.
% "import_TCP" is called from the tcp package.

proc import_X11R4() is
  import_lib("Xaw",  "/usr/lib")
  import_lib("Xmu",  "/usr/lib")
  import_lib("Xext", "/usr/lib")
  import_lib("Xt",   "/usr/lib")
  import_lib("X11",  "/usr/lib")
end

readonly proc import_Motif() is
  import_lib("Xm",   "/usr/lib")
end

readonly proc import_DECPEX() is
  import_lib("pex",  "/udir/najork/lib")
end

readonly proc import_OpenGL() is
  % OpenGL is not available on DECstations
end

readonly proc import_TCP() is
end

readonly PLATFORM_SUPPORTS_X      = "TRUE"
readonly PLATFORM_SUPPORTS_MOTIF  = "TRUE"
readonly PLATFORM_SUPPORTS_DECPEX = "TRUE"
readonly PLATFORM_SUPPORTS_OPENGL = ""

% Does your X11 server have the shared memory extension?
readonly X11_WITH_SHARED_MEM = "TRUE"

%-------------------------------------------------------------------- emacs ---
% If you have emacs and want to compile ".el" files to ".elc" files,
% fill in the function below.  Otherwise, comment out or delete the
% entire function.  Note, the distributed code assumes gnuemacs version 19
% or later.

readonly proc emacs_compile (el) is
  exec ("emacs -batch -f batch-byte-compile", el)
end

%---------------------------------------------------- C compiler and linker ---
% The following definitions are used to compile and link C modules.
% Note that these definitions can be overridden on the m3build command
% line with "-D".  (e.g.  m3build -DCC=gcc)
%
% _ifdef(a,b,c) == if defined(a) return b else return c
%
% The actual definitions must be kept on one line due to finicky details
% of the bootstrap process.

CC = _ifdef ("CC", CC, [ "/bin/cc" ])
%% CC = _ifdef ("CC", CC, [ "/bin/cc", "-Wf,-XNp200000", "-Wf,-XNd1500000" ])
%--- C compiler with flags for compiling a single ".c" file

LINK = _ifdef ("LINK", LINK, [ "/bin/cc" ])
%--- C compiler with flags for linking

MAKELIB = _ifdef ("MAKELIB", MAKELIB, [ "/bin/ar", "cru" ])
%--- program to build library archives

RANLIB = _ifdef ("RANLIB", RANLIB, [ "/usr/bin/ranlib" ])
%--- program to index libraries

ASM = _ifdef ("ASM", ASM, [ "/bin/as" ])
%--- assembler

%------------------------------------------------------------- GNU variants ---
% The two large pieces of GNU software used by the Modula-3 system
% gcc(=m3cc) and gdb(=m3gdb) often require slightly different C compilers
% or flags.  They are specified here.  Note that they may be overridden
% from the m3build command line.
%
% To use the GNU defaults for CC and CFLAGS, specify "*".
%

GNU_CC     = _ifdef ("GNU_CC",     GNU_CC,     "gcc")
GNU_CFLAGS = _ifdef ("GNU_CFLAGS", GNU_CFLAGS, "-g")
GNU_MAKE   = _ifdef ("GNU_MAKE",   GNU_MAKE,   "gnumake")

%-------------------------------------------------------- Modula-3 compiler ---
% The syntax for the values passed to most of the M3_CONFIG options is
% "@pgm@arg1@...@argn@" where "@" is an arbitrary character.  The
% separator character must begin and end the value.

% Where is the driver?
M3 = "/proj/m3/pkg/m3/DS/m3"

% What are the standard flags?
M3OPTIONS = [ "-w1", "-why", "-g" ]

M3_CONFIG = [
   "-Y1" & _pack_args (CC),
   "-Y2" & _pack_args (LINK),
   "-Y3" & _pack_args (MAKELIB),
   "-Y4" & _pack_args (RANLIB),
   "-Y7" & _pack_args (ASM),

   "-Y6@" & LIB_USE & "/m3cgc1@-quiet@",
   % --- the Modula-3 IL to assembly language pass

   "-Y8@" & LIB_USE & "/mips-tfile@",
   % --- the object patcher (mips-tfile)

   "-z2@-lm@",  % --- libraries systematically linked with all programs

   "-z3" & LIB_USE & SL & "report_coverage.o",
   % --- library linked in programs compiled with "-Z" coverage option

   "-z5" & NAMING_CONVENTIONS,
   % Set the host naming conventions.

   "-z61",
   % Values of "-z6":
   %   "0" => the m3 driver will split library names and pass -L/-l
   %          arguments to the linker
   %   "1" => the m3 driver will pass libraries with full path names
   %   "2" => like "0" except that for shared libraries, the driver
   %          passes -Rdir as well as -Ldir to the linker

   "-zA0",
   % The "-zA" option specifies the maximum size (in megabytes) that Pass0
   % is allowed to reach as a persistent server before the driver kills it.
   % Setting it to zero disables server mode.
   % NOTE: the current compiler is buggy, leave "-zA" alone!

   "-zB@-O2@",  % --- pass 1 options implied by "-O"
   "-zC@-O2@",  % --- pass 6 options implied by "-O"
   "-zD@-O2@",  % --- pass 7 options implied by "-O"

   "-zE@-g3@",  % --- pass 1 options implied by "-g"
   "-zF@-g3@",  % --- pass 6 options implied by "-g"
   "-zG@-g3@",  % --- pass 7 options implied by "-g"

   "-zH" & NAMING_CONVENTIONS,
   % --- the target's naming conventions

   "-zI" & TARGET,
   % --- the target architecture

   "-zJ10",
   % The option "-zJx1" specifies that pass "x" is "noisy", "-zJx0"
   % specifices that it's not.  The default is to assume that passes
   % are not noisy.  The driver collects the standard output of noisy
   % passes in a file and then deletes the file, unless "-keep" or
   % "-verbose" is specified.

   "-zK0",
   % --- Set the value of "-zK" to "1" if you want the m3 driver to
   %     supply -Bdynamic/-Bstatic options to the linker, "0" otherwise.

   "-Bdynamic",
   % --- libraries are shared by default.  If you give -zK1 you should
   %     also provide an initial -Bdynamic or -Bstatic.

   "-zL0"
   % --- Set the value of "-zL" to "1" if you want .M3LINK files produced
   %     for a dynamic loader
]

proc build_standalone() is
   % --- reset the linker to avoid shared libraries.
end

proc build_shared() is
   % --- reset the linker to use shared libraries.
end

%-------------------------------------------------------------------- hooks ---
% These are the "last chance" hooks that are called each time a library
% or program is built.  They might build shared libraries or strip
% executables...

proc before_library_hooks(x) is
end

proc after_library_hooks(x) is
end

proc before_program_hooks(x) is
end

proc after_program_hooks(x) is
end

%---------------------------------------------- the rest of the environment ---

if defined("_bootstrap") include("COMMON.BOOT") end
include ("COMMON")
include ("COMMON.SRC")


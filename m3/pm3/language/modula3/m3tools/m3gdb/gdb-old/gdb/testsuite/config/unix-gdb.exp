#   Copyright (C) 1988, 1990, 1991, 1992, 1994 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@prep.ai.mit.edu

# This file was written by Rob Savoye. (rob@cygnus.com)

# Set a default timeout to be used for the tests under UNIX, rather than
# accepting whatever default dejagnu gives us (apparently 10 seconds).
# When running the tests over NFS, under somewhat heavy load, 10 seconds
# does not seem to be enough.  Try starting with 60.
set timeout 60
verbose "Timeout is now $timeout seconds" 2

load_lib gdb.exp

# variables that need to set up
#
if ![info exists prompt] then {
    set prompt "\[(\]gdb\[)\]"
}
# some convenience abbreviations
#
if ![info exists hex] then {
    set hex "0x\[0-9A-Fa-f\]+"
}
if ![info exists decimal] then {
    set decimal "\[0-9\]+"
}

#
# gdb_version -- extract and print the version number of gcc
#
proc gdb_version {} {
    default_gdb_version
}

#
# gdb_unload -- unload a file if one is loaded
#

#
# gdb_load -- load a file into the debugger.
#             return a -1 if anything goes wrong.
#
proc gdb_load { arg } {
    global verbose
    global loadpath
    global loadfile
    global GDB
    global prompt
    upvar timeout timeout

    return [gdb_file_cmd $arg]
}

proc gdb_start { } {
    default_gdb_start
}
  
proc gdb_exit { } {
    catch default_gdb_exit
}

set binpath /s1/users/rob/vxworks/bin/somewhere-bogus-that-needs-configuring
global GDB
set bin $GDB

gdb_start

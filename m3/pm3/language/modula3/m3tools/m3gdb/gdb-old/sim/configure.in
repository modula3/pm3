dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.5)dnl
AC_INIT(Makefile.in)

AC_PROG_CC
AC_PROG_INSTALL
AC_CHECK_TOOL(AR, ar)
AC_CHECK_TOOL(RANLIB, ranlib, :)

AC_CONFIG_AUX_DIR(`cd $srcdir;pwd`/..)
AC_CANONICAL_SYSTEM
AC_ARG_PROGRAM
AC_PROG_CC
AC_SUBST(CFLAGS)
AC_SUBST(HDEFINES)
AR=${AR-ar}
AC_SUBST(AR)
AC_PROG_RANLIB

# Put a plausible default for CC_FOR_BUILD in Makefile.
AC_C_CROSS
if test "x$cross_compiling" = "xno"; then
  CC_FOR_BUILD='$(CC)'
else
  CC_FOR_BUILD=gcc
fi
AC_SUBST(CC_FOR_BUILD)

# The PowerPC simulator uses the GCC extension long long as well as
# ANSI prototypes, so don't enable it for random host compilers
# unless asked to.

AC_ARG_ENABLE(sim-powerpc,
[  --enable-sim-powerpc ],
[case "${enableval}" in
yes)	powerpc_sim=yes ;;
no)	powerpc_sim=no ;;
*)	AC_MSG_ERROR(bad value ${enableval} given for sim-powerpc option) ;;
esac],[if test x"$GCC" != x""; then powerpc_sim=yes; else powerpc_sim=no; fi])

# WHEN ADDING ENTRIES TO THIS MATRIX:
#  Make sure that the left side always has two dashes.  Otherwise you
#  can get spurious matches.  Even for unambiguous cases, do this as a
#  convention, else the table becomes a real mess to understand and maintain.

case "${target}" in
  arm*-*-*)		sim_target=arm ;;
  h8300*-*-*)		sim_target=h8300 ;;
  h8500-*-*)		sim_target=h8500 ;;
  mips*-*-*)		sim_target=mips ;;
  sh*-*-*)		sim_target=sh ;; 
  powerpc*-*-eabi* | powerpc*-*-solaris* | powerpc*-*-sysv4* | powerpc*-*-elf* )
			if test x"$powerpc_sim" = x"yes"; then sim_target=ppc; fi ;;
  w65-*-*)		sim_target=w65 ;;
  z8k*-*-*)		sim_target=z8k ;;
  sparc*-*-*)		case "${host}" in	# don't build for non Unix systems
			  *-*-go32)	sim_target=none ;;
			  *-*-winnt)	sim_target=none ;;
			  *-*-cygwin32)	sim_target=none ;;
  			  *)
				# The SPARC simulator can only be compiled
				# by gcc.  Highly bogus, but just skip
				# building it for now.
				if test "${GCC}" = "yes"; then
				  sim_target=erc32
				else
				  sim_target=non
				fi
				;;
  			esac ;;
  *)			sim_target=none ;;
esac

configdirs=${sim_target}
AC_CONFIG_SUBDIRS($configdirs)

AC_OUTPUT(Makefile)

exit 0

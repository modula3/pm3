# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.48 89/10/10 18:33:21 jim Exp $

CPU_TYPE = mips
ARCH     = DS3100

UILIB     = -lm3ui -lm3X11 -lX11 -lpropertyset -lm3table
SHOWHEAP  = /proj/cra/ultrix/$(CPU_TYPE)/lib/m3/ShowHeap.io \
            /proj/cra/ultrix/$(CPU_TYPE)/lib/m3/ShowHeap.mo
X11LIBS   = -L/src/mips/lib -lXaw -lXmu -lXext -lXt -lX11
M3X11LIBS = -lm3Xaw -lm3Xt -lm3X11 $(X11LIBS)

all::

M3        = m3xx
M3FLAGS   = -w1 -make -why
M3OPT     = -g
M3DEFPATH =
M3LIBPATH =
DO_M3     = $(M3) $(M3FLAGS) $(M3OPT) $(M3DEFPATH) $(M3LIBPATH)

.pkgs:: m3makefile ;\
  @echo "building import links..." ;\
  /bin/rm -rf .pkgs ;\
  mkdir .pkgs ;\
  pkgnames="$(PACKAGES)" ;\
  for PKG in $$pkgnames; do (\
     echo "   " $$PKG ;\
     m3mkpath .pkgs/$$PKG ;\
     /bin/rm -f .pkgs/$$PKG ;\
     ln -s  /proj/packages/m3$$PKG .pkgs/$$PKG \
  ); done

wrap::
unwrap::

M3      = m3xx -Y0@/udir/kalsow/m3/m3compiler/mips/m3compiler@
M3FLAGS =
COMPILE = $(M3) -g -w1 -D../.. -o a.out ../libtest.a

all::
new_base::
tidy::
scratch::

libtest.a: ../Test.i3 ../Test.m3 ; $(M3) -a libtest.a ../Test.i3 ../Test.m3
scratch:: ; -rm -f libtest.a Test.io Test.mo

all:: r001_X
new_base:: r001_base
scratch:: ; -rm -fr r001_X
r001:: r001_X
r001_base:: r001_X ; @mv r001_X/stdout r001_X/stderr r001
r001_X:: libtest.a FRC ;\
-@ echo --- r001 ---  "unhandled exception"  ;\
   rm -fr r001_X ;\
   mkdir r001_X ;\
   (cd r001_X ;\
     $(COMPILE) ../r001 >stdout ;\
     a.out >>stdout ) 2>r001_X/stderr ;\
   diff r001/stdout r001_X/stdout ;\
   diff r001/stderr r001_X/stderr ;\
   rm -f r001_X/a.out r001_X/core

all:: r002_X
new_base:: r002_base
scratch:: ; -rm -fr r002_X
r002:: r002_X
r002_base:: r002_X ; @mv r002_X/stdout r002_X/stderr r002
r002_X:: libtest.a FRC ;\
-@ echo --- r002 ---  "stack overflow in the main thread"  ;\
   rm -fr r002_X ;\
   mkdir r002_X ;\
   (cd r002_X ;\
     $(COMPILE) ../r002 >stdout ;\
     a.out >>stdout ) 2>r002_X/stderr ;\
   diff r002/stdout r002_X/stdout ;\
   diff r002/stderr r002_X/stderr ;\
   rm -f r002_X/a.out r002_X/core

all:: r003_X
new_base:: r003_base
scratch:: ; -rm -fr r003_X
r003:: r003_X
r003_base:: r003_X ; @mv r003_X/stdout r003_X/stderr r003
r003_X:: libtest.a FRC ;\
-@ echo --- r003 ---  "b3tests/b002 - improper size for an open array parameter"  ;\
   rm -fr r003_X ;\
   mkdir r003_X ;\
   (cd r003_X ;\
     $(COMPILE) ../r003 >stdout ;\
     a.out >>stdout ) 2>r003_X/stderr ;\
   diff r003/stdout r003_X/stdout ;\
   diff r003/stderr r003_X/stderr ;\
   rm -f r003_X/a.out r003_X/core

all:: r004_X
new_base:: r004_base
scratch:: ; -rm -fr r004_X
r004:: r004_X
r004_base:: r004_X ; @mv r004_X/stdout r004_X/stderr r004
r004_X:: libtest.a FRC ;\
-@ echo --- r004 ---  "negative size for an open array"  ;\
   rm -fr r004_X ;\
   mkdir r004_X ;\
   (cd r004_X ;\
     $(COMPILE) ../r004 >stdout ;\
     a.out >>stdout ) 2>r004_X/stderr ;\
   diff r004/stdout r004_X/stdout ;\
   diff r004/stderr r004_X/stderr ;\
   rm -f r004_X/a.out r004_X/core

tidy::    ; find . -type d -print -exec m3tidy {} \;
scratch:: ; find . -type d -print -exec m3scratch {} \;
scratch:: ; /bin/rm -f .ship

create::         ; createpackage $(PACKAGE)
lock::           ; setlockpackage $(PACKAGE)
get::            ; getpackage $(PACKAGE)
unlock::         ; unlockpackage $(PACKAGE)
ship::  tidy     ; shippackage $(PACKAGE) $(EXPORT)

install:: all ship unlock

checkin::     ; vmake -noeval ; vmake -ci < /dev/null
checkout::    ; vmake -co $(PACKAGE) < /dev/null
vestacreate:: ; vmake -co $(PACKAGE).1

FRC:


#
# This file was based on t-sol2 - x68 Solaris implementation. Actually,
# the source code to create crti.o anf crtn.o are exactly the same 
# as the ones for Solaris. Later, we might want to have a RTEMS's 
# version of these files.
#

crti.o: $(srcdir)/config/i386/sol2-ci.asm $(GCC_PASSES)
	sed -e '/^!/d' <$(srcdir)/config/i386/sol2-ci.asm >crti.s
	$(GCC_FOR_TARGET) -c -o crti.o crti.s
crtn.o: $(srcdir)/config/i386/sol2-cn.asm $(GCC_PASSES)
	sed -e '/^!/d' <$(srcdir)/config/i386/sol2-cn.asm >crtn.s
	$(GCC_FOR_TARGET) -c -o crtn.o crtn.s

# We want fine grained libraries, so use the new code to build the
# floating point emulation libraries.
FPBIT = fp-bit.c
DPBIT = dp-bit.c

LIB2FUNCS_EXTRA = xp-bit.c

dp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#ifdef __LITTLE_ENDIAN__' > dp-bit.c
	echo '#define FLOAT_BIT_ORDER_MISMATCH' >>dp-bit.c
	echo '#endif'           >> dp-bit.c
	cat $(srcdir)/config/fp-bit.c >> dp-bit.c

fp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#define FLOAT' > fp-bit.c
	echo '#ifdef __LITTLE_ENDIAN__' >> fp-bit.c
	echo '#define FLOAT_BIT_ORDER_MISMATCH' >>fp-bit.c
	echo '#endif'           >> fp-bit.c
	cat $(srcdir)/config/fp-bit.c >> fp-bit.c

xp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#define EXTENDED_FLOAT_STUBS' > xp-bit.c
	cat $(srcdir)/config/fp-bit.c >> xp-bit.c

MULTILIB_OPTIONS = mcpu=i486/mcpu=pentium/mcpu=pentiumpro/mcpu=k6/mcpu=athlon \
msoft-float mno-fp-ret-in-387
MULTILIB_DIRNAMES= m486 mpentium mpentiumpro k6 athlon soft-float nofp
MULTILIB_MATCHES = msoft-float=mno-m80387
MULTILIB_EXCEPTIONS = \
mno-fp-ret-in-387 \
mcpu=i486/*mno-fp-ret-in-387* \
mcpu=pentium/*msoft-float* mcpu=pentium/*mno-fp-ret-in-387* \
mcpu=pentiumpro/*msoft-float* mcpu=pentiumpro/*mno-fp-ret-in-387* \
mcpu=k6/*msoft-float* mcpu=k6/*mno-fp-ret-in-387* \
mcpu=athlon/*msoft-float* mcpu=athlon/*mno-fp-ret-in-387*

EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o

LIBGCC = stmp-multilib
INSTALL_LIBGCC = install-multilib

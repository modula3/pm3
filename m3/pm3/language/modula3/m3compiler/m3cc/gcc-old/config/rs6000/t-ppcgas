# Do not build libgcc1.
LIBGCC1 =
CROSS_LIBGCC1 =

EXTRA_HEADERS = $(srcdir)/ginclude/ppc-asm.h

# These are really part of libgcc1, but this will cause them to be
# built correctly, so... [taken from t-sparclite]
LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c eabi.S eabi-ctors.c

dp-bit.c: $(srcdir)/config/fp-bit.c
	cat $(srcdir)/config/fp-bit.c > dp-bit.c

fp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#define FLOAT' > fp-bit.c
	cat $(srcdir)/config/fp-bit.c >> fp-bit.c

eabi.S: $(srcdir)/config/rs6000/eabi.asm
	cat $(srcdir)/config/rs6000/eabi.asm > eabi.S

eabi-ctors.c: $(srcdir)/config/rs6000/eabi-ctors.c
	cat $(srcdir)/config/rs6000/eabi-ctors.c > eabi-ctors.c

# Build libgcc.a with different options.

MULTILIB_OPTIONS	= msoft-float \
			  mlittle/mbig \
			  mcall-sysv/mcall-aix/mcall-solaris/mcall-linux

MULTILIB_DIRNAMES	= nof \
			  le be \
			  cs ca sol lin

MULTILIB_MATCHES	= mlittle=mlittle-endian \
			  mbig=mbig-endian \
			  mbig=mcall-linux \
			  msoft-float=mcpu?403 \
			  msoft-float=mcpu?821 \
			  msoft-float=mcpu?860 \
			  mcall-sysv=mcall-solaris \
			  mcall-sysv=mcall-sysv-eabi \
			  mcall-sysv=mcall-sysv-noeabi

MULTILIB_EXTRA_OPTS	= mrelocatable-lib mno-eabi
MULTILIB_EXCEPTIONS	= *mbig/*mcall-solaris* \
			  *mlittle/*mcall-solaris* \
			  *msoft-float/*mcall-solaris* \
			  *mbig/*mcall-linux* \
			  *mlittle/*mcall-linux* \
			  *msoft-float/*mcall-linux*

LIBGCC = stmp-multilib stmp-crt
INSTALL_LIBGCC = install-multilib install-crt

# For eabigas we build {e,s}crti.o and {e,s}crtn.o which serve to add begin and
# end labels to all of the special sections used when we link using gcc.

# Assemble startup files.
ecrti.S: $(srcdir)/config/rs6000/eabi-ci.asm
	cat $(srcdir)/config/rs6000/eabi-ci.asm >ecrti.S

ecrtn.S: $(srcdir)/config/rs6000/eabi-cn.asm
	cat $(srcdir)/config/rs6000/eabi-cn.asm >ecrtn.S

scrti.S: $(srcdir)/config/rs6000/sol-ci.asm
	cat $(srcdir)/config/rs6000/sol-ci.asm >scrti.S

scrtn.S: $(srcdir)/config/rs6000/sol-cn.asm
	cat $(srcdir)/config/rs6000/sol-cn.asm >scrtn.S

scrt0.c: $(srcdir)/config/rs6000/sol-c0.c
	cat $(srcdir)/config/rs6000/sol-c0.c >scrt0.c

# Build multiple copies of crt{i,n}.o, one for each target switch.
stmp-crt: ecrti.S ecrtn.S scrti.S scrtn.S scrt0.c $(GCC_PASSES) $(EXTRA_HEADERS) stmp-multilib config.status
	for i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \
	  dir=`echo $$i | sed -e 's/;.*$$//'`; \
	  flags=`echo $$i | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`; \
	  $(MAKE) GCC_FOR_TARGET="$(GCC_FOR_TARGET)" \
	    LIBGCC2_CFLAGS="$(LIBGCC2_CFLAGS) $${flags}" \
	    dir="$${dir}" stmp-crt-sub; \
	  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \
	done
	touch stmp-crt

# Subroutine of stmp-crt so make -n works.
stmp-crt-sub:
	$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/ecrti.o ecrti.S
	$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/ecrtn.o ecrtn.S
	$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrti.o scrti.S
	$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrtn.o scrtn.S
	$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrt0.o scrt0.c

# Install multiple versions of crt[in].o
install-crt: stmp-crt install-dir install-multilib
	for i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \
	  dir=`echo $$i | sed -e 's/;.*$$//'`; \
	  rm -f $(libsubdir)/$${dir}/[es]crt[in0].o; \
	  $(INSTALL_DATA) $${dir}/ecrti.o $(libsubdir)/$${dir}/ecrti.o; \
	  $(INSTALL_DATA) $${dir}/ecrtn.o $(libsubdir)/$${dir}/ecrtn.o; \
	  $(INSTALL_DATA) $${dir}/scrti.o $(libsubdir)/$${dir}/scrti.o; \
	  $(INSTALL_DATA) $${dir}/scrtn.o $(libsubdir)/$${dir}/scrtn.o; \
	  $(INSTALL_DATA) $${dir}/scrt0.o $(libsubdir)/$${dir}/scrt0.o; \
	done
